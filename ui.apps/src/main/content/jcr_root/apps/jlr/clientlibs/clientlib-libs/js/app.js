/* 
 * 	Author:		Connect Group
 * 	Website:	connect-group.com
 * 
 * 	Title:		LRDX
 * 	Build:		2021-03-03 08:25:46
 * 
 */
function _toConsumableArray(a) {
    if (Array.isArray(a)) {
        for (var b = 0, c = Array(a.length); b < a.length; b++) c[b] = a[b];
        return c
    }
    return Array.from(a)
}

function _possibleConstructorReturn(a, b) {
    if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return !b || "object" != typeof b && "function" != typeof b ? a : b
}

function _inherits(a, b) {
    if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
    a.prototype = Object.create(b && b.prototype, {
        constructor: {
            value: a,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
}

function _classCallCheck(a, b) {
    if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
}

function LoadRichMarker() {
    function a(a) {
        var c = a || {};
        this.ready_ = !1, this.dragging_ = !1, void 0 == a.visible && (a.visible = !0), void 0 == a.shadow && (a.shadow = "7px -3px 5px rgba(88,88,88,0.7)"), void 0 == a.anchor && (a.anchor = b.BOTTOM), this.setValues(c)
    }
    a.prototype = new google.maps.OverlayView, window.RichMarker = a, a.prototype.getVisible = function() {
        return this.get("visible")
    }, a.prototype.getVisible = a.prototype.getVisible, a.prototype.setVisible = function(a) {
        this.set("visible", a)
    }, a.prototype.setVisible = a.prototype.setVisible, a.prototype.visible_changed = function() {
        this.ready_ && (this.markerWrapper_.style.display = this.getVisible() ? "" : "none", this.draw())
    }, a.prototype.visible_changed = a.prototype.visible_changed, a.prototype.setFlat = function(a) {
        this.set("flat", !!a)
    }, a.prototype.setFlat = a.prototype.setFlat, a.prototype.getFlat = function() {
        return this.get("flat")
    }, a.prototype.getFlat = a.prototype.getFlat, a.prototype.getWidth = function() {
        return this.get("width")
    }, a.prototype.getWidth = a.prototype.getWidth, a.prototype.getHeight = function() {
        return this.get("height")
    }, a.prototype.getHeight = a.prototype.getHeight, a.prototype.setShadow = function(a) {
        this.set("shadow", a), this.flat_changed()
    }, a.prototype.setShadow = a.prototype.setShadow, a.prototype.getShadow = function() {
        return this.get("shadow")
    }, a.prototype.getShadow = a.prototype.getShadow, a.prototype.flat_changed = function() {
        this.ready_ && (this.markerWrapper_.style.boxShadow = this.markerWrapper_.style.webkitBoxShadow = this.markerWrapper_.style.MozBoxShadow = this.getFlat() ? "" : this.getShadow())
    }, a.prototype.flat_changed = a.prototype.flat_changed, a.prototype.setZIndex = function(a) {
        this.set("zIndex", a)
    }, a.prototype.setZIndex = a.prototype.setZIndex, a.prototype.getZIndex = function() {
        return this.get("zIndex")
    }, a.prototype.getZIndex = a.prototype.getZIndex, a.prototype.zIndex_changed = function() {
        this.getZIndex() && this.ready_ && (this.markerWrapper_.style.zIndex = this.getZIndex())
    }, a.prototype.zIndex_changed = a.prototype.zIndex_changed, a.prototype.getDraggable = function() {
        return this.get("draggable")
    }, a.prototype.getDraggable = a.prototype.getDraggable, a.prototype.setDraggable = function(a) {
        this.set("draggable", !!a)
    }, a.prototype.setDraggable = a.prototype.setDraggable, a.prototype.draggable_changed = function() {
        this.ready_ && (this.getDraggable() ? this.addDragging_(this.markerWrapper_) : this.removeDragListeners_())
    }, a.prototype.draggable_changed = a.prototype.draggable_changed, a.prototype.getPosition = function() {
        return this.get("position")
    }, a.prototype.getPosition = a.prototype.getPosition, a.prototype.setPosition = function(a) {
        this.set("position", a)
    }, a.prototype.setPosition = a.prototype.setPosition, a.prototype.position_changed = function() {
        this.draw()
    }, a.prototype.position_changed = a.prototype.position_changed, a.prototype.getAnchor = function() {
        return this.get("anchor")
    }, a.prototype.getAnchor = a.prototype.getAnchor, a.prototype.setAnchor = function(a) {
        this.set("anchor", a)
    }, a.prototype.setAnchor = a.prototype.setAnchor, a.prototype.anchor_changed = function() {
        this.draw()
    }, a.prototype.anchor_changed = a.prototype.anchor_changed, a.prototype.htmlToDocumentFragment_ = function(a) {
        var b = document.createElement("DIV");
        if (b.innerHTML = a, 1 == b.childNodes.length) return b.removeChild(b.firstChild);
        for (var c = document.createDocumentFragment(); b.firstChild;) c.appendChild(b.firstChild);
        return c
    }, a.prototype.removeChildren_ = function(a) {
        if (a)
            for (var b; b = a.firstChild;) a.removeChild(b)
    }, a.prototype.setContent = function(a) {
        this.set("content", a)
    }, a.prototype.setContent = a.prototype.setContent, a.prototype.getContent = function() {
        return this.get("content")
    }, a.prototype.getContent = a.prototype.getContent, a.prototype.content_changed = function() {
        if (this.markerContent_) {
            this.removeChildren_(this.markerContent_);
            var a = this.getContent();
            if (a) {
                "string" == typeof a && (a = a.replace(/^\s*([\S\s]*)\b\s*$/, "$1"), a = this.htmlToDocumentFragment_(a)), this.markerContent_.appendChild(a);
                for (var b, c = this, d = this.markerContent_.getElementsByTagName("IMG"), e = 0; b = d[e]; e++) google.maps.event.addDomListener(b, "mousedown", function(a) {
                    c.getDraggable() && (a.preventDefault && a.preventDefault(), a.returnValue = !1)
                }), google.maps.event.addDomListener(b, "load", function() {
                    c.draw()
                });
                google.maps.event.trigger(this, "domready")
            }
            this.ready_ && this.draw()
        }
    }, a.prototype.content_changed = a.prototype.content_changed, a.prototype.setCursor_ = function(a) {
        if (this.ready_) {
            var b = ""; - 1 !== navigator.userAgent.indexOf("Gecko/") ? ("dragging" == a && (b = "-moz-grabbing"), "dragready" == a && (b = "-moz-grab"), "draggable" == a && (b = "pointer")) : (("dragging" == a || "dragready" == a) && (b = "move"), "draggable" == a && (b = "pointer")), this.markerWrapper_.style.cursor != b && (this.markerWrapper_.style.cursor = b)
        }
    }, a.prototype.startDrag = function(a) {
        if (this.getDraggable() && !this.dragging_) {
            this.dragging_ = !0;
            var b = this.getMap();
            this.mapDraggable_ = b.get("draggable"), b.set("draggable", !1), this.mouseX_ = a.clientX, this.mouseY_ = a.clientY, this.setCursor_("dragready"), this.markerWrapper_.style.MozUserSelect = "none", this.markerWrapper_.style.KhtmlUserSelect = "none", this.markerWrapper_.style.WebkitUserSelect = "none", this.markerWrapper_.unselectable = "on", this.markerWrapper_.onselectstart = function() {
                return !1
            }, this.addDraggingListeners_(), google.maps.event.trigger(this, "dragstart")
        }
    }, a.prototype.stopDrag = function() {
        this.getDraggable() && this.dragging_ && (this.dragging_ = !1, this.getMap().set("draggable", this.mapDraggable_), this.mouseX_ = this.mouseY_ = this.mapDraggable_ = null, this.markerWrapper_.style.MozUserSelect = "", this.markerWrapper_.style.KhtmlUserSelect = "", this.markerWrapper_.style.WebkitUserSelect = "", this.markerWrapper_.unselectable = "off", this.markerWrapper_.onselectstart = function() {}, this.removeDraggingListeners_(), this.setCursor_("draggable"), google.maps.event.trigger(this, "dragend"), this.draw())
    }, a.prototype.drag = function(a) {
        if (!this.getDraggable() || !this.dragging_) return void this.stopDrag();
        var b = this.mouseX_ - a.clientX,
            c = this.mouseY_ - a.clientY;
        this.mouseX_ = a.clientX, this.mouseY_ = a.clientY;
        var d = parseInt(this.markerWrapper_.style.left, 10) - b,
            e = parseInt(this.markerWrapper_.style.top, 10) - c;
        this.markerWrapper_.style.left = d + "px", this.markerWrapper_.style.top = e + "px";
        var f = this.getOffset_(),
            g = new google.maps.Point(d - f.width, e - f.height),
            h = this.getProjection();
        this.setPosition(h.fromDivPixelToLatLng(g)), this.setCursor_("dragging"), google.maps.event.trigger(this, "drag")
    }, a.prototype.removeDragListeners_ = function() {
        this.draggableListener_ && (google.maps.event.removeListener(this.draggableListener_), delete this.draggableListener_), this.setCursor_("")
    }, a.prototype.addDragging_ = function(a) {
        if (a) {
            var b = this;
            this.draggableListener_ = google.maps.event.addDomListener(a, "mousedown", function(a) {
                b.startDrag(a)
            }), this.setCursor_("draggable")
        }
    }, a.prototype.addDraggingListeners_ = function() {
        var a = this;
        this.markerWrapper_.setCapture ? (this.markerWrapper_.setCapture(!0), this.draggingListeners_ = [google.maps.event.addDomListener(this.markerWrapper_, "mousemove", function(b) {
            a.drag(b)
        }, !0), google.maps.event.addDomListener(this.markerWrapper_, "mouseup", function() {
            a.stopDrag(), a.markerWrapper_.releaseCapture()
        }, !0)]) : this.draggingListeners_ = [google.maps.event.addDomListener(window, "mousemove", function(b) {
            a.drag(b)
        }, !0), google.maps.event.addDomListener(window, "mouseup", function() {
            a.stopDrag()
        }, !0)]
    }, a.prototype.removeDraggingListeners_ = function() {
        if (this.draggingListeners_) {
            for (var a, b = 0; a = this.draggingListeners_[b]; b++) google.maps.event.removeListener(a);
            this.draggingListeners_.length = 0
        }
    }, a.prototype.getOffset_ = function() {
        var a = this.getAnchor();
        if ("object" == ("undefined" == typeof a ? "undefined" : _typeof(a))) return a;
        var c = new google.maps.Size(0, 0);
        if (!this.markerContent_) return c;
        var d = this.markerContent_.offsetWidth,
            e = this.markerContent_.offsetHeight;
        switch (a) {
            case b.TOP_LEFT:
                break;
            case b.TOP:
                c.width = -d / 2;
                break;
            case b.TOP_RIGHT:
                c.width = -d;
                break;
            case b.LEFT:
                c.height = -e / 2;
                break;
            case b.MIDDLE:
                c.width = -d / 2, c.height = -e / 2;
                break;
            case b.RIGHT:
                c.width = -d, c.height = -e / 2;
                break;
            case b.BOTTOM_LEFT:
                c.height = -e;
                break;
            case b.BOTTOM:
                c.width = -d / 2, c.height = -e;
                break;
            case b.BOTTOM_RIGHT:
                c.width = -d, c.height = -e
        }
        return c
    }, a.prototype.onAdd = function() {
        if (this.markerWrapper_ || (this.markerWrapper_ = document.createElement("DIV"), this.markerWrapper_.style.position = "absolute"), this.getZIndex() && (this.markerWrapper_.style.zIndex = this.getZIndex()), this.markerWrapper_.style.display = this.getVisible() ? "" : "none", !this.markerContent_) {
            this.markerContent_ = document.createElement("DIV"), this.markerWrapper_.appendChild(this.markerContent_);
            var a = this;
            google.maps.event.addDomListener(this.markerContent_, "click", function(b) {
                google.maps.event.trigger(a, "click")
            }), google.maps.event.addDomListener(this.markerContent_, "mouseover", function(b) {
                google.maps.event.trigger(a, "mouseover")
            }), google.maps.event.addDomListener(this.markerContent_, "mouseout", function(b) {
                google.maps.event.trigger(a, "mouseout")
            })
        }
        this.ready_ = !0, this.content_changed(), this.flat_changed(), this.draggable_changed();
        var b = this.getPanes();
        b && b.overlayMouseTarget.appendChild(this.markerWrapper_), google.maps.event.trigger(this, "ready")
    }, a.prototype.onAdd = a.prototype.onAdd, a.prototype.draw = function() {
        if (this.ready_ && !this.dragging_) {
            var a = this.getProjection();
            if (a) {
                var b = this.get("position"),
                    c = a.fromLatLngToDivPixel(b),
                    d = this.getOffset_();
                this.markerWrapper_.style.top = c.y + d.height + "px", this.markerWrapper_.style.left = c.x + d.width + "px";
                var e = this.markerContent_.offsetHeight,
                    f = this.markerContent_.offsetWidth;
                f != this.get("width") && this.set("width", f), e != this.get("height") && this.set("height", e)
            }
        }
    }, a.prototype.draw = a.prototype.draw, a.prototype.onRemove = function() {
        this.markerWrapper_ && this.markerWrapper_.parentNode && this.markerWrapper_.parentNode.removeChild(this.markerWrapper_), this.removeDragListeners_()
    }, a.prototype.onRemove = a.prototype.onRemove;
    var b = {
        TOP_LEFT: 1,
        TOP: 2,
        TOP_RIGHT: 3,
        LEFT: 4,
        MIDDLE: 5,
        RIGHT: 6,
        BOTTOM_LEFT: 7,
        BOTTOM: 8,
        BOTTOM_RIGHT: 9
    };
    window.RichMarkerPosition = b
}

function _isLast(a, b) {
    return a === b.length - 1
}

function _isInteger(a) {
    return /^\d+$/.test(a)
}

function _toString(a) {
    return "string" == typeof a.__default ? a.__default : "ResourceBundle " + JSON.stringify(a)
}

function _message(a, b) {
    for (var c = arguments.length, d = Array(c > 2 ? c - 2 : 0), e = 2; c > e; e++) d[e - 2] = arguments[e];
    var f = b.split(".").reduce(function(a, b) {
        return a ? a[b] : a
    }, a);
    "object" === ("undefined" == typeof f ? "undefined" : _typeof(f)) && f.hasOwnProperty("__default") && (f = f.__default);
    var g = "object" === ("undefined" == typeof f ? "undefined" : _typeof(f)) ? void 0 : f;
    if ("string" == typeof g)
        for (var h = function(a) {
                g = g.replace(new RegExp("\\{" + a + "\\}", "g"), function() {
                    return d[a]
                }), g = g.replace(new RegExp("\\$\\$" + a + "\\$\\$", "g"), function() {
                    return d[a]
                })
            }, i = 0; i < d.length; i++) h(i);
    return g
}

function _createArray(a) {
    var b = [];
    return b.message = function(a) {
        for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; c > e; e++) d[e - 1] = arguments[e];
        return _message(b, a, d)
    }, b.toString = function() {
        return _toString(b)
    }, "undefined" != typeof a && (b.__default = a), b
}

function _createObjectOrArray(a, b, c) {
    return _isInteger(a[b + 1]) ? _createArray(c) : new ResourceBundle("undefined" == typeof c ? {} : {
        __default: c
    })
}
var _get = function a(b, c, d) {
        null === b && (b = Function.prototype);
        var e = Object.getOwnPropertyDescriptor(b, c);
        if (void 0 === e) {
            var f = Object.getPrototypeOf(b);
            return null === f ? void 0 : a(f, c, d)
        }
        if ("value" in e) return e.value;
        var g = e.get;
        return void 0 === g ? void 0 : g.call(d)
    },
    _slicedToArray = function() {
        function a(a, b) {
            var c = [],
                d = !0,
                e = !1,
                f = void 0;
            try {
                for (var g, h = a[Symbol.iterator](); !(d = (g = h.next()).done) && (c.push(g.value), !b || c.length !== b); d = !0);
            } catch (i) {
                e = !0, f = i
            } finally {
                try {
                    !d && h["return"] && h["return"]()
                } finally {
                    if (e) throw f
                }
            }
            return c
        }
        return function(b, c) {
            if (Array.isArray(b)) return b;
            if (Symbol.iterator in Object(b)) return a(b, c);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }(),
    _createClass = function() {
        function a(a, b) {
            for (var c = 0; c < b.length; c++) {
                var d = b[c];
                d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
            }
        }
        return function(b, c, d) {
            return c && a(b.prototype, c), d && a(b, d), b
        }
    }(),
    _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
        return typeof a
    } : function(a) {
        return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
    };
! function(a, b, c, d) {
    a.createComponent = function(c, e, f) {
        function g(a) {
            return "object" !== ("undefined" == typeof a ? "undefined" : _typeof(a)) || "Object" !== Object.prototype.toString.call(a).slice(8, -1)
        }

        function h(b, c, d) {
            var e = void 0,
                f = "";
            if (-1 !== c.indexOf(".")) f = ".";
            else {
                if (-1 === c.indexOf("#")) return;
                f = "#"
            }
            e = c.split(f), a(f + e[1], b.$element).off().on(e[0], function(a) {
                a.preventDefault(), b[d](a)
            }), b.registerEvent = h
        }

        function i(b) {
            b.uiElements = {}, b.ui = function(c) {
                return "undefined" != typeof b.uiElements[c] ? b.uiElements[c] : "undefined" != typeof b.uiSelectors[c] ? b.uiElements[c] = a(b.uiSelectors[c], b.$element) : null
            }
        }

        function j() {
            var c = this.options.parentComponent ? this.$parentComponent : this.$element;
            a(b).load(k.bind(this, c)), a(b).on("throttledScroll", k.bind(this, c))
        }

        function k(a) {
            var b = this.inViewport;
            this.inViewport = site.utils.elementInViewport(a, this.options.trackadjust, this.options.trackWindowInnerHeight) ? !0 : !1, this._onEnterViewport && b !== this.inViewport && this.inViewport ? this._onEnterViewport() : this._onExitViewport && b !== this.inViewport && !this.inViewport && this._onExitViewport()
        }

        function l(c, d) {
            var e = c.find("span[data-picture][data-background-image]").not("[data-picture-ignore]"),
                f = -(a(b).height() / 2),
                g = site.utils.elementInViewport(c, f, !1) ? !0 : !1;
            this.removeOnScroll = function() {
                d && d.removeOnScroll()
            };
            var h = this;
            0 === e.length && this.removeOnScroll(), g && 0 !== e.length && a.each(e, function(d, e) {
                var f = a(e),
                    i = [],
                    j = null;
                if ("true" === f.attr("data-filterby-orientation")) {
                    var k = "landscape";
                    f.height() > f.width() && (k = "portrait"), j = a('> span[data-orientation="' + k + '"]', f)
                } else j = a("> span", f);
                if (a.each(j, function(c, d) {
                        var e = a(d),
                            f = e.attr("data-media");
                        (!f || b.matchMedia && b.matchMedia(f).matches) && i.push(e)
                    }), g) {
                    var l = i.pop(),
                        m = l.data("src"),
                        n = l.parent(),
                        o = n.css("background-image"),
                        p = 'url("' + m + '")',
                        q = f.data("align");
                    "undefined" !== q && f.css("background-position", q), n.addClass("image backgroundImage"), -1 === o.indexOf(m) && (n.css({
                        "background-image": p
                    }), h.removeOnScroll()), c.trigger("lazyloading:complete")
                }
            })
        }
        if ("string" != typeof c || !c) return void console.log("Error: you must specify a valid plugin name on the first parameter of the method.", c);
        if (e === d || !e || g(e)) return void console.log("Error: you must specify a valid plugin implementation on the second parameter of the method.", e);
        if ("function" == typeof a.fn[c]) return void console.log("Error: there's already a jQuery plugin defined with this name.", c, a.fn[c].constructor);
        "function" != typeof Object.create && (Object.create = function(a) {
            function b() {}
            return b.prototype = a, new b
        });
        var m = {
            _name: "",
            _defaults: {
                trackadjust: 0,
                trackWindowInnerHeight: !1
            },
            _init: function(c, d, e) {
                var g = this,
                    k = this;
                if (this.ok = !1, this._name = c, this.element = d, this.$element = a(d), this.options = f ? a.extend(!0, {}, this._defaults, e) : a.extend({}, this._defaults, e), this.inViewport = !1, this.uid = this.getUID(), this.events && a.each(this.events, function(a, b) {
                        h(k, a, b)
                    }), !this.$element.is("body, #content")) {
                    var m = site.utils.throttle(l, 500, this);
                    a(b).on("scroll." + this.uid, function() {
                        m(g.$element)
                    }), a(b).on("lazyload", function() {
                        l(g.$element, g)
                    }), a(b).smartresize(function() {
                        l(g.$element, g)
                    }), l(this.$element, this)
                }
                this.uiSelectors && i(k), this.options.trackInViewport && j.apply(this), site.rtl === !0 && "function" == typeof this.init_rtl && this.init_rtl(), "function" == typeof this.init && this.init()
            },
            removeOnScroll: function() {
                a(b).off("scroll." + this.uid)
            },
            getUID: function() {
                return "id-" + Math.random().toString(36).substr(2, 16)
            }
        };
        a.fn[c] = function(b) {
            var f, g = Array.prototype.slice.call(arguments, 1);
            return this.each(function() {
                var d = this,
                    h = (a(d), "component_" + c),
                    i = a.data(d, h);
                if (!i) {
                    var j = a.extend({}, m, e);
                    i = a.data(d, h, Object.create(j)), i && "function" == typeof i._init && i._init.apply(i, [c, d, b])
                }
                if (i && "string" == typeof b && "_" !== b[0] && "init" !== b) {
                    var k = "destroy" === b ? "_destroy" : b;
                    "function" == typeof i[k] && (f = i[k].apply(i, g)), "destroy" === b && a.data(d, h, null)
                }
            }), f !== d ? f : this
        }
    }
}(window.jQuery, window, document);
var MapFilters = function() {
        function a(b, c, d) {
            _classCallCheck(this, a), this.multiselection = d, this.classPrefix = c, this.element = b, this.filters = [], this.selectToggle = !1;
            var e = this.element.querySelector("." + this.classPrefix + "filters__container");
            if (null !== e && (this.elements = {
                    filtersContainer: this.element.querySelector("." + this.classPrefix + "filters__container"),
                    selectUnselectAll: this.element.querySelector("." + this.classPrefix + "filters__selectUnselectAll"),
                    applyFilters: this.element.querySelector("." + this.classPrefix + "filters__apply")
                }, this._addEvents(), this.elements.filtersContainer.classList.add("hide")), !d) {
                var f = this;
                document.addEventListener("click", function(a) {
                    var b = a.target;
                    do {
                        if (b === f.element) return;
                        b = b.parentNode
                    } while (b);
                    f.close()
                })
            }
            return {
                elements: this.elements,
                hide: this.hide.bind(this),
                show: this.show.bind(this),
                toggle: this.toggle.bind(this),
                close: this.close.bind(this),
                buildMenu: this.buildMenu.bind(this),
                getSelected: this.getSelected.bind(this),
                setSelected: this.setSelected.bind(this),
                enableItem: this.enableItem.bind(this),
                disableItem: this.disableItem.bind(this)
            }
        }
        return _createClass(a, [{
            key: "hide",
            value: function() {
                this.element.classList.add("hide")
            }
        }, {
            key: "show",
            value: function() {
                this.element.classList.remove("hide")
            }
        }, {
            key: "buildMenu",
            value: function(a, b) {
                var c = this;
                if (void 0 !== this.elements) {
                    for (var d = this, e = this.elements.filtersContainer.querySelector("ul li"), f = this.elements.filtersContainer.querySelector("ul"); f.firstChild;) f.removeChild(f.firstChild);
                    a.forEach(function(a) {
                        var g = e.cloneNode(!0),
                            h = "off",
                            i = !1;
                        if (g.querySelector("span").textContent = a.label, g.setAttribute("data-filter", a.filter), b) {
                            var j = !0,
                                k = !1,
                                l = void 0;
                            try {
                                for (var m, n = b[Symbol.iterator](); !(j = (m = n.next()).done); j = !0) {
                                    var o = m.value;
                                    a.filter === o && (i = !0)
                                }
                            } catch (p) {
                                k = !0, l = p
                            } finally {
                                try {
                                    !j && n["return"] && n["return"]()
                                } finally {
                                    if (k) throw l
                                }
                            }
                        }
                        i === !0 ? (g.classList.add(c.classPrefix + "filter--on"), h = "on", c.multiselection || (c.element.querySelector(".current-filter").textContent = a.label)) : g.classList.add(c.classPrefix + "filter--off"), a.active || c.multiselection || g.classList.add(c.classPrefix + "filter--disabled"), f.appendChild(g), c.filters.push({
                            filterValue: a.filter,
                            filterState: h,
                            filterItem: g
                        }), g.onclick = function() {
                            if (d.multiselection) {
                                if (g.classList.contains(c.classPrefix + "filter--on")) {
                                    g.classList.remove(c.classPrefix + "filter--on"), g.classList.add(c.classPrefix + "filter--off");
                                    var b = !0,
                                        e = !1,
                                        f = void 0;
                                    try {
                                        for (var h, i = c.filters[Symbol.iterator](); !(b = (h = i.next()).done); b = !0) {
                                            var j = h.value;
                                            a.filter === j.filterValue && (j.filterState = "off")
                                        }
                                    } catch (k) {
                                        e = !0, f = k
                                    } finally {
                                        try {
                                            !b && i["return"] && i["return"]()
                                        } finally {
                                            if (e) throw f
                                        }
                                    }
                                } else {
                                    g.classList.remove(c.classPrefix + "filter--off"), g.classList.add(c.classPrefix + "filter--on");
                                    var l = !0,
                                        m = !1,
                                        n = void 0;
                                    try {
                                        for (var o, p = c.filters[Symbol.iterator](); !(l = (o = p.next()).done); l = !0) {
                                            var q = o.value;
                                            a.filter === q.filterValue && (q.filterState = "on")
                                        }
                                    } catch (k) {
                                        m = !0, n = k
                                    } finally {
                                        try {
                                            !l && p["return"] && p["return"]()
                                        } finally {
                                            if (m) throw n
                                        }
                                    }
                                }
                                null !== c.elements.selectUnselectAll && c._setSelectUnselectState()
                            } else {
                                if (g.classList.contains(c.classPrefix + "filter--disabled")) return;
                                d.checkRadioButton(g, a.filter)
                            }
                        }
                    })
                }
            }
        }, {
            key: "getSelected",
            value: function() {
                var a = this,
                    b = [];
                return this.filters.forEach(function(c) {
                    c.filterItem.classList.contains(a.classPrefix + "filter--on") && b.push(c.filterValue)
                }), b
            }
        }, {
            key: "setSelected",
            value: function(a) {
                var b = this;
                this.filters.forEach(function(c) {
                    c.filterValue === a && b.checkRadioButton(c.filterItem, a)
                })
            }
        }, {
            key: "disableItem",
            value: function(a) {
                var b = this;
                this.filters.forEach(function(c) {
                    c.filterValue === a && c.filterItem.classList.add(b.classPrefix + "filter--disabled")
                })
            }
        }, {
            key: "enableItem",
            value: function(a) {
                var b = this;
                this.filters.forEach(function(c) {
                    c.filterValue === a && c.filterItem.classList.remove(b.classPrefix + "filter--disabled")
                })
            }
        }, {
            key: "checkRadioButton",
            value: function(a, b) {
                var c = this,
                    d = this.getSelected();
                this.filters.forEach(function(a) {
                    a.filterItem.classList.remove(c.classPrefix + "filter--on"), a.filterItem.classList.add(c.classPrefix + "filter--off")
                }), a.classList.remove(this.classPrefix + "filter--off"), a.classList.add(this.classPrefix + "filter--on"), d.indexOf(b) < 0 && this.element.dispatchEvent(new CustomEvent("filterClicked", {
                    bubbles: !0,
                    detail: {
                        filters: this.filters
                    }
                })), this.element.querySelector(".current-filter").textContent = a.querySelector("span").textContent
            }
        }, {
            key: "close",
            value: function() {
                this.element.classList.remove("active"), this.element.classList.add("inactive"), this.elements.filtersContainer.classList.add("hide")
            }
        }, {
            key: "toggle",
            value: function() {
                this.elements.filtersContainer.classList.contains("hide") ? (this.element.classList.remove("inactive"), this.element.classList.add("active"), this.elements.filtersContainer.classList.remove("hide")) : (this.element.classList.remove("active"), this.element.classList.add("inactive"), this.elements.filtersContainer.classList.add("hide"))
            }
        }, {
            key: "_addEvents",
            value: function() {
                var a = this;
                this.element.onclick = function(b) {
                    (b.target === a.element || b.target === a.element.querySelector("span")) && a.toggle()
                }, null !== this.elements.applyFilters && this.element.addEventListener("click", function(b) {
                    var c = a.elements.applyFilters.querySelector("span");
                    (b.target === a.elements.applyFilters || b.target === c) && (a.elements.applyFilters.classList.contains("inactive") || (a.elements.filtersContainer.classList.add("hide"), a.element.classList.remove("active"), a.element.classList.add("inactive"), a.element.dispatchEvent(new CustomEvent("filterClicked", {
                        bubbles: !0,
                        detail: {
                            filters: a.filters
                        }
                    }))))
                }), null !== this.elements.selectUnselectAll && this.elements.selectUnselectAll.addEventListener("click", function() {
                    a._toggleFilters(!a.selectToggle), a._setSelectUnselectState()
                })
            }
        }, {
            key: "_setSelectUnselectState",
            value: function() {
                var a = !0,
                    b = !0,
                    c = !0,
                    d = !1,
                    e = void 0;
                try {
                    for (var f, g = this.filters[Symbol.iterator](); !(c = (f = g.next()).done); c = !0) {
                        var h = f.value;
                        "on" === h.filterState && (b = !1), "off" === h.filterState && (a = !1)
                    }
                } catch (i) {
                    d = !0, e = i
                } finally {
                    try {
                        !c && g["return"] && g["return"]()
                    } finally {
                        if (d) throw e
                    }
                }
                a && (this.selectToggle = !0, this.elements.selectUnselectAll.classList.remove("active"), this.elements.selectUnselectAll.classList.add("inactive"), this.elements.selectUnselectAll.querySelector("span").textContent = "UNSELECT ALL"), b ? (this.selectToggle = !1, this.elements.selectUnselectAll.classList.remove("inactive"), this.elements.selectUnselectAll.classList.add("active"), this.elements.selectUnselectAll.querySelector("span").textContent = "SELECT ALL", this.elements.applyFilters.classList.add("inactive")) : this.elements.applyFilters.classList.remove("inactive")
            }
        }, {
            key: "_toggleFilters",
            value: function(a) {
                var b = !0,
                    c = !1,
                    d = void 0;
                try {
                    for (var e, f = this.filters[Symbol.iterator](); !(b = (e = f.next()).done); b = !0) {
                        var g = e.value;
                        g.filterState = a === !0 ? "on" : "off"
                    }
                } catch (h) {
                    c = !0, d = h
                } finally {
                    try {
                        !b && f["return"] && f["return"]()
                    } finally {
                        if (c) throw d
                    }
                }
                var i = !0,
                    j = !1,
                    k = void 0;
                try {
                    for (var l, m = this.elements.filtersContainer.querySelector("ul").children[Symbol.iterator](); !(i = (l = m.next()).done); i = !0) {
                        var n = l.value;
                        a ? (n.classList.remove(this.classPrefix + "filter--off"), n.classList.add(this.classPrefix + "filter--on")) : (n.classList.remove(this.classPrefix + "filter--on"), n.classList.add(this.classPrefix + "filter--off"))
                    }
                } catch (h) {
                    j = !0, k = h
                } finally {
                    try {
                        !i && m["return"] && m["return"]()
                    } finally {
                        if (j) throw k
                    }
                }
            }
        }]), a
    }(),
    MapLocation2Base = function() {
        function a(b, c) {
            _classCallCheck(this, a), this.cp = b, this.className = c, this.map = $("#map"), this.markers = [], this.userMarker = null, this.country = {}, this.isMobileNav = !1, this.isTouchDevice = !1, this.resize = !0, this.repositionMap = !0, this.apiReady = !1, this.disambiguationSearch = !1, this.mapDraggable = !0, this.bounds = [], this.inputSearch = !1, this.mapStyles = site.utils.googleMapStyles, this._mapDisabled = !1, this.directionMarkers = {
                start: !1,
                end: !1,
                icon: !1
            }, this.zeroResultsHeading = $(".zeroResultsHeading").text(), this.multipleResultsHeading = $(".multiLocationHeading").text(), this._directionsService = null, this._directionsRenderer = null, this._usersLocation = null, this._geocoder = null, this._directionsPanel = null, this._usersLocationText = null, this._eventLocationText = null, this._currentMarker = !1, this._currentRoute = !1, this._directionsTranslation = !1, this._language = null, this._market = null, this.$locations = null, this.$search = null, this.$searchInput = null, this._isJaguar = !1, this._clusterer = null, this._listViewText = null, this._mapViewText = null, this._userLocationId = null, this._userLocationComponent = null, this._oldMarkerId = null, this._currentMarkerId = null, this._bottomPanelShown = !1, this.hasDistances = !1, this.markerSelected = !1, this.disableDate = !1
        }
        return _createClass(a, [{
            key: "init",
            value: function() {
                this.$element = this.cp.$element;
                var a = $(".map-page-container", this.$element);
                this.$searchInput = $(".searchInput", this.$element), this.$search = $(".MapLocationSearchContainer", this.$element), this.$locations = $(".MapLocationCards", this.$element).find(".card");
                this.imageEls = $(".FullWidthCards").find(".width-2of3");
                var b = document.documentElement.lang; - 1 !== b.indexOf("-") && (this._language = b.split("-")[0], this._market = b.split("-")[1].toLowerCase()), 0 !== $("#jaguar").length && (this._isJaguar = !0), this._isArtOfPerformance = this.cp._isArtOfPerformance, this._isRideAndDrive = this.cp._isRideAndDrive, this._isItineraryMap = this.cp._isItineraryMap, this._hasSidePanel = $(".SideBarCards").length ? !0 : !1, this._searchOnTop = $(".MapLocationSearchFormContainerTop").length, this._directionsTranslation = this.$element.find(".MapLocationMap").attr("directions-txt"), this._directionsPanel = $(".directions-panel", this.$element), this._mapDisabled = this.$element.data("map-enabled") === !1, this._screenSize(), this._mapDisabled ? a.hide() : (this._mapHeight(), this._loadGoogleMaps()), this._hasSidePanel && (this._listViewText = $(".MapLocationTextKeys .listViewText").text(), this._mapViewText = $(".MapLocationTextKeys .mapViewText").text(), $(".map-mobile-menu__view").text(this._listViewText), $(".map-mobile-menu__view").addClass("icon-filter"), this._setSlidePanelButtonVisibility(), this.filtersElement = this.cp.element.querySelector(".filters"), this.sortersElement = this.cp.element.querySelector(".sorters"), this.filters = new MapFilters(this.filtersElement, ""), this.sorters = new MapFilters(this.sortersElement, ""), this.numberDisplayedPins = 0, this.$element.find(".MapLocationCard__cta-wrapper a").addClass("primaryLinkWithStyle")), this._setUpEvents()
            }
        }, {
            key: "_setSlidePanelButtonVisibility",
            value: function() {
                site.utils.isMobileDevice() ? $(".slide-panel-close").css("visibility", "visible") : $(".slide-panel-close").css("visibility", "hidden"), site.utils.isBreakpointSmall() && $(".slide-panel-close").css("visibility", "hidden")
            }
        }, {
            key: "_setUpEvents",
            value: function() {
                var a = this,
                    b = this;
                this._hasSidePanel && ($(".slide-panel-close").click(function(b) {
                    b.preventDefault(), a._toggleSidePanel()
                }), b._setUpCardEvents(), $(".bottom-panel__eventLocation").click(function(a) {
                    a.preventDefault();
                    var c = null !== b._userLocationId ? "&origin=" + encodeURI(b._userLocationId) : "";
                    window.open("https://www.google.com/maps/dir/?api=1" + c + "&destination=" + encodeURI($(this).attr("data-city")))
                }), $(".viewMapContainer").on("click tap", function(a) {
                    a.preventDefault(), "none" !== $(".map-mobile-menu").css("display") && b._toggleMapListView()
                }), $(".panelShare .share").on("click tap", function(a) {
                    a.stopPropagation()
                }), $(".map-mobile-menu__view").on("click tap", function(a) {
                    b._toggleMapListView(), b._toggleMapKey(!1), $("html, body").animate({
                        scrollTop: $(".map-page-container").offset().top
                    }, {
                        duration: 300,
                        progress: function() {
                            $(window).scroll()
                        }
                    })
                }), $(".map-mobile-menu__new-search").on("click tap", function(a) {
                    $(".slide-panel").hasClass("visible") && b._toggleMapListView(), b._toggleMapKey(!1), $("html, body").animate({
                        scrollTop: 0
                    }, 800)
                }), $(".map-mobile-menu__key").on("click", function(a) {
                    $(".slide-panel").hasClass("visible") && b._toggleMapListView(), b._toggleMapKey(), $("html, body").animate({
                        scrollTop: $(".map-page-container").offset().top
                    }, {
                        duration: 300,
                        progress: function() {
                            $(window).scroll()
                        }
                    })
                }), $(".bottom-panel__close").on("click", function(a) {
                    b._bottomPanelShown = !1, $(".map-mobile-menu_bottom-panel").css({
                        bottom: -200
                    }), b._unselectAllMarkers(), b._unselectAllCard(), b._unselectAllMarkersIconsFromCard(), setTimeout(function() {}, 300)
                }), $(".bottom-panel__container .primaryLinkWithStyle").on("click", function(a) {
                    a.preventDefault(), b._toggleMapListView()
                })), $(".searchAgainCTA, .searchAgainBtn", this.$element).on("click tap", function() {
                    a.$searchInput.val(""), $("html, body").animate({
                        scrollTop: a.$search.offset().top - $(".utility").height()
                    }, 800, function() {
                        b.$searchInput.focus()
                    })
                }), $(window).smartresize(function() {
                    a._mapDisabled || a._mapHeight(), a._screenSize(), a._alignErrorMessage()
                }), this._mapDisabled || (this._mapHeight(), this.resize && this.apiReady && this._centreMapOnCountry()), $(window).on("api:ready", function() {
                    a._alignErrorMessage(), a._mapDisabled || (a.apiReady = !0, a.infoBox = window.loadInfoBox(), a._setupDirections(), a._initMap()), $(".MapLocationSearch").on("submit", function(b) {
                        b.preventDefault(), a._removeError(), a.disambiguationSearch || !a._hasSidePanel ? a._geocodeInput() : a._autocompleteInput()
                    })
                }), $(window).scroll(function() {
                    $("#map-view").offset().top + $("#map-view").height() - ($(this).scrollTop() + $(this).height()) < 0 ? $(".map-mobile-menu_bottom-panel").css("position", "absolute") : $(".map-mobile-menu_bottom-panel").css("position", "fixed")
                })
            }
        }, {
            key: "_setUpCardEvents",
            value: function() {
                var a = this,
                    b = this;
                $(".card").click(function(b) {
                    a._findMarkerToHighlight($(b.currentTarget).parent().attr("id")), a._scrollToSlidePanelCard($(b.currentTarget).parent().attr("id"), null, !0)
                }), $(".card .eventInfo__location").click(function(a) {
                    a.preventDefault();
                    var c = null !== b._userLocationId ? "&origin=" + encodeURI(b._userLocationId) : "";
                    window.open("https://www.google.com/maps/dir/?api=1" + c + "&destination=" + encodeURI($(this).closest(".card").attr("data-city")))
                }), $(".eventContent .cta-primary").on("click", function(a) {
                    a.stopPropagation()
                })
            }
        }, {
            key: "_toggleMapKey",
            value: function(a) {
                switch (a) {
                    case !0:
                        $(".map-key").css("display", "block"), $(".map-mobile-menu__key").addClass("visible");
                        break;
                    case !1:
                        $(".map-key").css("display", "none"), $(".map-mobile-menu__key").removeClass("visible");
                        break;
                    default:
                        var b = $(".map-key").css("display");
                        $(".map-key").css("display", "none" === b ? "block" : "none"), $(".map-mobile-menu__key").hasClass("visible") ? $(".map-mobile-menu__key").removeClass("visible") : $(".map-mobile-menu__key").addClass("visible")
                }
            }
        }, {
            key: "_toggleMapListView",
            value: function() {
                $(".slide-panel").hasClass("visible") ? ($(".map-mobile-menu__view").removeClass("icon-map-pin-jaguar").addClass("icon-filter"), $(".map-mobile-menu__view").text(this._listViewText)) : ($(".map-mobile-menu__view").removeClass("icon-filter").addClass("icon-map-pin-jaguar"), $(".map-mobile-menu__view").text(this._mapViewText)), this._toggleSidePanel()
            }
        }, {
            key: "_getCardContainer",
            value: function(a) {
                return a.closest(".cardContainer")
            }
        }, {
            key: "_removeError",
            value: function() {
                $(".searchForm-error-container").css("display", "none"), $(".searchInput").removeClass("searchInput-error")
            }
        }, {
            key: "_loadGoogleMaps",
            value: function() {
                $(window).trigger("gmapsReady")
            }
        }, {
            key: "_initMap",
            value: function() {
                var a = this;
                this.directionMarkers.icon = new google.maps.MarkerImage("/resources/public/images/pin-red.png", new google.maps.Size(35, 45), new google.maps.Point(0, 0), new google.maps.Point(17, 45));
                var b = $("#map-controls", this.$element).find(".locate"),
                    c = this.$element.find(".card"),
                    d = c.attr("data-lat"),
                    e = c.attr("data-lng");
                if (site.utils.isMobileDevice() && (this.isTouchDevice = !0, this.mapDraggable = !1), this.latlng = new google.maps.LatLng(d, e), this.mapOptions = {
                        zoom: 12,
                        center: this.latlng,
                        disableDefaultUI: !0,
                        gestureHandling: "cooperative"
                    }, this.googleMap = new google.maps.Map(document.getElementById("map"), this.mapOptions), this._showZoomIcons(), this._centreMapOnCountry(), this.googleMap.setOptions({
                        styles: this.mapStyles
                    }), this._setupZoom(), this._toggleMapLock(), this.bounds = new google.maps.LatLngBounds, this._hasSidePanel) {
                    var f = this.$element.find(".slide-panel-holder");
                    this.dataFilters = JSON.parse(f.attr("data-filters")), this.dataSorters = JSON.parse(f.attr("data-sorters")), this.disableDate = f.attr("data-disable-date");
                    var g = [];
                    this.dataFilters.forEach(function(a) {
                        a.selected && g.push(a.key)
                    });
                    var h = [];
                    this.dataSorters.forEach(function(a) {
                        a.selected && h.push(a.key)
                    }), this.filters.buildMenu(this.dataFilters, g), "true" === this.disableDate && (this.dataSorters = this.dataSorters.filter(function(a) {
                        return "date" !== a.filter
                    })), this.sorters.buildMenu(this.dataSorters, h);
                    var i = this;
                    this.sortersElement.addEventListener("click", function(a) {
                        i.hasDistances ? i.sorters.enableItem("distance") : i.sorters.disableItem("distance")
                    }), null !== this.filtersElement && this.filtersElement.addEventListener("filterClicked", function(b) {
                        a._resetAllEventMarker(), a._addPins(), a._createMarkersClusterer(), a._usersLocation ? (a._nearestLocations(a._usersLocation), a._injectDistanceFromUserLocationInCards()) : a._centreMapOnCountry(), a._sort(), a.filters.close()
                    }), null !== this.sortersElement && this.sortersElement.addEventListener("filterClicked", function(b) {
                        a._usersLocation ? (a._nearestLocations(a._usersLocation), a._injectDistanceFromUserLocationInCards()) : a._centreMapOnCountry(), a._sort(), a.sorters.close()
                    })
                }
                this._addPins(), "false" === $(".MapLocation2").attr("disablegeolocation") ? (this._geolocation(), b.on("click", function() {
                    a._geolocation()
                })) : b.hide(), this._isItineraryMap && this._drawLines(), this._directionsRenderer && this._directionsRenderer.setMap(null), $(window).on("orientationchange", function() {
                    setTimeout(function() {
                        a._currentMarker && (a.googleMap.setCenter(a._currentMarker.getPosition()), $(window).height() < 350 ? a.googleMap.panBy(0, -5) : window.innerWidth <= 330 ? a.googleMap.panBy(0, -125) : a.googleMap.panBy(0, -200)), a._currentRoute && a.googleMap.fitBounds(a._currentRoute), a._setSlidePanelButtonVisibility()
                    }, 500)
                }), this._hasSidePanel && this._createMarkersClusterer()
            }
        }, {
            key: "_addPins",
            value: function() {
                var a = this;
                this.markerSelected = !1;
                var b = [],
                    c = this;
                this._resetAllEventMarker();
                var d = $(".MapLocationCards", this.$element).find(".card"),
                    e = !1,
                    f = $(".map-page-container").attr("pinnumbering"),
                    g = null !== this.filters && void 0 !== this.filters ? this.filters.getSelected() : null,
                    h = -1;
                d.each(function(a) {
                    var d = $(this).data("lat"),
                        i = $(this).data("lng"),
                        j = d + ", " + i,
                        k = new google.maps.LatLng(d, i),
                        l = $(this).closest(".cardContainer"),
                        m = l.attr("data-event-state");
                    if (null != g && g.indexOf(m) < 0) return void l.hide();
                    h++, (c._hasSidePanel || !l.hasClass("past")) && l.show();
                    var n = l.attr("id");
                    b.push(k), c.bounds.extend(k);
                    var o = $(this).data("image"),
                        p = $(this).data("image-alt"),
                        q = $(this).find(".eventName"),
                        r = $(this).find(".eventInfo"),
                        s = $(this).find(".coordinates"),
                        t = $(this).data("short-desc") ? $(this).data("short-desc") : "",
                        u = void 0;
                    $(this).parents(".MapLocationCards").hasClass("FullWidthCards") || c._isItineraryMap ? (u = $(this).find(".MapLocationCard__cta-wrapper").find(".FindOutMore").parent().clone(), u.find(".GalleryLink").remove(), u.find("a").attr("href", "#" + n), e = !0) : $(this).find(".cta-primary").text().length > 0 && (u = $(this).find(".cta-primary").parent().clone());
                    var v = l.hasClass("past") && ($(this).parents(".MapLocationCards").hasClass("GridCards") || $(this).parents(".MapLocationCards").hasClass("SideBarCards")) ? "past" : "future";
                    c._hasSidePanel || ("past" === v ? $(".pastEvent", this.$element).css({
                        display: "block"
                    }) : $(".futureEvent", this.$element).css({
                        display: "block"
                    }));
                    var w = new google.maps.Size(28, 38),
                        x = $(this).data("pin");
                    x.indexOf("Star") > -1 && (x = "/resources/public/images/TAOPT/TOAPT_pin_red_lineIn.png"), x = x.replace("svg", "png");
                    var y = {
                            text: (h + 1).toString(),
                            color: "white"
                        },
                        z = new google.maps.Point(14, 15);
                    if (site.utils.isLandRover() || c._hasSidePanel) {
                        var A = "white";
                        "past" === v ? (x = "/resources/public/images/ExperienceDriveMapAndLocator/map-pin-factory.png", A = "black") : x = "/resources/public/images/ExperienceDriveMapAndLocator/map-pin-experiences.png", y = site.utils.isLandRover() ? {
                            text: "" + (9 > h ? "0" : "") + (h + 1).toString(),
                            color: A,
                            fontFamily: "AvenirNext",
                            fontSize: "14px"
                        } : {
                            text: "" + (9 > h ? "0" : "") + (h + 1).toString(),
                            color: A,
                            fontWeight: "500",
                            fontFamily: "JLR Proxima Nova",
                            fontSize: "14px"
                        }, w = new google.maps.Size(54, 54), z = new google.maps.Point(27, 20)
                    }
                    y = "true" === f ? y : "";
                    var B = new google.maps.Marker({
                        position: k,
                        map: c.googleMap,
                        label: y,
                        id: n,
                        name: q,
                        eventStatus: v,
                        icon: {
                            url: x,
                            labelOrigin: z,
                            scaledSize: w
                        },
                        zIndex: parseInt(h + 1)
                    });
                    c._createInfoBox(B, x, v, o, p, q, r, t, s, u, j);
                    c.markers.push(B), google.maps.event.addListener(B, "click", function(a) {
                        return function() {
                            c._markerOnClick(this, a)
                        }
                    }(B))
                }), this.numberDisplayedPins = h + 1, this._setupFilterResultLabel(), this._setUpGlobalMapEvents(), this._addDir(b), this.repositionMap && $(window).on("geocodingComplete", function() {
                    a.googleMap.fitBounds(a.bounds), a._isItineraryMap && a.googleMap.setZoom(a.googleMap.zoom - 1)
                }), this._hasSidePanel && this._sort()
            }
        }, {
            key: "_sort",
            value: function() {
                this._sortCards(), this._sortPinNumbers()
            }
        }, {
            key: "_setupFilterResultLabel",
            value: function() {
                if (this._hasSidePanel) {
                    var a = this,
                        b = !0,
                        c = $(".MapLocationCards", this.$element).find(".filter_counter_label"),
                        d = "data-global-template",
                        e = c.attr("data-global-location-name") ? c.attr("data-global-location-name") : "United Kingdom";
                    null !== this._userLocationComponent && (e = this._generateFilterResultLocationLabel(), d = "data-area-template", b = !1);
                    var f = c.attr(d),
                        g = f.replace("%nb_tours%", this.numberDisplayedPins);
                    $(c).html(g.replace("%location%", "<a href='#' class='cta-primary'>" + e + "</a>")), $(c).find(".cta-primary").click(function(c) {
                        c.preventDefault(), b ? a._centreMapOnCountry() : a._nearestLocations(a._usersLocation)
                    })
                }
            }
        }, {
            key: "_generateFilterResultLocationLabel",
            value: function() {
                var a = [],
                    b = !1;
                return this._userLocationComponent.forEach(function(c) {
                    c.types.indexOf("postal_code") > -1 ? (b = !0, a = [], a.push(c.long_name)) : !b && (c.types.indexOf("route") > -1 || c.types.indexOf("postal_town") > -1) && a.push(c.long_name)
                }), a.join(", ")
            }
        }, {
            key: "_sortAlphabetically",
            value: function(a, b) {
                return b > a ? -1 : a > b ? 1 : 0
            }
        }, {
            key: "_sortCards",
            value: function() {
                var a = this,
                    b = null !== this.sorters && void 0 !== this.sorters ? this.sorters.getSelected()[0] : null,
                    c = $(".MapLocationCards", this.$element).find(".cardContainer"),
                    d = $(".cardList");
                switch (b) {
                    case "date":
                        c.sort(function(a, b) {
                            var c = new Date($(a).attr("data-event-date")),
                                d = new Date($(b).attr("data-event-date"));
                            return c.getTime() - d.getTime()
                        });
                        break;
                    case "alphabetical":
                        c.sort(function(b, c) {
                            var d = $(b).attr("data-event-name").toLowerCase(),
                                e = $(c).attr("data-event-name").toLowerCase();
                            return a._sortAlphabetically(d, e)
                        });
                        break;
                    case "alphabeticalreverse":
                        c.sort(function(b, c) {
                            var d = $(b).attr("data-event-name").toLowerCase(),
                                e = $(c).attr("data-event-name").toLowerCase();
                            return a._sortAlphabetically(d, e)
                        }), c.reverse();
                        break;
                    case "distance":
                        if (!this.hasDistances) return "true" === this.disableDate ? this.sorters.setSelected("alphabetical") : this.sorters.setSelected("date"), void this._sortCards();
                        c.sort(function(a, b) {
                            return parseFloat($(a).attr("data-event-distance")) - parseFloat($(b).attr("data-event-distance"))
                        })
                }
                c.detach().appendTo(d)
            }
        }, {
            key: "_sortPinNumbers",
            value: function() {
                if (!(this.markers.length < 1)) {
                    var a = this.markers.reduce(function(a, b) {
                            return a[b.id] = b, a
                        }, {}),
                        b = $(".MapLocationCards", this.$element).find(".cardContainer"),
                        c = 0;
                    b.each(function(b, d) {
                        if ("none" !== $(d).css("display")) {
                            c++;
                            var e = a[$(d).attr("id")].getLabel();
                            e.text = "" + (10 > c ? "0" : "") + c.toString(), a[$(d).attr("id")].setLabel(e);
                            var f = $(d).find(".eventNameIcon");
                            $(f).text("" + (10 > c ? "0" : "") + c.toString())
                        }
                    })
                }
            }
        }, {
            key: "_setMapKeysState",
            value: function() {
                var a = $(".filters__container .filter--on").attr("data-filter"),
                    b = a === $(".map-key #pastEventContainer").attr("data-event-key"),
                    c = a === $(".map-key #futureEventContainer").attr("data-event-key");
                b ? ($(".pastEvent").addClass("active"), this.markerSelected && $(".pastEventSelected").addClass("active"), $(".pastEventSelected").css("display", "block")) : ($(".pastEvent, .pastEventSelected").removeClass("active"), $(".pastEventSelected").css("display", "none")), c ? ($(".futureEvent").addClass("active"), this.markerSelected && $(".futureEventSelected").addClass("active"), $(".futureEventSelected").css("display", "block")) : ($(".futureEvent, .futureEventSelected").removeClass("active"), $(".futureEventSelected").css("display", "none")), null !== this._userLocationId ? $(".userLocation").addClass("active") : $(".userLocation").removeClass("active"), b && $("#futureEventContainer").before($("#pastEventContainer")), c && $("#pastEventContainer").before($("#futureEventContainer")), setTimeout(function() {
                    $(".map.GoogleMap div[style*='m1.png']").length > 0 ? $(".clusterEvent").addClass("active") : $(".clusterEvent").removeClass("active")
                }, 100)
            }
        }, {
            key: "_markerOnClick",
            value: function(a, b) {
                this.markerSelected = !0, this._setMapKeysState(), site.utils.isBreakpointSmall() || $(".slide-panel-close").css("visibility", "visible"), this._hasSidePanel && ("none" === $(".map-mobile-menu").css("display") && this._toggleSidePanel(!0), this._highlightMarker(b), this._scrollToSlidePanelCard(b.id, b))
            }
        }, {
            key: "_unselectAllCard",
            value: function() {
                $(".cardContainer").each(function() {
                    $(this).find(".card").removeClass("card-selected")
                })
            }
        }, {
            key: "_highlightCard",
            value: function(a, b) {
                var c = a.find(".eventNameIcon"),
                    d = void 0;
                this._unselectAllCard(), a.addClass("card-selected"), (c.hasClass("upcoming-tour-default") || c.hasClass("upcoming-tour-selected")) && (c.addClass("upcoming-tour-selected"), d = "upcoming-tour-selected"), (c.hasClass("past-tour-default") || c.hasClass("past-tour-selected")) && (c.addClass("past-tour-selected"), d = "past-tour-selected"), c.removeClass("upcoming-tour-default past-tour-default"), this._updateBottomPanel(a, d, b)
            }
        }, {
            key: "_updateBottomPanel",
            value: function(a, b, c) {
                $(".bottom-panel__container h3").html(a.find(".eventContent h3").html()), $(".bottom-panel__eventLocation .field-value").html(a.find(".eventInfo__location .field-value").html()), $(".bottom-panel__eventLocation").attr("data-city", a.attr("data-city")), $(".bottom-panel__container .eventNameIcon").removeClass("upcoming-tour-default upcoming-tour-selected past-tour-default past-tour-selected"), $(".bottom-panel__container .eventNameIcon").addClass(b), "none" !== $(".map-mobile-menu").css("display") && (this._oldMarkerId === this._currentMarkerId && this._bottomPanelShown === !0 && c !== !0 ? (this._bottomPanelShown = !1, $(".map-mobile-menu_bottom-panel").css({
                    bottom: -200
                }), this._unselectAllMarkers(), this._unselectAllCard(), this._unselectAllMarkersIconsFromCard()) : (this._bottomPanelShown = !0, $(".map-mobile-menu_bottom-panel").css({
                    bottom: 0
                }))), this._oldMarkerId = this._currentMarkerId
            }
        }, {
            key: "_unselectAllMarkers",
            value: function() {
                var a = new google.maps.Size(54, 54),
                    b = new google.maps.Point(27, 20),
                    c = void 0;
                this.markers.forEach(function(d) {
                    c = {
                        url: "past" === d.eventStatus ? "/resources/public/images/ExperienceDriveMapAndLocator/map-pin-factory.png" : "/resources/public/images/ExperienceDriveMapAndLocator/map-pin-experiences.png",
                        scaledSize: a,
                        labelOrigin: b
                    }, d.setIcon(c)
                })
            }
        }, {
            key: "_highlightMarker",
            value: function(a) {
                var b = new google.maps.Size(54, 54),
                    c = new google.maps.Point(27, 20),
                    d = void 0;
                this._currentMarkerId = a.id, this._unselectAllMarkers(), d = {
                    url: "past" === a.eventStatus ? "/resources/public/images/DynamicMaps/%brand%-Pin-Outline-Active-Shadow.png" : "/resources/public/images/DynamicMaps/%brand%-Pin-Active-Shadow.png",
                    scaledSize: b,
                    labelOrigin: c
                }, d.url = d.url.replace("%brand%", document.body.id), a.setIcon(d);
                var e = a.getPosition();
                this.googleMap.panTo(e), this.googleMap.setZoom(16);
                var f = $(".map-mobile-menu_bottom-panel");
                this.googleMap.panBy(0, "none" !== f.css("display") ? f.height() / 2 : 0)
            }
        }, {
            key: "_unselectAllMarkersIconsFromCard",
            value: function() {
                $(".cardContainer").each(function() {
                    var a = $(this).hasClass("past") ? "past" : "future",
                        b = $(this).find(".eventNameIcon");
                    b.removeClass("upcoming-tour-default upcoming-tour-selected past-tour-default past-tour-selected"), "future" === a && b.addClass("upcoming-tour-default"), "past" === a && b.addClass("past-tour-default")
                })
            }
        }, {
            key: "_scrollToSlidePanelCard",
            value: function(a, b, c) {
                var d = $(".SideBarCards").find("#" + a),
                    e = d.find(".card"),
                    f = ($(".bottom-panel__eventName"), void 0);
                if (this._unselectAllMarkersIconsFromCard(d), null !== b) {
                    switch (b.eventStatus) {
                        case "future":
                            f = "upcoming-tour-selected";
                            break;
                        case "past":
                            f = "past-tour-selected"
                    }
                    e.find(".eventNameIcon").removeClass("upcoming-tour-default past-tour-default").addClass(f)
                }
                this._highlightCard(e, c), $(".slide-panel-holder").stop(), $(".slide-panel-holder").animate({
                    scrollTop: d.position().top
                }, 600)
            }
        }, {
            key: "_findMarkerToHighlight",
            value: function(a) {
                var b = this;
                this.markers.forEach(function(c) {
                    c.id === a && b._highlightMarker(c)
                })
            }
        }, {
            key: "_createInfoBox",
            value: function() {}
        }, {
            key: "_setUpGlobalMapEvents",
            value: function() {
                var a = this;
                google.maps.event.addListenerOnce(this.googleMap, "idle", function() {
                    a.googleMap.fitBounds(a.bounds), a.googleMap.panBy(0, -1), a.googleMap.panBy(0, 1)
                }), google.maps.event.addListener(this.googleMap, "idle", function() {
                    a._setMapKeysState()
                }), google.maps.event.addListener(this.googleMap, "click", function() {
                    var b = !0,
                        c = !1,
                        d = void 0;
                    try {
                        for (var e, f = a.markers[Symbol.iterator](); !(b = (e = f.next()).done); b = !0) {
                            var g = e.value;
                            a._hasSidePanel || g.infobox.close()
                        }
                    } catch (h) {
                        c = !0, d = h
                    } finally {
                        try {
                            !b && f["return"] && f["return"]()
                        } finally {
                            if (c) throw d
                        }
                    }
                })
            }
        }, {
            key: "_addDir",
            value: function(a) {
                var b = this;
                $(".MapLocationMap").hasClass("EnableRoutes") && a.map(function(c, d, e) {
                    var f = new google.maps.DirectionsService,
                        g = new google.maps.DirectionsRenderer({
                            suppressMarkers: !0
                        });
                    if (d < a.length - 1) {
                        var h = e[d],
                            i = e[d + 1],
                            j = {
                                origin: h,
                                destination: i,
                                travelMode: google.maps.TravelMode.DRIVING
                            };
                        f.route(j, function(a, c) {
                            c === google.maps.DirectionsStatus.OK && (g.setDirections(a), g.setMap(b.googleMap))
                        })
                    }
                })
            }
        }, {
            key: "_mapHeight",
            value: function() {
                var a = $(window),
                    b = $(".otherCountries", this.$element),
                    c = $(".map-key", this.$element),
                    d = site.utils.getStickyNavHeight(),
                    e = void 0;
                e = a.width() <= 740 || a.height() <= 640 ? "100vh" : $(window).height() - b.innerHeight() - c.innerHeight() - d, this.map.css("height", e)
            }
        }, {
            key: "_toggleMapLock",
            value: function() {
                var a = this,
                    b = $(".control.drag", this.$element);
                b.click(function() {
                    a.mapDraggable ? (a.googleMap.set("draggable", !1), a.googleMap.set("disableDoubleClickZoom", !0), $(this).removeClass("active"), a.mapDraggable = !1) : (a.googleMap.set("draggable", !0), a.googleMap.set("disableDoubleClickZoom", !1), $(this).addClass("active"), a.mapDraggable = !0, a.resize = !1)
                })
            }
        }, {
            key: "_setupZoom",
            value: function() {
                var a = this,
                    b = $("#map-controls", this.$element),
                    c = b.find(".plus"),
                    d = b.find(".minus"),
                    e = function() {
                        a.googleMap.getZoom() === a.maxZoom ? c.addClass("disabled") : c.removeClass("disabled")
                    },
                    f = function() {
                        0 === a.googleMap.getZoom() ? d.addClass("disabled") : d.removeClass("disabled")
                    };
                this.googleMap.addListener("zoom_changed", function() {
                    e(), f()
                }), c.click(function() {
                    a.googleMap.getZoom() < a.maxZoom && (a.googleMap.setZoom(a.googleMap.zoom + 1), a.resize = !1)
                }), d.click(function() {
                    a.googleMap.getZoom() > 0 && (a.googleMap.setZoom(a.googleMap.zoom - 1), a.resize = !1)
                })
            }
        }, {
            key: "_showZoomIcons",
            value: function() {
                var a = $("#map-controls", this.$element),
                    b = a.find(".plus"),
                    c = a.find(".minus");
                this.isTouchDevice || (b.show(), c.show())
            }
        }, {
            key: "_screenSize",
            value: function() {
                site.utils.isMobileDevice() && (this.isMobileNav = !0)
            }
        }, {
            key: "_centreMapOnCountry",
            value: function() {
                var a = this,
                    b = this.repositionMap,
                    c = this.googleMap;
                if (b) {
                    var d = $(".MapLocationMap", this.$element).data("country"),
                        e = $(".MapLocationMap", this.$element).data("country-code"),
                        f = {
                            country: e || d
                        },
                        g = new google.maps.Geocoder;
                    g.geocode({
                        componentRestrictions: f
                    }, function(b, d) {
                        var e = _slicedToArray(b, 1),
                            f = e[0];
                        f = void 0 === f ? {} : f;
                        var g = f.geometry;
                        g = void 0 === g ? {} : g;
                        var h = g.location,
                            i = g.viewport;
                        d === google.maps.GeocoderStatus.OK && (c.setCenter(h), c.fitBounds(i), a.maxZoom = a.mapOptions.zoom, $(window).trigger("geocodingComplete"))
                    })
                }
            }
        }, {
            key: "_setupDirections",
            value: function() {
                var a = new google.maps.Polyline({
                    strokeColor: "#00b3fd",
                    strokeOpacity: .7,
                    strokeWeight: 4
                });
                this._directionsService = new google.maps.DirectionsService, this._directionsRenderer = new google.maps.DirectionsRenderer({
                    polylineOptions: a,
                    panel: document.getElementsByClassName("directions-container")[0],
                    suppressInfoWindows: !0,
                    preserveViewport: !0,
                    draggable: !1,
                    suppressMarkers: !0
                }), this._geocoder = new google.maps.Geocoder, this._usersLocationText = $("#users_location"), this._eventLocationText = $("#event_location")
            }
        }, {
            key: "_getDirections",
            value: function(a) {
                var b = this._eventLocationText.val();
                a && (b = a);
                var c = {
                    origin: this._usersLocationText.val(),
                    destination: b,
                    travelMode: "DRIVING",
                    unitSystem: google.maps.UnitSystem.METRIC
                };
                "miles" === $(".MapLocationCards").attr("data-distance-format") && (c.unitSystem = google.maps.UnitSystem.IMPERIAL), this._directionsService.route(c, function(a, b) {
                    "OK" === b && (this._currentMarker = !1, this._currentRoute = a.routes[0].bounds, setTimeout(function() {
                        google.maps.event.trigger(this.googleMap, "resize"), this._directionsRenderer.setMap(this.googleMap), this._directionsRenderer.setDirections(a), this.markers.forEach(function(a, b) {
                            a.setMap(null)
                        });
                        var b = a.routes[0].legs[0].start_location,
                            c = a.routes[0].legs[0].end_location;
                        this.directionMarkers.start && this.directionMarkers.end ? (this.directionMarkers.start.setPosition(b), this.directionMarkers.end.setPosition(c), this.directionMarkers.start.setMap(this.googleMap), this.directionMarkers.end.setMap(this.googleMap)) : (this.directionMarkers.start = new google.maps.Marker({
                            position: b,
                            map: this.googleMap,
                            draggable: !1,
                            flat: !0,
                            content: '<div class="marker"><img src="data:image/svg+xml;charset=US-ASCII,%3Csvg%20id%3D%22Layer_2%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%224%20-12%2043%2060%22%3E%3Cstyle%3E.st0%7Bfill%3Aurl%28%23XMLID_5_%29%3B%7D%20.st1%7Bfill%3A%239E1B32%3B%7D%20.st2%7Bopacity%3A0.3%3B%7D%3C%2Fstyle%3E%3CradialGradient%20id%3D%22XMLID_5_%22%20cx%3D%2225.535%22%20cy%3D%2222%22%20r%3D%2212.179%22%20gradientTransform%3D%22matrix%281%200%200%20-.3%200%2048.6%29%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20offset%3D%220%22%20stop-opacity%3D%22.4%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-opacity%3D%220%22%2F%3E%3C%2FradialGradient%3E%3Cpath%20id%3D%22XMLID_4_%22%20class%3D%22st0%22%20d%3D%22M42.2%2041.5c0%203.2-8.6%204.7-16.7%204.7S8.8%2044.7%208.8%2041.5s8.6-3.7%2016.7-3.7%2016.7.5%2016.7%203.7z%22%2F%3E%3Cg%20id%3D%22XMLID_1_%22%3E%3Cpath%20class%3D%22st1%22%20d%3D%22M47%209.5C47%2026.3%2033.9%2031.7%2025.5%2042%2017%2031.7%204%2026.1%204%209.5%204-2.4%2013.6-12%2025.5-12S47-2.4%2047%209.5z%22%2F%3E%3Cpath%20d%3D%22M25.5-11C36.8-11%2046-1.8%2046%209.5c0%2011.6-6.5%2017.6-13.4%2023.9-2.4%202.2-4.9%204.5-7.1%207.1-2.2-2.5-4.6-4.8-7-7C11.5%2027.1%205%2021.1%205%209.5%205-1.8%2014.2-11%2025.5-11m0-1C13.6-12%204-2.4%204%209.5%204%2026.1%2017%2031.7%2025.5%2042%2033.9%2031.7%2047%2026.3%2047%209.5%2047-2.4%2037.4-12%2025.5-12z%22%20class%3D%22st2%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E" /><span>A</span></div>'
                        }), this.directionMarkers.end = new google.maps.Marker({
                            position: c,
                            map: this.googleMap,
                            draggable: !1,
                            flat: !0,
                            content: '<div class="marker"><img src="data:image/svg+xml;charset=US-ASCII,%3Csvg%20id%3D%22Layer_2%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%224%20-12%2043%2060%22%3E%3Cstyle%3E.st0%7Bfill%3Aurl%28%23XMLID_5_%29%3B%7D%20.st1%7Bfill%3A%239E1B32%3B%7D%20.st2%7Bopacity%3A0.3%3B%7D%3C%2Fstyle%3E%3CradialGradient%20id%3D%22XMLID_5_%22%20cx%3D%2225.535%22%20cy%3D%2222%22%20r%3D%2212.179%22%20gradientTransform%3D%22matrix%281%200%200%20-.3%200%2048.6%29%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20offset%3D%220%22%20stop-opacity%3D%22.4%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-opacity%3D%220%22%2F%3E%3C%2FradialGradient%3E%3Cpath%20id%3D%22XMLID_4_%22%20class%3D%22st0%22%20d%3D%22M42.2%2041.5c0%203.2-8.6%204.7-16.7%204.7S8.8%2044.7%208.8%2041.5s8.6-3.7%2016.7-3.7%2016.7.5%2016.7%203.7z%22%2F%3E%3Cg%20id%3D%22XMLID_1_%22%3E%3Cpath%20class%3D%22st1%22%20d%3D%22M47%209.5C47%2026.3%2033.9%2031.7%2025.5%2042%2017%2031.7%204%2026.1%204%209.5%204-2.4%2013.6-12%2025.5-12S47-2.4%2047%209.5z%22%2F%3E%3Cpath%20d%3D%22M25.5-11C36.8-11%2046-1.8%2046%209.5c0%2011.6-6.5%2017.6-13.4%2023.9-2.4%202.2-4.9%204.5-7.1%207.1-2.2-2.5-4.6-4.8-7-7C11.5%2027.1%205%2021.1%205%209.5%205-1.8%2014.2-11%2025.5-11m0-1C13.6-12%204-2.4%204%209.5%204%2026.1%2017%2031.7%2025.5%2042%2033.9%2031.7%2047%2026.3%2047%209.5%2047-2.4%2037.4-12%2025.5-12z%22%20class%3D%22st2%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E" /><span>B</span></div>'
                        })), $(".getDirectionsButton").addClass("reset"), setTimeout(function() {
                            this.googleMap.fitBounds(a.routes[0].bounds)
                        }.bind(this), 100)
                    }.bind(this), 500))
                }.bind(this))
            }
        }, {
            key: "_nearestLocations",
            value: function(a) {
                for (var b = 0; b < this.markers.length; b++) {
                    var c = google.maps.geometry.spherical.computeDistanceBetween(a, this.markers[b].position);
                    c /= 1e3, c = .621371 * c, c = Math.round(c), this.markers[b].distanceFromUser = c
                }
                this.markers.sort(function(a, b) {
                    return parseFloat(a.distanceFromUser) - parseFloat(b.distanceFromUser)
                });
                var d = this.markers.length >= 3 ? 2 : this.markers.length - 1,
                    e = new google.maps.Circle;
                e.setRadius(1609 * this.markers[d].distanceFromUser), e.setCenter(a), this.googleMap.fitBounds(e.getBounds())
            }
        }, {
            key: "_geolocation",
            value: function() {
                var a = $("#map-controls", this.$element).find(".locate"),
                    b = this;
                navigator.geolocation && !this._isItineraryMap && (a.show(), navigator.geolocation.getCurrentPosition(function(a) {
                    var c = new google.maps.LatLng(a.coords.latitude, a.coords.longitude);
                    this.googleMap.panTo(c), this.bounds.extend(c), this._addUserMarker(c), this._nearestLocations(c), this._usersLocation = c;
                    var d = c.toString().replace("(", ""),
                        e = d.replace(")", ""),
                        f = {
                            address: e
                        };
                    this._geocoder.geocode(f, function(a, c) {
                        c === google.maps.GeocoderStatus.OK && ($("#users_location").val(a[0].formatted_address), b._userLocationId = a[0].formatted_address, b._userLocationComponent = a[0].address_components, b._hasSidePanel && (b._injectDistanceFromUserLocationInCards(), b.sorters.setSelected("distance"), b._sort()))
                    })
                }.bind(this), function() {
                    a.hide()
                }))
            }
        }, {
            key: "_autocompleteInput",
            value: function() {
                var a, b = this,
                    c = this,
                    d = $(".searchInput", this.$element).val(),
                    e = $(".MapLocationSearchError", this.$element),
                    f = e.find(".searchDisambiguation"),
                    g = e.find(".searchAgainDealer"),
                    h = ($(".utility"), f.find("ol")),
                    i = (new google.maps.Geocoder, ""),
                    j = $(".zeroResultsHeading", this.$element),
                    k = $(".multiLocationHeading", this.$element),
                    l = "",
                    m = $(".MapLocationSearch", this.$element),
                    n = $(".MapLocationCards", this.$element),
                    o = $(".MapLocationCardsHeader", this.$element),
                    p = $(".TAOPT_title", this.$element);
                a = c._getStickyNavHeight();
                var q = new google.maps.places.AutocompleteService;
                q.getPlacePredictions({
                    input: d,
                    types: ["(regions)"],
                    componentRestrictions: {
                        country: this._market
                    }
                }, function(c, q) {
                    "OK" === q ? c.length > 1 ? b._geoCodeInputOnMultipleResult({
                        $search: m,
                        searchAgainHeader: o,
                        title: p,
                        cardsContainer: n,
                        offsetHeight: a,
                        $multipleResultsList: h,
                        input: d,
                        multiResults: k,
                        $noResults: g,
                        container: e,
                        $multipleResults: f,
                        results: c,
                        resultsHeading: l,
                        resultsList: i
                    }) : (b.disambiguationSearch = !0, m.find(".searchInput").val(c[0].description), m.submit()) : "ZERO_RESULTS" === q && b._geoCodeInputOnZeroResult({
                        zeroResults: j,
                        $noResults: g,
                        container: e,
                        $multipleResults: f,
                        offsetHeight: a,
                        resultsHeading: l
                    })
                })
            }
        }, {
            key: "_geocodeInput",
            value: function() {
                var a, b = this,
                    c = $(".searchInput", this.$element).val(),
                    d = $(".MapLocationSearchError", this.$element),
                    e = d.find(".searchDisambiguation"),
                    f = d.find(".searchAgainDealer"),
                    g = $(".utility"),
                    h = e.find("ol"),
                    i = new google.maps.Geocoder,
                    j = "",
                    k = $(".zeroResultsHeading", this.$element),
                    l = $(".multiLocationHeading", this.$element),
                    m = "",
                    n = $(".MapLocationSearch", this.$element),
                    o = $(".MapLocationCards", this.$element),
                    p = $(".MapLocationCardsHeader", this.$element),
                    q = $(".TAOPT_title", this.$element),
                    r = {
                        address: c,
                        region: this._market,
                        componentRestrictions: {
                            country: this._market
                        }
                    };
                a = b.isMobileNav ? 0 : g.height(), i.geocode(r, function(g, i) {
                    i === google.maps.GeocoderStatus.OK && (1 === g.length && g[0].address_components.length < 2 ? b._geoCodeInputOnZeroResult({
                        zeroResults: k,
                        $noResults: f,
                        container: d,
                        $multipleResults: e,
                        offsetHeight: a,
                        resultsHeading: m
                    }) : 1 === g.length || b.disambiguationSearch ? b._geoCodeInputOnSingleResult({
                        $noResults: f,
                        container: d,
                        $multipleResults: e,
                        results: g
                    }) : g.length > 1 && b._geoCodeInputOnMultipleResult({
                        $search: n,
                        searchAgainHeader: p,
                        title: q,
                        cardsContainer: o,
                        offsetHeight: a,
                        $multipleResultsList: h,
                        input: c,
                        multiResults: l,
                        $noResults: f,
                        container: d,
                        $multipleResults: e,
                        results: g,
                        resultsHeading: m,
                        resultsList: j
                    }))
                })
            }
        }, {
            key: "_geoCodeInputOnZeroResult",
            value: function(a) {
                if (this._hasSidePanel) $(".searchForm-error-container").css("display", "block"), $(".searchForm-error-message").text("The location you are looking for can't be found"), $(".searchInput").addClass("searchInput-error");
                else {
                    this.disambiguationSearch = !1, this._userLocationId = "", this._userLocationComponent = "";
                    var b = this;
                    a.$noResults.show(), a.container.slideDown(), a.$multipleResults.hide(), $("html, body").animate({
                        scrollTop: a.$noResults.offset().top - a.offsetHeight
                    }, 800, function() {
                        b._hasSidePanel || b._calculateSearchWayPoints()
                    }), a.resultsHeading = this.zeroResultsHeading.substring(0, this.zeroResultsHeading.length - 2), a.resultsHeading += "'" + a.input + "'", a.zeroResults.text(a.resultsHeading)
                }
            }
        }, {
            key: "_injectDistanceFromUserLocationInCards",
            value: function() {
                this.hasDistances = !0;
                var a = $(".MapLocationCards").attr("data-distance-format"),
                    b = !0,
                    c = !1,
                    d = void 0;
                try {
                    for (var e, f = this.markers[Symbol.iterator](); !(b = (e = f.next()).done); b = !0) {
                        var g = e.value;
                        $(".SideBarCards").find("#" + g.id).find(".eventName .distance-from-user").remove(), $(".SideBarCards").find("#" + g.id).attr("data-event-distance", 0), $(".SideBarCards").find("#" + g.id).find(".eventName").append('<span class="distance-from-user">(' + g.distanceFromUser + " " + a + ")</span>"), $(".SideBarCards").find("#" + g.id).attr("data-event-distance", g.distanceFromUser)
                    }
                } catch (h) {
                    c = !0, d = h
                } finally {
                    try {
                        !b && f["return"] && f["return"]()
                    } finally {
                        if (c) throw d
                    }
                }
            }
        }, {
            key: "_geoCodeInputOnSingleResult",
            value: function(a) {
                var b = a.results[0].geometry.location;
                this._userLocationId = a.results[0].formatted_address, this._userLocationComponent = a.results[0].address_components, this._usersLocation = b, this._setupFilterResultLabel(), this._addUserMarker(b), this._nearestLocations(b), this._hasSidePanel && (this._injectDistanceFromUserLocationInCards(), this._sort()), this._searchOnTop && (this.disambiguationSearch === !0 && "none" !== a.$multipleResults.css("display") ? a.$multipleResults.animate({
                    height: "toggle"
                }, {
                    duration: 500,
                    progress: function() {
                        $(window).scroll()
                    },
                    complete: function() {
                        $("html, body").animate({
                            scrollTop: $(".map-page-container").offset().top
                        }, {
                            duration: 300,
                            progress: function() {
                                $(window).scroll()
                            }
                        })
                    }
                }) : $("html, body").animate({
                    scrollTop: $(".map-page-container").offset().top
                }, {
                    duration: 800,
                    progress: function() {
                        $(window).scroll()
                    }
                })), this.disambiguationSearch = !1
            }
        }, {
            key: "_geoCodeInputOnMultipleResult",
            value: function(a) {
                var b = this;
                this._userLocationId = "", this._userLocationComponent = [], this._setupFilterResultLabel(), a.$multipleResults.show(), a.container.slideDown(), a.$noResults.hide(), a.resultsHeading = this.multipleResultsHeading.substring(0, this.multipleResultsHeading.length - 2), a.resultsHeading += "<span>'" + a.input + "'</span>", a.multiResults.html(a.resultsHeading);
                for (var c = 0; c < a.results.length; c++) this._hasSidePanel && (a.results[c].formatted_address = a.results[c].description), a.resultsList += '<li><a href="#">' + a.results[c].formatted_address + "</a></li>";
                a.$multipleResultsList.html(a.resultsList), $("html, body").animate({
                    scrollTop: this._searchOnTop === !1 ? a.$multipleResults.offset().top - a.offsetHeight : a.$multipleResults.offset().top - a.offsetHeight
                }, 800, function() {}).promise().then(function() {
                    b._hasSidePanel || b._calculateSearchWayPoints(), $(".multipleResults").find("a").on("click", function(c) {
                        a.cardsContainer.addClass("userSearch"), a.title.hide(), a.searchAgainHeader.show(), c.preventDefault(), b.disambiguationSearch = !0, a.$search.find(".searchInput").val($(this).text()), a.$search.submit()
                    })
                }), this._hasSidePanel && $(".searchAgainDis").hide()
            }
        }, {
            key: "_getStickyNavHeight",
            value: function() {
                var a = $(".dxnav__breadcrumbs-container");
                return a.height()
            }
        }, {
            key: "_drawLines",
            value: function() {
                var a = this.$element.data("geojson").split(",");
                if ("undefined" != typeof a) {
                    var b = !0,
                        c = !1,
                        d = void 0;
                    try {
                        for (var e, f = a[Symbol.iterator](); !(b = (e = f.next()).done); b = !0) {
                            var g = e.value;
                            this.googleMap.data.loadGeoJson(g)
                        }
                    } catch (h) {
                        c = !0, d = h
                    } finally {
                        try {
                            !b && f["return"] && f["return"]()
                        } finally {
                            if (c) throw d
                        }
                    }
                    this.googleMap.data.setStyle({
                        strokeColor: "#005a2b",
                        strokeWeight: 6
                    })
                }
            }
        }, {
            key: "_addUserMarker",
            value: function(a) {
                this._resetUserMarker(), $(".userLocation", this.$element).css({
                    display: "block"
                });
                var b = "/resources/public/images/TAOPT/%brand%-circle-active.svg",
                    c = b.replace("%brand%", document.body.id);
                c = new google.maps.MarkerImage(c, null, null, null, new google.maps.Size(50, 50)), this.userMarker = new google.maps.Marker({
                    position: a,
                    map: this.googleMap,
                    icon: c,
                    zIndex: 0
                }), this._usersLocation = a
            }
        }, {
            key: "_resetUserMarker",
            value: function() {
                null != this.userMarker && (this.userMarker.setMap(null), this.userMarker = null)
            }
        }, {
            key: "_resetAllEventMarker",
            value: function() {
                null != this.markers && (this.markers.forEach(function(a) {
                    a.setMap(null)
                }), this.markers = [], this.numberDisplayedPins = 0, this.bounds = new google.maps.LatLngBounds, this._usersLocation && this.bounds.extend(this._usersLocation), null !== this._clusterer && this._clusterer.clearMarkers())
            }
        }, {
            key: "_createRouteHTML",
            value: function(a) {
                var b = "";
                $.each(a, function(a, c) {
                    $.each(c.steps, function(a, c) {
                        b += '<div class="instruction">' + c.instructions + "</div>"
                    })
                }), $(".directions-container").empty().append(b)
            }
        }, {
            key: "_toggleSidePanel",
            value: function(a, b) {
                var c = $(".slide-panel").hasClass("visible");
                a && c || (c ? ($(".slide-panel").removeClass("visible"), this.$element.removeClass("slide-panel-open"), $(".map-mobile-menu_bottom-panel").css({
                    display: "block"
                })) : ($(".slide-panel").addClass("visible"), this.$element.addClass("slide-panel-open"), $(".map-mobile-menu_bottom-panel").css({
                    display: "none"
                })))
            }
        }, {
            key: "_scrollToMap",
            value: function() {
                var a = $(".dxnav-header"),
                    b = 0,
                    c = $("#header");
                a.length && (c = a.hasClass("dxnav-hasBreadcrumbs") ? $(".dxnav__breadcrumbs") : a);
                var d = c.height(),
                    e = d - b;
                site.utils.scrollToElement($(this.cp.element), {
                    adjustment: e
                })
            }
        }, {
            key: "_alignErrorMessage",
            value: function() {
                $(".searchForm-error").width($(".searchForm-container").width())
            }
        }, {
            key: "_calculateSearchWayPoints",
            value: function() {
                var a = $(".MapLocationCards", this.$element);
                this.cardTop = a.offset().top, this.cardBottom = a.offset().top + a.innerHeight()
            }
        }, {
            key: "_createMarkersClusterer",
            value: function() {
                var a = [{
                        textColor: "white",
                        url: "/resources/public/images/ExperienceDriveMapAndLocator/m1.png",
                        backgroundPosition: "center",
                        height: 36,
                        width: 36
                    }, {
                        textColor: "white",
                        url: "/resources/public/images/ExperienceDriveMapAndLocator/m1.png",
                        backgroundPosition: "center",
                        height: 36,
                        width: 36
                    }, {
                        textColor: "white",
                        url: "/resources/public/images/ExperienceDriveMapAndLocator/m1.png",
                        backgroundPosition: "center",
                        height: 36,
                        width: 36
                    }],
                    b = {
                        imagePath: "/resources/public/images/ExperienceDriveMapAndLocator/m",
                        styles: a,
                        maxZoom: 15
                    };
                null !== this._clusterer && this._clusterer.clearMarkers(), this._clusterer = new MarkerClustererV3(this.googleMap, this.markers, b);
                var c = !0,
                    d = !1,
                    e = void 0;
                try {
                    for (var f, g = this.markers[Symbol.iterator](); !(c = (f = g.next()).done); c = !0) {
                        var h = f.value;
                        h.visible || this._clusterer.removeMarker(h)
                    }
                } catch (i) {
                    d = !0, e = i
                } finally {
                    try {
                        !c && g["return"] && g["return"]()
                    } finally {
                        if (d) throw e
                    }
                }
            }
        }]), a
    }(),
    ArtOfPerformance = function(a) {
        function b(a, c) {
            _classCallCheck(this, b);
            var d = _possibleConstructorReturn(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
            return d._setMapKeysState(), d.hiddenCards = [], d.cardTop = 0, d.cardBottom = 0, d.headerOffset = "", d._isArtOfPerformance = !1, d._isRideAndDrive = !1, d._isItineraryMap = !1, d
        }
        return _inherits(b, a), _createClass(b, [{
            key: "init",
            value: function() {
                _get(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "init", this).call(this), this.$locations.length <= 3 && (this.repositionMap = !1);
            }
        }, {
            key: "_setMapKeysState",
            value: function() {
                $(".map-key").css("display", "block"), $(".futureEvent", this.$element).css({
                    opacity: "1"
                }), $(".pastEvent", this.$element).css({
                    opacity: "1"
                }), $(".clusterEvent", this.$element).css("display", "none"), $(".pastEventSelected", this.$element).css("display", "none"), $(".futureEventSelected", this.$element).css("display", "none"), $(".userLocation", this.$element).css("display", "none"), $(".map-mobile-menu", this.$element).css("display", "none")
            }
        }, {
            key: "_setUpEvents",
            value: function() {
                var a = this;
                _get(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "_setUpEvents", this).call(this), $(window).smartresize(function() {
                    $(window).width() > 740 && a._equalHeightCards(), a._hideCards(), a.inputSearch && ($cards = $(".MapLocationCards"), a._calculateSearchWayPoints(), a._fixHeader()), $(".directions-container").height($(".directions-panel").outerHeight() - $(".directions-form").outerHeight() - 20), a._setImageSize()
                }), $(window).on("load", function() {
                    $(window).width() > 740 && a._equalHeightCards(), a._hideCards(), a._displayCards()
                }), $(window).on("api:ready", function() {}), $(window).scroll(function() {
                    a.inputSearch && !a.disambiguationSearch && a._fixHeader()
                }), $(window).on("pinMobileNavHeader", function() {
                    a.disambiguationSearch || (a.headerOffset = "translate(0px, 65px)", a._fixHeader())
                }), $(window).on("unpinMobileNavHeader", function() {
                    a.disambiguationSearch || (a.headerOffset = "translate(0px, 0px)", a._fixHeader())
                }), $(window).on("cookieNoticeClosed", function() {
                    a.inputSearch && setTimeout(function() {
                        $cards = $(".MapLocationCards"), a.cardTop = $cards.offset().top, a.cardBottom = $cards.offset().top + $cards.innerHeight(), a._fixHeader()
                    }, 1e3)
                }), $(".map-directions-toggle .map-toggle").click(function(b) {
                    b.preventDefault(), $(".directions-panel").removeClass("visible"), a.$element.removeClass("directions").addClass("map")
                }), $(".map-directions-toggle .directions-toggle").click(function(b) {
                    b.preventDefault(), $(".directions-panel").addClass("visible"), a.$element.removeClass("map").addClass("directions")
                }), $(".map-directions-toggle .directions-close").click(function(b) {
                    b.preventDefault(), setTimeout(function() {
                        a.$element.removeClass("directions-open map")
                    }, 600), $(".map-directions-toggle").removeClass("visible"), $(".directions-panel").removeClass("visible"), a._directionsRenderer.setMap(null), a.directionMarkers.end && (a.directionMarkers.start.setMap(null), a.directionMarkers.end.setMap(null)), a._currentRoute = !1, a.markers.forEach(function(b) {
                        b.setMap(a.googleMap)
                    }), setTimeout(function() {
                        google.maps.event.trigger(a.googleMap, "resize")
                    }, 1150)
                }), $("#users_location").on("keydown", function() {
                    $(".getDirectionsButton").removeClass("reset")
                }), $(".getDirectionsButton", this.$element).click(function(b) {
                    b.preventDefault(), $(b.target).hasClass("reset") ? ($(b.target).removeClass("reset"), $("#users_location").val("")) : a._getDirections()
                })
            }
        }, {
            key: "_setImageSize",
            value: function() {
                window.innerWidth < 901 ? this.imageEls.height(window.innerWidth / 1.77777) : this.imageEls.height("100%")
            }
        }, {
            key: "_initMap",
            value: function() {
                _get(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "_initMap", this).call(this), this._setImageSize()
            }
        }, {
            key: "_markerOnClick",
            value: function(a, b) {
                this._currentMarker = b;
                for (var c = 0; c < this.markers.length; c++) this.markers[c].infobox.close();
                this.googleMap.panTo(b.getPosition());
                var d = -175;
                this._isItineraryMap ? window.innerWidth <= 359 ? d = -235 : window.innerWidth <= 420 ? d = -250 : window.innerHeight < 450 ? d = -150 : window.innerHeight < 900 && (d = -240) : window.innerWidth <= 420 && (d = -75), this.googleMap.panBy(0, d), b.infobox.open(this.googleMap, a), this._scrollToMap()
            }
        }, {
            key: "_createInfoBox",
            value: function(a, b, c, d, e, f, g, h, i, j, k) {
                var l = this,
                    m = void 0,
                    n = void 0,
                    o = void 0;
                m = new google.maps.Size(10, 10), this._isJaguar ? ($(window).width() < 740 ? (o = "280px", n = new google.maps.Size(-140, -25)) : (o = "350px", n = new google.maps.Size(-175, -35)), window.innerHeight <= 350 && (o = "350px", n = new google.maps.Size(-175, -25))) : ($(window).width() < 740 ? (o = "280px", n = new google.maps.Size(-140, -40)) : (o = "350px", n = new google.maps.Size(-175, -47)), window.innerHeight <= 350 && (o = "350px", n = new google.maps.Size(-175, -35))), window.innerWidth >= 330 && window.innerWidth <= 375 && (m = !1), a.origIcon = b;
                var p = "<div>";
                p += '<div class="event-infobox ' + c + '">', p += '<span class="infoboxImage" style="background-image:url(\'' + d + "')\"></span>", p += '<span class="infoboxClose"></span>', p += '<div class="infoContainer">', p += '<h3 class="infoboxName fonth3">' + f.html() + "</h3>", g.length && (p += '<div class="infoboxInfo">' + g.html() + "</div>"), "" !== h && (p += '<p class="fontBodyCopy">' + h + "</p>"), i.length && (p += '<p class="coordinates">' + i.html() + "</p>"), "undefined" != typeof j && (p += "<div>" + j.html() + "</div>"), p += this._createCta(c, k), p += "</div>", p += "</div>", p += "</div>";
                var q = $(p);
                $(".infoboxImage", q).attr("aria-label", e);
                var r = {
                    content: q.html(),
                    disableAutoPan: !0,
                    maxWidth: 0,
                    pixelOffset: n,
                    zIndex: null,
                    boxStyle: {
                        background: "transparent",
                        width: o
                    },
                    closeBoxURL: "",
                    infoBoxClearance: m,
                    isHidden: !1,
                    pane: "floatPane",
                    alignBottom: !0,
                    enableEventPropagation: !1
                };
                a.infobox = new l.infoBox(r), a.infobox.addListener("domready", function() {
                    l.closeCTA = $(".infoboxClose"), l.closeCTA.on("click", function() {
                        $(this).closest(".infoBox").addClass("closing"), this._currentMarker = !1, setTimeout(function() {
                            $(".infoBox").hide()
                        }, 500)
                    }), $(".event-infobox a.FindOutMore").on("click", function(a) {
                        a.preventDefault();
                        var b = $("#" + $(a.currentTarget).attr("href").split("#")[1]);
                        site.utils.scrollTo(b)
                    }.bind(this)), $(".get-directions").on("click", function(a) {
                        a.preventDefault(), $(".directions-panel").addClass("visible"), $(".map-directions-toggle").addClass("visible"), this.$element.addClass("directions-open"), this.$element.addClass("directions");
                        var b = {
                            address: $(a.currentTarget).data("latlng")
                        };
                        this._geocoder.geocode(b, function(a, b) {
                            b === google.maps.GeocoderStatus.OK && $("#event_location").val(a[0].formatted_address)
                        }), this._getDirections($(a.currentTarget).data("latlng")), $(a.currentTarget).closest(".infoBox").addClass("closing"), this._currentMarker = !1, setTimeout(function() {
                            $(".infoBox").hide()
                        }, 500)
                    }.bind(l))
                }.bind(this)), $(".event-infobox").append(j)
            }
        }, {
            key: "_createCta",
            value: function(a, b) {
                var c = "";
                return this.$element.hasClass("noDirections") || "past" !== a && (c = '<div><a href="#" class="cta-secondary cta--arrow secondaryLinkWithStyle left get-directions" data-latlng="' + b + '"><span>' + this._directionsTranslation + "</span></a></div>"), c
            }
        }, {
            key: "_equalHeightCards",
            value: function() {
                var a = $(".GridCards", this.$element).find(".card");
                a.css("height", "");
                var b = 0;
                a.each(function() {
                    b = b > $(this).height() ? b : $(this).height()
                }), a.height(b)
            }
        }, {
            key: "_hideCards",
            value: function() {
                var a = $(".MapLocationCards");
                if (this.hiddenCards !== !1 && !a.hasClass("FullWidthCards") && !this._isItineraryMap) {
                    var b = $(".future", this.$element);
                    this.hiddenCards = {};
                    var c = $(window).width() < 988 ? 2 : 3,
                        d = b.slice(0, c);
                    d.show();
                    var e = b.slice(c);
                    this.hiddenCards = e, e.hide();
                    var f = $(".load-more-cta", this.$element);
                    this.hiddenCards.length > 0 && (f.css("display", "inline-flex"), $(".MapLocationCards", this.$element).find(".ctaContainer").show())
                }
            }
        }, {
            key: "_displayCards",
            value: function() {
                var a = this,
                    b = $(".load-more-cta", this.$element);
                b.on("click", function(c) {
                    c.preventDefault(), a.hiddenCards.show(), a.hiddenCards.each(function(a, b) {
                        $(b).css({
                            opacity: 0,
                            y: 80
                        }).transition({
                            opacity: 1,
                            y: 0,
                            delay: 200 * a
                        })
                    }), b.fadeOut(), b.parent().fadeOut(400, function() {
                        a._calculateSearchWayPoints()
                    }), a.hiddenCards = !1
                })
            }
        }, {
            key: "_geoCodeInputOnZeroResult",
            value: function(a) {
                _get(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "_geoCodeInputOnZeroResult", this).call(this, a)
            }
        }, {
            key: "_geoCodeInputOnSingleResult",
            value: function(a) {
                var b = this;
                a.container.slideUp(400, function() {
                    a.$multipleResults.hide(), a.$noResults.hide(), b._calculateSearchWayPoints(), b._sortCards(a.results[0].geometry.location)
                }), this.disambiguationSearch = !1
            }
        }, {
            key: "_geoCodeInputOnMultipleResult",
            value: function(a) {
                _get(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "_geoCodeInputOnMultipleResult", this).call(this, a)
            }
        }, {
            key: "_sortCards",
            value: function(a) {
                var b, c, d, e, f, g, h = $(".cardContainer.future", this.$element),
                    i = $(".MapLocationCardsHeader", this.$element),
                    j = $(".TAOPT_title", this.$element),
                    k = $(".MapLocationCards", this.$element),
                    l = $(".utility");
                this.isMobileNav && (l = $(".navMobile-menu")), k.addClass("userSearch"), j.hide(), i.show(), h.each(function() {
                    c = $(this).find(".card").data("lat"), d = $(this).find(".card").data("lng"), f = $(this).find(".eventLocation"), g = $(this).find(".card").data("city"), b = new google.maps.LatLng(c, d), e = google.maps.geometry.spherical.computeDistanceBetween(a, b), e /= 1e3, "km" !== k.data("distance-format") && (e = .621371 * e), $(this).data("distance", e), g = g + " (" + Math.ceil(e) + " " + k.data("distance-format") + ")", f.text(g)
                }), h.detach(), h.sort(function(a, b) {
                    return parseFloat($(a).data("distance")) - parseFloat($(b).data("distance"))
                }), $(".MapLocationCards > .row", this.$element).append(h), this.hiddenCards !== !1 && (h.show(), this._hideCards()), $("html, body").animate({
                    scrollTop: k.offset().top - l.height()
                }, 800), this.inputSearch = !0
            }
        }, {
            key: "_fixHeader",
            value: function() {
                var a = $(".MapLocationCardsHeader", this.$element),
                    b = $(".MapLocationCards", this.$element),
                    c = $(window).scrollTop(),
                    d = $(".utility").height();
                this.isMobileNav && (d = 0), c + $(window).height() > this.cardBottom && b.innerHeight() < $(window).height() ? (a.removeClass("headerFixed").css({
                    left: "",
                    top: "",
                    transform: ""
                }), b.removeClass("searchResults")) : c + $(window).height() > this.cardBottom ? (a.removeClass("headerFixed").addClass("headerStop").css({
                    left: "",
                    top: b.innerHeight() - $(window).height() + d,
                    transform: ""
                }), b.addClass("searchResults")) : c >= this.cardTop - d ? (a.addClass("headerFixed").removeClass("headerStop").css({
                    left: b.offset().left,
                    top: d
                }), this.isMobileNav && a.css("transform", this.headerOffset), b.addClass("searchResults")) : (a.removeClass("headerFixed headerStop").css({
                    left: "",
                    top: "",
                    transform: ""
                }), b.removeClass("searchResults"))
            }
        }]), b
    }(MapLocation2Base),
    ItinaryMap = function(a) {
        function b(a, c) {
            _classCallCheck(this, b);
            var d = _possibleConstructorReturn(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
            return d._setMapKeysState(), d
        }
        return _inherits(b, a), _createClass(b, [{
            key: "_setUpEvents",
            value: function() {
                var a = this;
                $(".searchAgainCTA, .searchAgainBtn", this.$element).on("click tap", function() {
                    a.$searchInput.val(""), $("html, body").animate({
                        scrollTop: a.$search.offset().top - $(".utility").height()
                    }, 800, function() {
                        this.$searchInput.focus()
                    })
                }), $(window).smartresize(function() {
                    a._screenSize()
                }), this._mapDisabled || (this._mapHeight(), this.resize && this.apiReady && this._centreMapOnCountry()), $(window).on("api:ready", function() {
                    a._initMap()
                })
            }
        }, {
            key: "_setMapKeysState",
            value: function() {
                $(".map-key").css("display", "block"), $(".futureEvent", this.$element).css({
                    opacity: "1"
                }), $(".clusterEvent", this.$element).css("display", "none"), $(".pastEvent", this.$element).css("display", "none"), $(".pastEventSelected", this.$element).css("display", "none"), $(".futureEventSelected", this.$element).css("display", "none"), $(".userLocation", this.$element).css("display", "none")
            }
        }]), b
    }(MapLocation2Base),
    RideAndDrive = function(a) {
        function b(a, c) {
            _classCallCheck(this, b);
            var d = _possibleConstructorReturn(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
            return d._setMapKeysState(), d
        }
        return _inherits(b, a), _createClass(b, [{
            key: "_createCta",
            value: function(a, b) {
                var c = "";
                return this.$element.hasClass("noDirections") || this.$element.hasClass("noDirections") || (c = '<div><a href="#" class="cta-secondary cta--arrow secondaryLinkWithStyle left get-directions" data-latlng="' + b + '"><span>' + this._directionsTranslation + "</span></a></div>"), c
            }
        }, {
            key: "_setMapKeysState",
            value: function() {
                $(".map-key").css("display", "block"), $(".futureEvent", this.$element).css({
                    opacity: "1"
                }), $(".clusterEvent", this.$element).css("display", "none"), $(".pastEvent", this.$element).css("display", "none"), $(".pastEventSelected", this.$element).css("display", "none"), $(".futureEventSelected", this.$element).css("display", "none"), $(".userLocation", this.$element).css("display", "none"), $(".map-mobile-menu", this.$element).css("display", "none")
            }
        }]), b
    }(ArtOfPerformance);
! function(a, b, c) {
    var d = {
        uiSelectors: {
            groups: ".accordion-group",
            toggleIcons: ".accordion-toggle-icon",
            toggleButton: "a.toggle",
            toggleAllButton: "a.accordion-toggle-all",
            openText: "a.toggle .open",
            closeText: "a.toggle .close",
            fixedHeader: ".accordion-fixed-header",
            header: ".accordion-group-title",
            content: ".accordion-group-content",
            title: ".accordion-group-title-inner",
            icon: ".accordion-toggle-icon",
            innerContent: ".accordion-group-content .accordion-group-content-inner"
        },
        _classes: {
            fixedVariant: "Accordion--fix-header",
            fixed: "fixed",
            transitioning: "transitioning"
        },
        events: {
            "click .accordion-group-title": "_toggleSection"
        },
        _status: {},
        _pageHeader: null,
        _pageHeaderHeight: null,
        _stuck: !1,
        init_rtl: function() {},
        init: function() {
            var d = this,
                e = this.$element.hasClass(this._classes.fixedVariant);
            this._pageHeader = a("#header"), this.ui("toggleIcons").hasClass("closed") ? this.calculateNewHeight() : (this.ui("toggleIcons").addClass("open"), this.ui("groups").addClass("open")), this.ui("groups").not(":first").each(function(b, c) {
                d._toggleSection({
                    currentTarget: a(c).find(".accordion-group-title")
                })
            }), this.ui("toggleButton").click(function(c) {
                c.preventDefault(), a(b).trigger("lazyload"), d._toggleAll()
            }), this.ui("groups").on("click", ".accordion-fixed-header .accordion-group-title", function(b) {
                b.preventDefault();
                var c = a(b.currentTarget).parent().siblings(".accordion-group-title");
                e && site.utils.scrollTo(c, 0), d._toggleSection({
                    currentTarget: c[0]
                }), d._unstick()
            }), e && a(c).scroll(this._setStickyHeader.bind(this))
        },
        externalClose: function() {
            var b = this;
            this.ui("toggleIcons").addClass("open").removeClass("closed"), this.ui("groups").addClass("open").removeClass("closed"), this.ui("groups").each(function(c, d) {
                b._toggleSection({
                    currentTarget: a(d).find(".accordion-group-title")
                })
            })
        },
        externalOpen: function() {
            var b = this;
            this.ui("toggleIcons").addClass("closed").removeClass("open"), this.ui("groups").addClass("closed").removeClass("open"), this.ui("groups").each(function(c, d) {
                b._toggleSection({
                    currentTarget: a(d).find(".accordion-group-title")
                })
            })
        },
        getStatus: function() {
            return this._status
        },
        _toggleAll: function() {
            var b = this;
            this._status.open !== this._status.total ? (this.ui("toggleIcons").addClass("closed").removeClass("open"), this.ui("groups").addClass("closed").removeClass("open")) : (this.ui("toggleIcons").addClass("open").removeClass("closed"), this.ui("groups").addClass("open").removeClass("closed")), this.ui("groups").each(function(c, d) {
                b._toggleSection({
                    currentTarget: a(d).find(".accordion-group-title")
                })
            })
        },
        calculateNewHeight: function() {
            var b = 0;
            this.$element.find("> div").each(function(c, d) {
                if (a(d).hasClass("header-row") && (b += a(d).outerHeight()), a(d).hasClass("accordion-group")) {
                    var e = a(d).find(".accordion-group-title");
                    e && null !== e.outerHeight() && (b += e.outerHeight());
                    var f = a(d).find(".accordion-group-content"),
                        g = f && (f.parent().hasClass("open") || f.parent().hasClass("always-open"));
                    if (g) {
                        var h = f.find("table").length ? f.find("table") : f.find(".accordion-group-content-inner"),
                            i = function(b) {
                                var c = a(".TabbedContainer", b),
                                    d = c.length && a(".DxTabs__tab", b).length > 1,
                                    e = a(".snippet", b);
                                return d && !e.hasClass("snippet--force-mobile") ? parseFloat(c.css("margin-top")) : 0
                            },
                            j = h.outerHeight() + i(h);
                        f.height(j), b += j
                    }
                }
            }), this.$element.hasClass("data-container") && (b += 120);
            var c = this.$element.hasClass("Accordion--mobile-only") ? b : b + 2;
            this.$element.height(c), this.$element.trigger("height-change", [c]), this._checkStatus()
        },
        _resetStatus: function() {
            this._status = {
                total: 0,
                open: 0,
                closed: 0
            }
        },
        _checkStatus: function() {
            var b = this;
            this._resetStatus(), this.ui("groups").each(function(c, d) {
                a(d).hasClass("always-open") || (a(d).hasClass("open") ? b._status.open += 1 : b._status.closed += 1, b._status.total += 1)
            }), this._renderStatusText()
        },
        _renderStatusText: function() {
            this.ui("openText").hide(), this.ui("closeText").hide(), 0 === this._status.open ? this.ui("openText").show() : 0 === this._status.closed ? this.ui("closeText").show() : this.ui("openText").show()
        },
        _toggleSection: function(b) {
            var c = a(b.currentTarget),
                d = c.find(".accordion-toggle-icon"),
                e = c.siblings(".accordion-group-content"),
                f = e.find("table").length ? e.find("table") : e.find(".accordion-group-content-inner"),
                g = f.outerHeight();
            d.hasClass("open") ? (d.removeClass("open").addClass("closed"), c.parent().removeClass("open").addClass("closed"), e.height(0)) : (d.removeClass("closed").addClass("open"), c.parent().removeClass("closed").addClass("open"), e.height(g)), this.calculateNewHeight(), this.$element.trigger("Accordion:toggled")
        },
        _setStickyHeader: function() {
            var c = this,
                d = a(".headerWrapper"),
                e = d.outerHeight(),
                f = a(b).scrollTop(),
                g = a(this.ui("header")).offset().top - e,
                h = this.$element.offset().top - e + this.$element.height();
            if (f >= g && h >= f)
                if (this._stuck)
                    if (Math.abs(f - h) <= this.ui("header").outerHeight()) {
                        var i = Math.abs(f - h);
                        i > e && (i = e), b.requestAnimationFrame(function() {
                            c.ui("fixedHeader").css({
                                top: i
                            }).addClass(c._classes.transitioning).find(c.uiSelectors.title)
                        })
                    } else parseInt(this.ui("fixedHeader").css("top"), 10) !== e + 5 && b.requestAnimationFrame(function() {
                        c.ui("fixedHeader").css({
                            top: d.outerHeight()
                        }).removeClass(c._classes.transitioning).find(c.uiSelectors.title)
                    });
            else this._stick();
            else this._unstick()
        },
        _stick: function() {
            this._stuck || (this._stuck = !0, this.ui("fixedHeader").html(this.ui("header").clone()), this.ui("fixedHeader").addClass(this._classes.fixed), this.ui("fixedHeader").css("top", this._pageHeaderHeight))
        },
        _unstick: function() {
            this._stuck && (this._stuck = !1, this.ui("fixedHeader").empty().removeClass(this._classes.fixed))
        }
    };
    jQuery.createComponent("Accordion", d)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            components: "> *"
        },
        _attributes: {
            metaTag: 'head [name="accordionOnMobile"]',
            group: "data-accordion-group",
            title: "data-accordion-title"
        },
        _classes: {
            accordion: "Accordion",
            mobileAccordion: "Accordion--mobile-only",
            accordionTitle: "accordion-group-title",
            hideMobile: "Accordion--mobile-hide"
        },
        _componentsData: [{
            componentTitle: "Snippet",
            headerContainer: "headingCentre",
            titleContent: "headingTextMain"
        }, {
            componentTitle: "SameSizeCarousel",
            headerContainer: "headerBlock",
            titleContent: "headingTextMain"
        }, {
            componentTitle: "ModelSelector",
            headerContainer: "inPageModelSelectorHeader",
            titleContent: "headingTextMain"
        }],
        _foundIndex: !1,
        _groupIndex: 1,
        _group: [],
        _groups: [],
        _safetyArray: [],
        _isMobile: null,
        _components: null,
        _accordions: null,
        _groupComponents: function(b, c) {
            var d = this;
            if (c = a(c), c.attr(d._attributes.group)) d._foundIndex = !0, d._buildGroups(c);
            else if (d._foundIndex) {
                var e = a(this._components[b + 1]),
                    f = parseInt(e.attr(d._attributes.group), 10);
                d._safetyArray.push(c), f && f === d._groupIndex ? (a.merge(d._group, d._safetyArray), d._safetyArray = []) : f && f !== d._groupIndex && (d._safetyArray = [])
            }
            b === this._components.length - 1 && d._pushGroup()
        },
        _pushGroup: function() {
            this._groups.push(this._group), this._group = [], this._groupIndex++
        },
        _buildGroups: function(a) {
            var b = parseInt(a.attr(this._attributes.group), 10);
            b !== this._groupIndex && a.attr(this._attributes.group) && this._pushGroup(), this._group.push(a)
        },
        _buildMarkup: function(b, c) {
            var d = a(),
                e = this._getTitle(c),
                f = b > 0 ? " closed" : "",
                g = a('<div class="Accordion Accordion--mobile-only Accordion--fix-header"><div class="accordion-group' + f + '"><div class="accordion-group-content"><div class="accordion-group-content-inner"></div></div></div></div>'),
                h = a('<div class="accordion-fixed-header"></div><div class="accordion-group-title"><div class="accordion-toggle-icon' + f + '"></div><div class="accordion-group-title-inner">' + e + "</div></div>");
            a.each(c, function(a, b) {
                d = d.add(b)
            }), d.wrapAll(g).parents(".accordion-group").prepend(h)
        },
        _getTitle: function(b) {
            var c = this,
                d = "",
                e = "",
                f = a(b[0]),
                g = 0;
            for (a.each(b, function(a, b) {
                    return d = b.attr(c._attributes.title), d ? !1 : void 0
                }), g; g < this._componentsData.length; g++) {
                var h = this._componentsData[g];
                f.hasClass("snippet") && !f.hasClass("snippet--force-mobile") && (f.addClass(c._classes.hideMobile), e = f.find("." + h.titleContent).text()), f.hasClass(h.componentTitle) && !f.hasClass(h.componentTitle + "--force-mobile") && (f.find("." + h.headerContainer).addClass(c._classes.hideMobile), e = f.find("." + h.titleContent).text())
            }
            return d = d ? d : e
        },
        _setHeights: function() {
            var b = this;
            setTimeout(function() {
                if (b._accordions.find("." + b._classes.accordionTitle).is(":visible")) b._isMobile = !0, b._accordions.each(function(b, c) {
                    a(c).Accordion("calculateNewHeight")
                });
                else {
                    if (b._isMobile === !1) return !1;
                    b._isMobile = !1, b._accordions.each(function(b, c) {
                        a(c).css("height", ""), a(c).find(".accordion-group-content").css("height", "")
                    })
                }
            }, 600)
        },
        _setupComponentSpecific: function() {
            var b = this;
            a(".TabbedContainer .tab-link").on("click", function() {
                b._setHeights()
            }), a(".primaryLinkWithStyle, .secondaryLinkWithStyle", "." + this._classes.accordion).click(function(b) {
                site.utils.checkDeepLink(a(this).attr("href"))
            }), a(".Interior360").on("click", ".load-button, .pano-reset-control", function(a) {
                b._setHeights()
            }), a(".DualFrameCarousel .carouselNavigation .prev, .DualFrameCarousel .carouselNavigation .next").on("click", function(b) {
                var c = a(this);
                setTimeout(function() {
                    c.closest(".Accordion--mobile-only").Accordion("calculateNewHeight")
                }, 800)
            }), a(".DxTabs").on("DxTabs:fadein", function(c) {
                b._accordions.each(function(b, c) {
                    a(c).Accordion("calculateNewHeight")
                })
            })
        },
        init: function() {
            var c = this;
            this._components = this.ui("components");
            var d = a(this._attributes.metaTag);
            d.length < 1 || (a.each(this._components, function(a, b) {
                c._groupComponents(a, b)
            }), a.each(this._groups, function(a, b) {
                c._buildMarkup(a, b)
            }), this._accordions = a("." + this._classes.mobileAccordion), this._setHeights(), a(b).smartresize(c._setHeights.bind(c)), this._setupComponentSpecific())
        }
    };
    jQuery.createComponent("AccordionContainer", e)
}(jQuery, window, document),
function(a) {
    var b = {
        _mainContainer: null,
        _vehiclesContainer: null,
        _api: null,
        _apiCount: null,
        _preloadCounter: 0,
        _maxCards: 9,
        _minCards: null,
        _numCards: null,
        _vehicles: [],
        _swiper: null,
        _paginationKeyPressed: !1,
        init: function() {
            var b = this;
            this._mainContainer = a(".ApprovedUsedVehicle__container", this.$element), this._vehiclesContainer = a(".ApprovedUsedVehicle__swiper-wrapper", this.$element), this._viewstock1 = a(".ApprovedUsedVehicle__viewstock-copy1", this.$element), this._viewstock2 = a(".ApprovedUsedVehicle__viewstock-copy2", this.$element), this._viewstockCTA = a(".ApprovedUsedVehicle__viewstock .primaryLinkWithStyle", this.$element), this._notifications = a(".ApprovedUsedVehicle__notifications", this.$element), this._pagination = a(".ApprovedUsedVehicle__swiper-pagination", this.$element), this._swiperContainer = a(".ApprovedUsedVehicle__swiper-container", this.$element), this._notification = this.$element.data("notification-new"), this._api = this.$element.data("api"), this._translations = a(".ApprovedUsedVehicle__translations", this.$element), this._apiCount = this.$element.data("api-count");
            var c = site.utils.aria.KeyCode.SPACE;
            a(document).on("keydown", function(b) {
                b.keyCode === c && a(":focus").hasClass("ApprovedUsedVehicle__pagination-bullet") && (b.preventDefault(), a(":focus").trigger("click"))
            }), this._getVehicles(), this._positionPagination(), this._checkDeviceType(), a(window).smartresize(function() {
                b._positionPagination(), b._setTabbableSlides(), b._checkDeviceType()
            })
        },
        _checkDeviceType: function() {
            site.utils.isMobileDevice() ? this.$element.addClass("isMobile") : this.$element.removeClass("isMobile")
        },
        _positionPagination: function() {
            site.utils.isBreakpointSmall(!1) ? this._pagination.insertBefore(this._swiperContainer) : this._pagination.insertAfter(this._swiperContainer)
        },
        _getVehicles: function() {
            var b = this,
                c = a(".ApprovedUsedVehicle__card");
            this._vehiclesContainer.empty(), a.ajax({
                url: this._api,
                method: "GET",
                dataType: "xml"
            }).done(function(d) {
                b._setViewAllURL(a(d).find("avlDeepLink").text());
                var e = a(d).find("image");
                b._minCards = b._isDesktop() ? 3 : 2, e.length < b._minCards || (e.slice(0, b._maxCards).each(function(d, e) {
                    var f = a(e),
                        g = c.clone(),
                        h = f.find("series").text(),
                        i = f.find("variant").text(),
                        j = f.find("model").text(),
                        k = f.find("fullImage").text(),
                        l = f.find("price").text(),
                        m = f.find("mileage").text(),
                        n = f.find("transmission").text(),
                        o = f.find("fuel").text(),
                        p = f.find("regDate").text(),
                        q = f.find("url").text();
                    if (b._isEmpty(h) || b._isEmpty(m) || b._isEmpty(n) || b._isEmpty(p) || b._isEmpty(q) || b._isEmpty(k)) return !0;
                    var r = h + " " + i,
                        s = "" + j;
                    g.find(".ApprovedUsedVehicle__card-header", g).text(r), g.find(".ApprovedUsedVehicle__card-subheader", g).text(s), g.find(".ApprovedUsedVehicle__card-image", g).attr("alt", r), g.find("img").attr("src", k), g.find(".ApprovedUsedVehicle__card-image-link").attr("href", q), g.find(".ApprovedUsedVehicle__card-price", g).text(new Intl.NumberFormat("en-GB", {
                        style: "currency",
                        minimumFractionDigits: 0,
                        currency: "GBP"
                    }).format(l)), g.find(".ApprovedUsedVehicle__card-mileage-value", g).text(new Intl.NumberFormat("en-GB").format(m) + " " + b._translations.find(".mileage-abbreviation").text()), g.find(".ApprovedUsedVehicle__card-transmission-value", g).text(n), g.find(".ApprovedUsedVehicle__card-fuel-value", g).text(o), g.find(".ApprovedUsedVehicle__card-registration-value", g).text(p), g.find(".ApprovedUsedVehicle__card-viewDetails", g).attr("href", q), g.appendTo(b._vehiclesContainer), b._numCards = d
                }), b._getVehiclesCount(), b._initSwiper())
            })
        },
        _setViewAllURL: function(a) {
            this._isEmpty(a) || this._viewstockCTA.attr("href", a)
        },
        _isEmpty: function(a) {
            return null === a || void 0 === a || "" === a.trim()
        },
        _shouldShowSwiper: function() {
            return this._isDesktop() === !0 && this._numCards > 2 || this._isDesktop() === !1 && this._numCards > 1
        },
        _isDesktop: function() {
            return !site.utils.isBreakpointSmall(!1) && !site.utils.isBreakpointMedium(!1)
        },
        _initSwiper: function() {
            var b = this,
                c = this._shouldShowSwiper();
            this._pagination.css("display", c ? "inline-block" : "none"), this._swiper = new Swiper(".ApprovedUsedVehicle__swiper-container", {
                grabCursor: !0,
                slidesPerView: 3,
                spaceBetween: 30,
                keyboard: {
                    enabled: !0,
                    onlyInViewport: !0
                },
                allowTouchMove: c,
                slidesPerGroup: 3,
                breakpoints: {
                    900: {
                        slidesPerView: 2,
                        spaceBetween: 20,
                        slidesPerGroup: 2
                    }
                },
                a11y: {
                    enabled: !0
                },
                pagination: {
                    el: ".ApprovedUsedVehicle__swiper-pagination",
                    clickable: !0,
                    renderBullet: function(a, b) {
                        return '<span class="' + b + '"></span>'
                    },
                    bulletClass: "ApprovedUsedVehicle__pagination-bullet",
                    bulletActiveClass: "ApprovedUsedVehicle__pagination-bullet--active"
                }
            }), this._swiper.on("imagesReady", function() {
                b._adjustHeadersHeight()
            }), this._swiper.on("resize", function() {
                b._minCards = b._isDesktop() ? 3 : 2, c = b._shouldShowSwiper(), b._pagination.css("display", c ? "inline-block" : "none"), b._swiper.allowTouchMove = c, a(".ApprovedUsedVehicle__card-content").css("height", "auto"), b._adjustHeadersHeight(), b._adjustBlankSlides()
            }), this._swiper.on("slideChangeTransitionStart", function() {
                a(".swiper-slide").css("visibility", "visible")
            }), this._swiper.on("slideChangeTransitionEnd", function() {
                b._setTabbableSlides();
                var c = a(".swiper-slide").filter(function(b, c) {
                    return "visible" === a(c).css("visibility")
                });
                a(".ApprovedUsedVehicle__pagination-bullet").is(":focus") && (a("body").hasClass("focusStylesOn") || site.utils.isMobileDevice()) && c.eq(0).find(".ApprovedUsedVehicle__card-image-link").focus()
            }), this._adjustBlankSlides(), this._setTabbableSlides()
        },
        _adjustHeadersHeight: function() {
            var b = 0;
            a(".ApprovedUsedVehicle__card-content").each(function(c, d) {
                a(d).height() > b && (b = a(d).height())
            }), a(".ApprovedUsedVehicle__card-content").height(b)
        },
        _setTabbableSlides: function() {
            var b = this,
                c = this.$element.offset().left;
            this.$element.find(".swiper-slide").each(function(d, e) {
                var f = Math.ceil(a(e).offset().left - c),
                    g = b._swiperContainer.offset().left - c,
                    h = b._swiperContainer.outerWidth();
                g > f || f > h ? a(e).css("visibility", "hidden") : a(e).css("visibility", "visible")
            })
        },
        _adjustBlankSlides: function() {
            for (a(".swiper-blank").remove(), this._swiper.update(); this._swiper.slides.length % this._minCards !== 0;) this._swiper.addSlide(this._swiper.slides.length, '<div tabindex="-1" class="swiper-slide swiper-blank"></div>');
            this._swiper.update()
        },
        _getVehiclesCount: function() {
            var b = this;
            a.ajax({
                url: this._apiCount,
                method: "GET",
                dataType: "xml"
            }).done(function(c) {
                var d = a(c).find("vehiclecount").text(),
                    e = b._viewstock2.html(),
                    f = e.replace("{{retailer.auv.vehicle.count}}", '<strong class="ApprovedUsedVehicle__viewstock-stock">' + d + "</strong>");
                b.$element.addClass("ApprovedUsedVehicle--loaded"), setTimeout(function() {
                    b._viewstock2.html(f).css("display", "block"), b._viewstock1.css("display", "none"), b.$element.addClass("noTransition"), b._notifications.text(b._notification)
                }, 1e3)
            })
        }
    };
    jQuery.createComponent("ApprovedUsedVehicle", b)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            items: ".items",
            header: ".items .heading"
        },
        _isInTwoColumnContainer: !1,
        _totalItems: 0,
        init: function() {
            var a = this;
            a._isInTwoColumnContainer = a.$element.parents(".TwoColumnContainer").length, a._totalItems = a.ui("items").data("total"), a._resizeTextInit(), site.utils.isMobileDevice() && site.utils.isBreakpointSmall() && a._setupMobileTel()
        },
        _resizeTextInit: function() {
            var c = this,
                d = a(b);
            d.smartresize(function() {
                b.setTimeout(function() {
                    c._resizeText()
                }, 1e3)
            }), c._resizeText()
        },
        _setupMobileTel: function() {
            var b = this,
                c = b.ui("items").find(".el");
            c.each(function() {
                var b = a(this).find("span"),
                    c = b.data("tel");
                c && b.wrap('<a href="tel:' + c + '"></a>')
            })
        },
        _multipleEqualHeights: function(a, b) {
            for (var c = this.ui("header").length, d = Math.ceil(c / a), e = 0, f = function(b, c) {
                    var d = e,
                        f = e + (a - 1);
                    return b >= d && f >= b
                }, g = 0; d > g; g++) this.ui("header").filter(f).equalHeights(), e += a
        },
        _resizeText: function() {
            var c = this;
            c.ui("header").removeAttr("style"), c._isInTwoColumnContainer ? a(b).width() > site.breakpoints.wider ? c._multipleEqualHeights(2, c.ui("header")) : ("large" === site.breakpoints.current || "medium" === site.breakpoints.current) && c._multipleEqualHeights(4, c.ui("header")) : "large" === site.breakpoints.current ? 4 === c._totalItems || 7 === c._totalItems || 8 === c._totalItems ? c._multipleEqualHeights(4, c.ui("header")) : 5 === c._totalItems || 6 === c._totalItems ? c._multipleEqualHeights(3, c.ui("header")) : c.ui("header").equalHeights() : "medium" === site.breakpoints.current && c._multipleEqualHeights(2, c.ui("header"))
        }
    };
    jQuery.createComponent("AtAGlance", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            localData: null,
            dataURL: null,
            wrapper: !0,
            autoSubmit: !1,
            keyMatchTitle: "",
            youSearchedTitle: "",
            appendAfter: ""
        },
        _results: [],
        _menuClass: "",
        _keypressTimer: null,
        _minCharactersForAutocomplete: 2,
        _searchMenu: !0,
        _dataKey: "query",
        init: function() {
            this._menuClass = "acm-" + this._guid(), "undefined" != typeof this.options.minCharacters && (this._minCharactersForAutocomplete = this.options.minCharacters), "undefined" != typeof this.options.searchMenu && (this._searchMenu = this.options.searchMenu), "undefined" != typeof this.options.dataKey && (this._dataKey = this.options.dataKey), (this.options.localData || this.options.localAndRemote || !this._searchMenu) && this.$element.wrap("<div class='autoCompleteContainer'></div>");
            var b;
            b = "" === this.options.appendAfter ? this.$element : a(this.options.appendAfter), b.after("<div class='autoCompleteMenu " + this._menuClass + "'></div>"), this._addEvents(), this._addKeyboardNavigation()
        },
        _populateData: function() {
            var a, b = this.options.dataURL,
                c = this.options.localAndRemote,
                d = this.options.validateRequestRegex,
                e = this.options.persistData,
                f = this.options.autoPopulateSingleResult;
            clearTimeout(this._keypressTimer), this._keypressTimer = setTimeout(function() {
                if (this._results = [], c || b) {
                    var g = site.utils.removeHTMLTags(this.$element.val().trim()),
                        h = {};
                    h[this._dataKey] = g, a = function(a) {
                        c && (this._results = this._handleLocalData(this._results)), this._results = this._handleRemoteData(this._results, a), e && (this._storedResults = a), f && 1 === a.length ? this._selectMenuOption(this._results[0]) : this._searchMenu ? this._createSearchMenu() : this._createMenu()
                    }.bind(this), !d || d && new RegExp(d).test(g) ? this._requestData(b, h, a) : a(this._storedResults || [])
                } else this._results = this._handleLocalData(this._results), this._createMenu()
            }.bind(this), 300)
        },
        _requestData: function(b, c, d) {
            a.ajax({
                url: b,
                dataType: "json",
                data: c,
                beforeSend: function() {
                    this.$element.trigger("requesting-data")
                }.bind(this),
                success: d,
                complete: function() {
                    this.$element.trigger("request-complete")
                }.bind(this)
            })
        },
        _handleLocalData: function(a) {
            for (var b = this.options.localData || [], c = 0; c < b.length; c++) b[c].toLowerCase().indexOf(this.$element.val().toLowerCase()) > -1 && a.push(b[c]);
            return a
        },
        _handleRemoteData: function(a, b) {
            var c = this.options.processResponse;
            return a = Array.isArray(b) ? c ? a.concat(c(b)) : a.concat(b) : b
        },
        _createMenu: function(b) {
            for (var c = this, d = a("." + this._menuClass), e = "", f = 0; f < this._results.length; f++) e += "<div class='autoCompleteItem' tabindex='-1'>" + this._results[f] + "</div>";
            d.html(e).show(), a(".autoCompleteItem").on("click tap", function(b) {
                b.stopPropagation(), c._selectMenuOption(a(this).text())
            })
        },
        _selectMenuOption: function(b) {
            var c = a("." + this._menuClass),
                d = this.options.processSelect;
            d ? d(b) : this.$element.val(b), c.empty(), this.options.autoSubmit && this.$element.parents("form").submit()
        },
        _createSearchMenu: function(b) {
            var c = this,
                d = a("." + c._menuClass),
                e = c.options.youSearchedTitle,
                f = "";
            f += "<a class='autoCompleteTitle' href='#'>" + e.replace("##searchTerm##", "'" + site.utils.removeHTMLTags(c.$element.val()) + "'") + "</a>";
            for (var g = c._results.keyMatches, h = 0; h < g.length; h++) f += "<a href='" + g[h].url + "' class='autoCompleteItem promoted'>" + g[h].title + "</a>";
            for (var i = c._results.suggestions, j = 0; j < i.length; j++) f += "<a href='" + i[j].url + "' class='autoCompleteItem'>" + i[j].title + "</a>";
            d.html(f), a(".autoCompleteTitle").on("click tap", function(a) {
                a.stopPropagation(), c.$element.parents("form").submit()
            })
        },
        _hideAutoComplete: function() {
            a("." + this._menuClass).hide()
        },
        _addEvents: function(b) {
            var c = a("." + this._menuClass),
                d = "";
            d = this._inputSupport() ? "input" : "keyup", this.$element.on(d, function() {
                this._results = [], this.$element.val().length > this._minCharactersForAutocomplete ? this._populateData() : (this.options.persistData && (this._storedResults = []), c.empty())
            }.bind(this)), this.options.persistOptions ? (this.$element.on("focus", function(a) {
                a.stopPropagation(), c.show()
            }.bind(this)), a("html").on("click tap", function(b) {
                a(b.originalEvent.target).is(this.$element) || this._hideAutoComplete()
            }.bind(this))) : a("html").on("click tap", function() {
                c.empty()
            })
        },
        _inputSupport: function() {
            var a = c.createElement("input"),
                b = "oninput" in a && !0;
            return b || (a.setAttribute("oninput", "return;"), b = "function" == typeof a.oninput && !0), b
        },
        _guid: function() {
            function a() {
                return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
            }
            return a() + a() + "-" + a() + "-" + a()
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = b.$element,
                d = a("." + b._menuClass);
            c.keydown(function(a) {
                return 40 === a.keyCode ? (b._searchMenu && b.options.dataURL ? d.find("a:first").focus() : d.find("> div:first").focus(), !1) : void 0
            }), d.keydown(function(d) {
                var e, f;
                return b._searchMenu && b.options.dataURL ? (e = a(this).find("a:first"), f = a(this).find("a:focus")) : (e = a(this).find("div:first"), f = a(this).find("div:focus")), 40 === d.keyCode ? (b._searchMenu && b.options.dataURL ? f.next("a").focus() : f.next("div").focus(), !1) : 38 === d.keyCode ? (f.is(e) ? c.focus() : b._searchMenu && b.options.dataURL ? f.prev("a").focus() : f.prev("div").focus(), !1) : void(b.options.selectWithEnterKey && 13 === d.keyCode && b._selectMenuOption(f.text()))
            })
        }
    };
    jQuery.createComponent("AutoComplete", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            a("h1[itemprop='name']").hide()
        }
    };
    jQuery.createComponent("BazaarVoiceNameplateRating", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            var a = this.$element.parent().data("bazaar-url");
            site.utils.addScriptForBazaarVoice(a)
        }
    };
    jQuery.createComponent("BazaarVoiceRating", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _postCodes: null,
        _URL: null,
        _linkBehaviour: null,
        init: function() {
            this._postCodes = this.$element.data("catchment-post-codes").split(","), this.bindEvents()
        },
        bindEvents: function() {
            var a = this;
            this.$element.find(".BookATestDrivePostcodeLookupInput").on("keyup", function(b) {
                13 === b.keyCode && a.passPostcode()
            }), this.$element.find(".BookATestDrivePostcodeLookupContinueButton").on("click tap", function(b) {
                a.passPostcode()
            })
        },
        validate_postcode_prefix: function(a) {
            a = a.replace(/\s/g, "");
            var b = /(([A-Z][0-9][0-9]?)|(([A-Z][A-Z][0-9][0-9]?)|(([A-Z][0-9][A-Z])|([A-Z][A-Z][0-9][A-Z]))))/i;
            return b.test(a)
        },
        validate_postcode: function(a) {
            a = a.replace(/\s/g, "");
            var b = /((([A-Z][0-9][0-9]?)|(([A-Z][A-Z][0-9][0-9]?)|(([A-Z][0-9][A-Z])|([A-Z][A-Z][0-9][A-Z]))))[0-9][A-Z]{2})/i;
            return b.test(a)
        },
        setURL: function() {
            var a = this._URL,
                d = this._linkBehaviour;
            if ("small" !== site.breakpoints.current && "medium" !== site.breakpoints.current || "overlay" !== d.toLowerCase())
                if ("current" === d.toLowerCase()) {
                    var e = c.createElement("script");
                    e.src = a, this.$element.find(".BookATestDriveWidget").append(e)
                } else this.$element.find(".BookATestDriveLink").attr("href", a), this.$element.find(".BookATestDriveLink").attr("data-target", d), this.$element.find(".BookATestDriveLink").trigger("click");
            else {
                var f = (new Date).getUTCMilliseconds();
                b.open(a, "BookATestDrive" + f)
            }
        },
        passPostcode: function() {
            var b = this,
                c = this.$element.find(".BookATestDrivePostcodeLookupInput")[0].value,
                d = !0;
            c.length < 5 ? this.validate_postcode_prefix(c) !== !0 && (d = !1) : this.validate_postcode(c) !== !0 && (d = !1), d === !1 ? (this.$element.find(".BookATestDrivePostcodeLookupError").css("display", "block"), this.$element.find(".BookATestDriveWidget").css("display", "none")) : (-1 !== a.inArray(c.substring(0, 2).toUpperCase(), b._postCodes) || -1 !== a.inArray(c.substring(0, 3).toUpperCase(), b._postCodes) || -1 !== a.inArray(c.substring(0, 4).toUpperCase(), b._postCodes) ? (this._URL = this.$element.data("service-centre-link"), this._linkBehaviour = this.$element.data("service-centre-behaviour")) : (this._URL = this.$element.data("test-drive-link"), this._linkBehaviour = this.$element.data("test-drive-behaviour")), this.$element.find(".BookATestDrivePostcodeLookupError").css("display", "none"), this.$element.find(".BookATestDriveWidget").css("display", "block"), this.setURL())
        }
    };
    jQuery.createComponent("BookATestDriveRedirect", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        ui: {
            nav: ".ChargeQualifier .screen .nav",
            header: ".ChargeQualifier .screen .header",
            headerDescription: ".ChargeQualifier .screen .header p",
            screen: ".ChargeQualifier .screen",
            loading: ".ChargeQualifier #loading",
            items: ".ChargeQualifier .screen .items",
            t_items: ".ChargeQualifier .screen .t_items",
            itemLeft: ".ChargeQualifier #left",
            item_t_Left: ".ChargeQualifier #t_left",
            itemLeftImg: ".ChargeQualifier #left img",
            itemLeftImgContainer: ".ChargeQualifier #left .item-icon div",
            itemLeftTitle: ".ChargeQualifier #left .item-title",
            itemLeftDescription: ".ChargeQualifier #left .item-description",
            itemLeftLink: ".ChargeQualifier #left .item-link",
            itemMiddle: ".ChargeQualifier #middle",
            item_t_Middle: ".ChargeQualifier #t_middle",
            itemMiddleImg: ".ChargeQualifier #middle img",
            itemMiddleContainer: ".ChargeQualifier #middle .item-icon",
            itemMiddleLink: ".ChargeQualifier #middle .item-link",
            itemLeftContainer: ".ChargeQualifier #left .item-icon",
            itemRightContainer: ".ChargeQualifier #right .item-icon",
            itemMiddleImgContainer: ".ChargeQualifier #middle .item-icon div",
            itemMiddleTitle: ".ChargeQualifier #middle .item-title",
            itemMiddleDescription: ".ChargeQualifier #middle .item-description",
            itemRight: ".ChargeQualifier #right",
            item_t_Right: ".ChargeQualifier #t_right",
            itemRightImg: ".ChargeQualifier #right img",
            itemRightImgContainer: ".ChargeQualifier #right .item-icon div",
            itemRightTitle: ".ChargeQualifier #right .item-title",
            itemRightDescription: ".ChargeQualifier #right .item-description",
            itemRightLink: ".ChargeQualifier #right .item-link",
            navStartNext: ".ChargeQualifier .nav .nav-start-next",
            navBackArrow: ".ChargeQualifier .nav .nav-back-arrow",
            navBack: ".ChargeQualifier .nav .nav-back",
            pagination: ".ChargeQualifier .nav #carousel-pagination"
        },
        _currentSlideId: null,
        _previousSlideId: null,
        _currentSlide: null,
        _parentData: null,
        _history: [],
        _count: 0,
        _tmpLeft: null,
        _tmpRight: null,
        _tmpMiddle: null,
        _clickType: null,
        _imgToLoad: 0,
        _imgLoaded: 0,
        _leftIconIsSame: !1,
        _rightIconIsSame: !1,
        _imgs: [],
        _hasCarousel: !1,
        _loaded: !1,
        _highestSummary: 0,
        _mySwiper: null,
        _imgSizes: {
            large: {
                width: 264,
                height: 230,
                introductionIcon: {
                    width: 264,
                    height: 230
                }
            },
            medium: {
                width: 264,
                height: 230,
                introductionIcon: {
                    width: 264,
                    height: 230
                }
            },
            small: {
                width: 140,
                height: 122,
                introductionIcon: {
                    width: 200,
                    height: 174
                }
            },
            xsmall: {
                width: 140,
                height: 122,
                introductionIcon: {
                    width: 175,
                    height: 152
                }
            }
        },
        init: function() {
            var c = this;
            b.Promise = function(b) {
                var c = a.Deferred();
                return b(c.resolve, c.reject), c.promise()
            }, a.fx.interval = 5, Object.keys(this.ui).map(function(b) {
                c.ui[b] = a(c.ui[b])
            }), this._getData(), this._preloadImages(), a(b).on("orientationchange", function() {
                c._loaded && c._createSlide()
            }), Modernizr.touch || a(".cq-button").addClass("cq-hover"), a(".recommendation-ctas a").removeClass("left");
            var d = function() {
                var a = {};
                return function(b, c, d) {
                    d || (d = "Don't call this twice without a uniqueId"), a[d] && clearTimeout(a[d]), a[d] = setTimeout(b, c)
                }
            }();
            a(b).resize(function() {
                d(function() {
                    c._loaded && null !== c._currentSlide && c._createSlide()
                }, 500, "some unique string")
            })
        },
        _getViewportWidth: function() {
            var c = a(b).width();
            return c > 900 ? "large" : 900 >= c && c >= 740 ? "medium" : 740 > c && c >= 320 ? "small" : 320 > c ? "xsmall" : void 0
        },
        _preloadImages: function() {
            var b = this;
            a.each(this._data.screens, function(c, d) {
                d.hasOwnProperty("introductionIcon") && b._imgToLoad++, d.hasOwnProperty("pairedIcon") && b._imgToLoad++, d.hasOwnProperty("options") && a.each(d.options, function(a, c) {
                    c.hasOwnProperty("icon") && b._imgToLoad++
                })
            }), a.each(this._data.screens, function(c, d) {
                if (d.hasOwnProperty("introductionIcon")) {
                    var e = new Image;
                    e.onload = function() {
                        b._imgs.push(e), b._checkPreloading()
                    }, e.src = d.introductionIcon
                }
                d.hasOwnProperty("options") && a.each(d.options, function(a, c) {
                    var d = void 0;
                    c.hasOwnProperty("icon") && (d = new Image, d.onload = function() {
                        b._imgs.push(d), b._checkPreloading()
                    }, d.src = c.icon), c.hasOwnProperty("pairedIcon") && (d = new Image, d.onload = function() {
                        b._imgs.push(d), b._checkPreloading()
                    }, d.src = c.pairedIcon)
                })
            })
        },
        _calculateMaxHeaderHeight: function() {
            var b = this;
            a.each(this._data.screens, function(a, c) {
                b.ui.headerDescription.html(c.summary), b.ui.headerDescription.height() > b._highestSummary && ("large" === b._getViewportWidth() ? b._highestSummary = b.ui.headerDescription.height() : -1 === c.id.indexOf("recommendation") && (b._highestSummary = b.ui.headerDescription.height()))
            }), this.ui.headerDescription.html("")
        },
        _checkPreloading: function() {
            this._imgLoaded++, this._imgLoaded === this._imgToLoad && (this._loaded = !0, a("#loading").css({
                display: "none"
            }), this._calculateMaxHeaderHeight(), this._goHome())
        },
        _getImage: function(b) {
            a.each(this._imgs, function(a, c) {
                return c.src === b ? c.src : void 0
            })
        },
        _getData: function() {
            this._data = this.$element.data("screens")
        },
        _goHome: function() {
            this._goForward("welcome-screen")
        },
        _goBack: function() {
            var a = this;
            this.ui.navBack.off(), this.ui.navBackArrow.off(), this._clickType = "back", this.ui.header.stop(), this._createExitSlideAnimations("back").then(function() {
                a._history.length > 1 && (a._history.splice(a._history.length - 1, 1), a._setSlideId(a._history[a._history.length - 1]), a._createSlide())
            })
        },
        _goForward: function(a) {
            var b = this;
            this._log("_goForward --> " + a), this.ui.navStartNext.off(), this._clickType = "forward", this.ui.header.stop(), setTimeout(function() {
                b._createExitSlideAnimations().then(function() {
                    b._log("_goForward then--> exit animation done for " + b._history[b._history.length - 1]), b._setSlideId(a), b._history.push(a), b._createSlide()
                })
            }, 300)
        },
        _getSlide: function(a) {
            for (var b = 0; b < this._data.screens.length; b++)
                if (a === d) {
                    if (this._data.screens[b].id === this._currentSlideId) return this._data.screens[b]
                } else if (this._data.screens[b].id === a) return this._data.screens[b];
            return null
        },
        _setSlideId: function(a) {
            this._previousSlideId = this._currentSlideId, this._currentSlideId = a
        },
        _createWelcomeScreen: function() {
            if (this._hasCarousel === !0 && this._toggleCarousel(!1), "small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) {
                var c = a("#items");
                a(b).width() > 320 && a(b).width() < 740 ? c.css({
                    height: "358px"
                }) : c.css({
                    height: "330px"
                }), this.ui.itemMiddle.css({
                    marginTop: "63px"
                })
            }
            this.ui.itemLeftImgContainer.css({
                left: 0
            }), this.ui.itemMiddleImgContainer.css({
                left: 0
            }), this.ui.itemRightImgContainer.css({
                left: 0
            }), this.ui.t_items.css({
                display: "block"
            }), this.ui.item_t_Right.css({
                display: "inline-block",
                width: "33%"
            }), this.ui.item_t_Left.css({
                display: "inline-block",
                width: "33%"
            }), this.ui.item_t_Middle.css({
                display: "inline-block",
                width: "33%"
            }), this._log("_createWelcomeScreen"), this._toggleNavStartNextHover(!0), this._setSlideTextData(), this.ui.itemMiddleContainer.css("opacity", "1"), this.ui.items.find(".item").css("width", "100%"), this._setItemsVisibility(["#middle"]), this.ui.itemMiddleImg.attr({
                src: this._currentSlide.introductionIcon
            })
        },
        _createChooseParentScreen: function() {
            this._rightIconIsSame = !1, this._leftIconIsSame = !1, this.ui.itemLeft.css({
                cursor: "pointer"
            }), this.ui.itemMiddle.css({
                cursor: "default"
            }), this.ui.itemRight.css({
                cursor: "pointer"
            }), this._setButtonRole(this.ui.itemLeft), this._setButtonRole(this.ui.itemMiddle, !1), this._setButtonRole(this.ui.itemRight), this._log("_createWelcomeScreen"), this._hasCarousel === !0 && this._toggleCarousel(!1);
            var a = this._currentSlide.options;
            "large" === this._getViewportWidth() && (this.ui.items.find(".item").css({
                width: "33%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#middle", "#right"])), "medium" === this._getViewportWidth() && (this.ui.items.find(".item").css({
                width: "49%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#right"])), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this.ui.items.find(".item").css({
                width: "100%",
                display: "block"
            }), this._setItemsVisibility(["#left", "#right"])), this.ui.itemMiddleContainer.css("opacity", "1"), this.ui.itemLeftImg.attr({
                src: a[0].icon
            }), this.ui.itemMiddleImg.attr({
                src: this._data.screens[0].introductionIcon
            }), this.ui.itemRightImg.attr({
                src: a[1].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription], a[0]), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription], a[1]), this.ui.itemLeft.data("choice", a[0]), this.ui.itemRight.data("choice", a[1])
        },
        _createIntermediateScreen: function() {
            this._log("_createIntermediateScreen"), this._hasCarousel === !0 && this._toggleCarousel(!1), this.ui.itemLeftImgContainer.css({
                left: 0
            }), this.ui.itemRightImgContainer.css({
                left: 0
            }), this.ui.itemLeftTitle.css({
                opacity: 1
            }), this.ui.itemRightTitle.css({
                opacity: 1
            });
            var a = this._currentSlide.options;
            "large" === this._getViewportWidth() && (this.ui.items.find(".item").css({
                width: "33%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#middle", "#right"])), "medium" === this._getViewportWidth() && (this.ui.items.find(".item").css({
                width: "49%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#right"])), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this.ui.items.find(".item").css({
                width: "100%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#right"])), 2 === this._currentSlide.options.length && (this.ui.itemLeft.css({
                cursor: "pointer"
            }), this.ui.itemMiddle.css({
                cursor: "default"
            }), this.ui.itemRight.css({
                cursor: "pointer"
            }), this._setButtonRole(this.ui.itemLeft), this._setButtonRole(this.ui.itemMiddle, !1), this._setButtonRole(this.ui.itemRight), this.ui.itemMiddle.css("opacity", "1"), this.ui.itemMiddleContainer.css("opacity", "1"), this.ui.itemLeftImg.attr({
                src: a[0].icon
            }), this.ui.itemMiddleImg.attr({
                src: this._parentData
            }), this.ui.itemRightImg.attr({
                src: a[1].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle], a[0]), this._setSlideTextData([this.ui.itemRightTitle], a[1]), this.ui.itemLeft.data("choice", a[0]), this.ui.itemRight.data("choice", a[1])), 3 === this._currentSlide.options.length && (this.ui.itemLeft.css({
                cursor: "pointer"
            }), this.ui.itemMiddle.css({
                cursor: "pointer"
            }), this.ui.itemRight.css({
                cursor: "pointer"
            }), this._setButtonRole(this.ui.itemLeft), this._setButtonRole(this.ui.itemMiddle), this._setButtonRole(this.ui.itemRight), this.ui.itemMiddleContainer.css("opacity", "0.3"), this.ui.itemLeftImg.attr({
                src: a[0].icon
            }), this.ui.itemMiddleImg.attr({
                src: a[1].icon
            }), this.ui.itemRightImg.attr({
                src: a[2].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle], a[0]), this._setSlideTextData([this.ui.itemMiddleTitle], a[1]), this._setSlideTextData([this.ui.itemRightTitle], a[2]), this.ui.itemLeft.data("choice", a[0]), this.ui.itemMiddle.data("choice", a[1]), this.ui.itemRight.data("choice", a[2]), "small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth() || "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() ? (this.ui.itemMiddle.css({
                display: "inline-block"
            }), this._toggleCarousel(!0)) : (this.ui.items.find(".item").css({
                width: "33%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#middle", "#right"])))
        },
        _toggleCarousel: function(b) {
            if (this.ui.pagination.css({
                    display: b ? "block" : "none"
                }), b) {
                ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this.ui.itemLeftImg.css({
                    width: "184px"
                }), this.ui.itemLeftContainer.css({
                    width: this.ui.itemLeftImg.width(),
                    height: this.ui.itemLeftImg.height()
                }), this.ui.itemMiddleImg.css({
                    width: "184px"
                }), this.ui.itemMiddleContainer.css({
                    width: this.ui.itemMiddleImg.width(),
                    height: this.ui.itemMiddleImg.height()
                }), this.ui.itemRightImg.css({
                    width: "184px"
                }), this.ui.itemRightContainer.css({
                    width: this.ui.itemRightImg.width(),
                    height: this.ui.itemRightImg.height()
                })), this._hasCarousel = !0;
                var d = a("#items .item:visible").detach();
                a(".swiper-container .swiper-wrapper").append(d), d.addClass("swiper-slide");
                this._mySwiper = new Swiper(".swiper-container", {
                    direction: "horizontal",
                    speed: 500,
                    initialSlide: 1,
                    loop: !1,
                    pagination: {
                        el: "#carousel-pagination",
                        clickable: !0,
                        renderBullet: function(a, b) {
                            return '<span class="' + b + '"></span>'
                        },
                        bulletClass: "carousel-pagination-bullet",
                        bulletActiveClass: "carousel-pagination-bullet-active"
                    },
                    on: {
                        init: function() {
                            var a = c.querySelector(".swiper-container").swiper;
                            setTimeout(function() {
                                a.slideTo(0, 500, !1, !0)
                            }, 500)
                        }
                    }
                })
            } else {
                this._mySwiper.destroy(!0, !0), this._hasCarousel = !1;
                var e = a(".swiper-container .swiper-wrapper .item").detach();
                e.removeClass("swiper-slide swiper-slide-prev swiper-slide-next swiper-slide-active"), a(".swiper-wrapper").removeAttr("style"), a("#items").append(e)
            }
        },
        _setSlideTextData: function(a, b) {
            if (a && (b && b.hasOwnProperty("title") && a[0] && a[0].html("<h2>" + b.title.toUpperCase() + "</h2>"), a[0].parent().attr("aria-label", null), b && b.hasOwnProperty("titleAccessibleText") && a[0] && a[0].parent().attr("aria-label", b.titleAccessibleText), b && b.hasOwnProperty("description") && a[1] && a[1].html(b.description), b && b.hasOwnProperty("linkId") && a[2])) {
                var c = this.ui.screen.find(".recommendation-ctas ." + b.linkId).clone();
                c.addClass("cq-button cq-button-transparent cq-hover"), a[2].append(c)
            }
        },
        _createRecommendationScreen: function() {
            this._hasCarousel === !0 && this._toggleCarousel(!1), this.ui.itemLeftImgContainer.css({
                left: 0
            }), this.ui.itemMiddleImgContainer.css({
                left: 0
            }), this.ui.itemRightImgContainer.css({
                left: 0
            }), this.ui.itemLeftTitle.css({
                opacity: 1
            }), this.ui.itemRightTitle.css({
                opacity: 1
            }), this.ui.itemLeftContainer.css({
                opacity: 1
            }), this.ui.itemRightContainer.css({
                opacity: 1
            }), this.ui.itemMiddleContainer.css({
                opacity: 1
            });
            var b = this._currentSlide.options;
            this.ui.itemLeft.css({
                cursor: "default"
            }), this.ui.itemMiddle.css({
                cursor: "default"
            }), this.ui.itemRight.css({
                cursor: "default"
            }), this._setButtonRole(this.ui.itemLeft, !1), this._setButtonRole(this.ui.itemMiddle, !1), this._setButtonRole(this.ui.itemRight, !1), "large" === this._getViewportWidth() && ("child" === this._getSelectedItem().data("choice").type && 1 === this._currentSlide.options.length ? this.ui.items.find(".item").css({
                width: "49%",
                display: "inline-block"
            }) : this.ui.items.find(".item").css({
                width: "33%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#middle", "#right"])), "medium" === this._getViewportWidth() && (this.ui.items.find(".item").css({
                width: "landscape" === site.utils.getDeviceOrientation() ? "49%" : "100%",
                display: "inline-block"
            }), this._setItemsVisibility(["#left", "#right"]), "portrait" === site.utils.getDeviceOrientation() && (this.ui.itemRight.css({
                width: "49%"
            }), this.ui.itemLeft.css({
                width: "49%"
            }))), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth() || "medium" === this._getViewportWidth()) && (this.ui.items.find(".item").css({
                width: "100%",
                display: "block"
            }), this._setItemsVisibility(["#left", "#right"]), this.ui.headerDescription.css({
                minHeight: 0
            }));
            var c = this.ui.itemLeft.find(".item-link"),
                e = this.ui.itemMiddle.find(".item-link"),
                f = this.ui.itemRight.find(".item-link"),
                g = [];
            a.each(b, function(a, b) {
                b.type === d && g.push(b)
            }), this.ui.itemLeft.data("selected") === !0 && (this._getSelectedItem().data("choice").type === d && (1 === this._currentSlide.options.length && (this.ui.itemMiddleImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemMiddleImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemMiddleTitle, this.ui.itemMiddleDescription, e], g[0])), 2 === this._currentSlide.options.length && (this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemLeftContainer.css({
                width: this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemLeftImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription, c], g[0]), this.ui.itemRightImg.css({
                width: this._getImagesSize().width
            }), this.ui.itemRightContainer.css({
                width: this.ui.itemRightImg.width(),
                height: this.ui.itemRightImg.height()
            }), this.ui.itemRightImg.attr({
                src: g[1].icon
            }), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[1]), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && this._toggleCarousel(!0))), "child" === this._getSelectedItem().data("choice").type && ("medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && (this.ui.itemMiddle.css({
                display: "inline-block",
                width: "100%"
            }), this.ui.itemLeft.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemRight.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemLeft.before(this.ui.itemMiddle), this.ui.itemMiddleDescription.css({
                display: "none"
            })), this._getSelectedItem().data("choice").pairedIcon !== d && (this.ui.itemMiddleImg.css("visibility", "hidden"), this.ui.itemMiddleImg.attr({
                src: this._getSelectedItem().data("choice").pairedIcon
            }), "large" === this._getViewportWidth() && this.ui.itemMiddleContainer.css({
                width: 1.5 * this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemMiddleImg.css("visibility", "visible"), this.ui.itemMiddleTitle.html("<h2>" + this._getSelectedItem().data("choice").pairedTitle.toUpperCase() + "</h2>")), 1 === this._currentSlide.options.length && ("medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation() && (this.ui.itemLeft.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemMiddle.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemMiddleContainer.css({
                width: 1.4 * this._getImagesSize().width,
                height: this._getImagesSize().height
            })), this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && (this.ui.itemLeft.css({
                display: "block",
                width: "100%"
            }), this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / 1.27)
            }), this.ui.itemLeftContainer.css({
                width: this.ui.itemLeftImg.width(),
                height: this.ui.itemLeftImg.height()
            }), this.ui.itemMiddleContainer.css({
                width: 1.06 * this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemMiddleDescription.css({
                display: "none"
            })), this.ui.itemLeftImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription, c], g[0])), 2 === this._currentSlide.options.length && (this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemLeftImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription, c], g[0]), this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemRightImg.attr({
                src: g[1].icon
            }), "medium" === this._getViewportWidth() && (this.ui.itemRight.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemMiddle.css({
                display: "block",
                width: "100%"
            }), this.ui.itemLeft.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemLeft.before(this.ui.itemMiddle), this.ui.itemMiddleDescription.css({
                display: "none"
            }), this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / 1.27)
            }), this.ui.itemLeftContainer.css({
                width: this.ui.itemLeftImg.width(),
                height: this.ui.itemLeftImg.height()
            }), this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / 1.27)
            }), this.ui.itemRightContainer.css({
                width: this.ui.itemRightImg.width(),
                height: this.ui.itemRightImg.height()
            }), this.ui.itemMiddleContainer.css({
                width: 1.06 * this._getImagesSize().width,
                height: this._getImagesSize().height
            })), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[1]), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this.ui.itemMiddle.css({
                display: "none"
            }), this._toggleCarousel(!0)))), "orphan" === this._getSelectedItem().data("choice").type && (1 === this._currentSlide.options.length && (this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && this.ui.itemRightContainer.css({
                width: this.ui.itemRightImg.width(),
                height: this.ui.itemRightImg.height()
            }), this.ui.itemRightImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[0]), this.ui.itemLeftTitle.html("<h2>" + this._getSelectedItem().data("choice").title.toUpperCase() + "</h2>")), 2 === this._currentSlide.options.length && (this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemRightContainer.css({
                width: this.ui.itemRightImg.width(),
                height: this.ui.itemRightImg.height()
            }), this.ui.itemRightImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[0]), this.ui.itemMiddleImg.css({
                width: Math.floor(this._getImagesSize().width / 1.2)
            }), this.ui.itemMiddleContainer.css({
                width: this.ui.itemMiddleImg.width(),
                height: this.ui.itemMiddleImg.height()
            }), this.ui.itemMiddleImg.attr({
                src: g[1].icon
            }), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[0])))), this.ui.itemRight.data("selected") === !0 && (this._getSelectedItem().data("choice").type === d && (1 === this._currentSlide.options.length && (this.ui.itemMiddleImg.css({
                width: Math.floor(this._getImagesSize().width / 1.2)
            }), this.ui.itemMiddleImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemMiddleTitle, this.ui.itemMiddleDescription, e], g[0])), 2 === this._currentSlide.options.length && (g[0].icon.indexOf("flat-pairing") > -1 && this.ui.itemLeftContainer.css({
                width: this._getImagesSize().width * ("large" === this._getViewportWidth() ? 1.5 : 1.14),
                height: this._getImagesSize().height
            }), g[1].icon.indexOf("flat-pairing") > -1 && this.ui.itemRightContainer.css({
                width: this._getImagesSize().width * ("large" === this._getViewportWidth() ? 1.5 : 1.14),
                height: this._getImagesSize().height
            }), this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && this.ui.itemLeftContainer.css({
                width: this.ui.itemLeftImg.width(),
                height: this.ui.itemLeftImg.height()
            }), -1 === g[1].icon.indexOf("flat-pairing"), this.ui.itemLeftImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription, c], g[0]), this.ui.itemRightImg.attr({
                src: g[1].icon
            }), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[1]), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && this._toggleCarousel(!0))), "child" === this._getSelectedItem().data("choice").type && ("medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && (this.ui.itemMiddle.css({
                display: "inline-block",
                width: "100%"
            }), this.ui.itemLeft.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemRight.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemRight.before(this.ui.itemMiddle), this.ui.itemMiddleDescription.css({
                display: "none"
            })), "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation() && this.ui.itemMiddle.css({
                display: "",
                width: "33%"
            }), this._getSelectedItem().data("choice").pairedIcon !== d && (this.ui.itemMiddleImg.css("visibility", "hidden"), this.ui.itemMiddleImg.attr({
                src: this._getSelectedItem().data("choice").pairedIcon
            }), "large" === this._getViewportWidth() && this.ui.itemMiddleContainer.css({
                width: 1.5 * this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemMiddleImg.css("visibility", "visible"), this.ui.itemMiddleTitle.html("<h2>" + this._getSelectedItem().data("choice").pairedTitle.toUpperCase() + "</h2>")), 1 === this._currentSlide.options.length && ("medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation() && (this.ui.itemMiddle.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemMiddleContainer.css({
                width: 1.4 * this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemMiddle.before(this.ui.itemRight)), this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && (this.ui.itemRight.css({
                display: "block",
                width: "100%"
            }), this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / 1.27)
            }), this.ui.itemRightContainer.css({
                width: this.ui.itemRightImg.width(),
                height: this.ui.itemRightImg.height()
            }), this.ui.itemMiddleContainer.css({
                width: 1.06 * this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemMiddleDescription.css({
                display: "none"
            })), this.ui.itemRightImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[0])), 2 === this._currentSlide.options.length && (this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemLeftImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription, c], g[0]), this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemRightImg.attr({
                src: g[1].icon
            }), "medium" === this._getViewportWidth() && (this.ui.itemLeft.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemMiddle.css({
                display: "block",
                width: "100%"
            }), this.ui.itemRight.css({
                display: "inline-block",
                width: "49%"
            }), this.ui.itemLeft.before(this.ui.itemMiddle), this.ui.itemMiddleDescription.css({
                display: "none"
            }), this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / 1.27)
            }), this.ui.itemLeftContainer.css({
                width: this.ui.itemLeftImg.width(),
                height: this.ui.itemLeftImg.height()
            }), this.ui.itemRightImg.css({
                width: Math.floor(this._getImagesSize().width / 1.27)
            }), this.ui.itemRightContainer.css({
                width: this.ui.itemRightImg.width(),
                height: this.ui.itemRightImg.height()
            }), this.ui.itemMiddleContainer.css({
                width: 1.06 * this._getImagesSize().width,
                height: this._getImagesSize().height
            })), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[1]), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this.ui.itemMiddle.css({
                display: "none"
            }), this._toggleCarousel(!0)))), "orphan" === this._getSelectedItem().data("choice").type && (1 === this._currentSlide.options.length && ("" !== this._getSelectedItem().data("choice").pairedIcon && (this.ui.itemRightImg.attr({
                src: this._getSelectedItem().data("choice").pairedIcon
            }), this.ui.itemRightImg.css({
                width: this._getImagesSize().width * ("large" === this._getViewportWidth() ? 1.5 : 1.14),
                height: this._getImagesSize().height
            }), this.ui.itemRightContainer.css({
                width: this._getImagesSize().width * ("large" === this._getViewportWidth() ? 1.5 : 1.14),
                height: this._getImagesSize().height
            })), this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && (this.ui.itemLeftContainer.css({
                width: this.ui.itemLeftImg.width(),
                height: this.ui.itemLeftImg.height()
            }), this.ui.itemRightDescription.css({
                display: "none"
            })), this.ui.itemLeftImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription, c], g[0]), this.ui.itemRightTitle.html("<h2>" + this._getSelectedItem().data("choice").title.toUpperCase() + "</h2>")), 2 === this._currentSlide.options && (this.ui.itemLeftImg.css({
                width: Math.floor(this._getImagesSize().width / ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? 1.2 : 1))
            }), this.ui.itemLeftContainer.css({
                width: this.ui.itemLeftImg.width(),
                height: this.ui.itemLeftImg.height()
            }), this.ui.itemLeftImg.attr({
                src: g[0].icon
            }), this._setSlideTextData([this.ui.itemLeftTitle, this.ui.itemLeftDescription, c], g[0]), this.ui.itemMiddleImg.css({
                width: Math.floor(this._getImagesSize().width / 1.2)
            }), this.ui.itemMiddleContainer.css({
                width: this.ui.itemMiddleImg.width(),
                height: this.ui.itemMiddleImg.height()
            }), this.ui.itemMiddleImg.attr({
                src: g[1].icon
            }), this._setSlideTextData([this.ui.itemRightTitle, this.ui.itemRightDescription, f], g[0])))), this._equalizeElementHeight("item-title"), this._equalizeElementHeight("item-description")
        },
        _equalizeElementHeight: function(b) {
            var c = 0,
                d = a("." + b);
            d.css("min-height", "auto"), d.each(function(b, d) {
                var e = a(this).outerHeight();
                e > c && (c = e)
            }), c > 0 && d.css("min-height", c)
        },
        _setResetButton: function(a) {
            var b = this,
                c = this.ui.screen.find(".nav-start-next").clone();
            c.length || (this.ui.navStartNext.css("display", "none"), c.off(), c.css("opacity", "1"), c.on("click", function(a) {
                b._log("--------------------------- CLICK 5 ---------------------------"), a.preventDefault(), b._goHome(), c.animate({
                    opacity: 0
                }, 600, function() {
                    c.remove()
                })
            }), a.append(c), a.find(".nav-start-next").css({
                display: "inline-block"
            }))
        },
        _createEnterSlideAnimations: function() {
            var a = this,
                b = -1 === this._currentSlideId.indexOf("recommendation") ? .3 : 1;
            return this.ui.header.css({
                opacity: 0
            }), this.ui.header.stop().animate({
                opacity: 1
            }, 600, function() {
                a._log("_createEnterSlideAnimations for " + a._currentSlideId + " DONE")
            }), this.ui.navBack.css("display") === this.ui.navStartNext.css("display") && (this.ui.navBack.css("left", "10px"), this.ui.navStartNext.css("right", "10px")), this.ui.nav.css({
                opacity: 0
            }), this._animateProp(this.ui.nav, {
                opacity: 1
            }, 600), this._animateProp(this.ui.navBack, {
                left: 0
            }, 300), this._animateProp(this.ui.navStartNext, {
                right: 0
            }, 300), "welcome-screen" === this._currentSlideId ? void("back" !== this._clickType && (this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600))) : "choose-parent" === this._currentSlideId ? ("back" === this._clickType && (this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600)), this.ui.itemLeftImgContainer.css({
                left: "100px"
            }), this._animateProp(this.ui.itemLeftImgContainer, {
                left: "0px"
            }, 600), this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600), this.ui.itemRightImgContainer.css({
                left: "-100px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600), this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), void this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600)) : this._currentSlideId.indexOf("intermediate") > -1 && "choose-parent" !== this._history[this._history.length - 2] ? ("back" === this._clickType && (2 === this._currentSlide.options.length && (this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600), this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600), this._leftIconIsSame === !1 && (this.ui.itemLeftImgContainer.css({
                left: "-200px"
            }), this._animateProp(this.ui.itemLeftImgContainer, {
                left: "0px"
            }, 600)), this._rightIconIsSame === !1 && (this.ui.itemRightImgContainer.css({
                left: "200px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600))), 3 === this._currentSlide.options.length && (this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600), this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemMiddleContainer, {
                opacity: b
            }, 600), this.ui.itemLeftContainer.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600))), this.ui.itemLeft.data("selected") === !0 && 2 === this._currentSlide.options.length && (this.ui.itemRight.css({
                opacity: 0
            }), this.ui.itemRightContainer.css({
                opacity: this._rightIconIsSame === !1 ? 0 : 1
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600), this.ui.itemLeft.css({
                opacity: this._leftIconIsSame === !1 ? 0 : 1
            }), this.ui.itemLeftContainer.css({
                opacity: this._leftIconIsSame === !1 ? 0 : 1
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600), this._leftIconIsSame === !1 && (this.ui.itemLeftImgContainer.css({
                left: "-200px"
            }), this._animateProp(this.ui.itemLeftImgContainer, {
                left: "0px"
            }, 600)), this._rightIconIsSame === !1 && (this.ui.itemRightImgContainer.css({
                left: "200px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600)), 2 === this._getSlide(this._history[this._history.length - 2]).options.length && (this.ui.itemRightImgContainer.css({
                left: "200px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600)), 3 === this._getSlide(this._history[this._history.length - 2]).options.length && (this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600))), this.ui.itemMiddle.data("selected") === !0 && (2 === this._currentSlide.options.length && (this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600), this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600), this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600), this._leftIconIsSame === !1 && (this.ui.itemLeftImgContainer.css({
                left: "-200px"
            }), this._animateProp(this.ui.itemLeftImgContainer, {
                left: "0px"
            }, 600)), this._rightIconIsSame === !1 && (this.ui.itemRightImgContainer.css({
                left: "200px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600))), 3 === this._currentSlide.options.length && (this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600), this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemMiddleContainer, {
                opacity: b
            }, 600), this.ui.itemLeftContainer.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600))), void(this.ui.itemRight.data("selected") === !0 && (this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600), this.ui.itemRight.css({
                opacity: this._rightIconIsSame === !1 ? 0 : 1
            }), this.ui.itemRightContainer.css({
                opacity: this._rightIconIsSame === !1 ? 0 : 1
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600), this._leftIconIsSame === !1 && (this.ui.itemLeftImgContainer.css({
                left: "-200px"
            }), this._animateProp(this.ui.itemLeftImgContainer, {
                left: "0px"
            }, 600)), this._rightIconIsSame === !1 && (this.ui.itemRightImgContainer.css({
                left: "200px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600)), this._rightIconIsSame === !1 && (this.ui.itemRightImgContainer.css({
                left: "200px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600)), 2 === this._getSlide(this._history[this._history.length - 2]).options.length && (this.ui.itemLeftImgContainer.css({
                left: "-200px"
            }), this._animateProp(this.ui.itemLeftImgContainer, {
                left: "0px"
            }, 600)), 3 === this._getSlide(this._history[this._history.length - 2]).options.length && (this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600))))) : this._currentSlideId.indexOf("recommendation") > -1 ? (this.ui.t_items.css({
                display: "none"
            }), this.ui.itemLeft.data("selected") === !0 && (this._getSelectedItem().data("choice").type === d && (1 === this._currentSlide.options.length && ("large" !== this._getViewportWidth() && (this.ui.itemMiddle.css({
                display: "inline-block",
                width: "100%"
            }), this.ui.itemLeft.css({
                display: "none"
            }), this.ui.itemRight.css({
                display: "none"
            })), this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600), this._setResetButton(this.ui.itemMiddleLink), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600)), 2 === this._currentSlide.options.length && (this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this.ui.itemMiddle.css({
                display: "none"
            }), this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), !this._currentSlide.options[0].hasOwnProperty("linkId") && this._currentSlide.options[1].hasOwnProperty("linkId") ? this._setResetButton(this.ui.itemLeftLink) : this._currentSlide.options[0].hasOwnProperty("linkId") && !this._currentSlide.options[1].hasOwnProperty("linkId") ? this._setResetButton(this.ui.itemRightLink) : this.ui.navStartNext.css("display", "inline-block"))), "child" === this._getSelectedItem().data("choice").type && (this.ui.itemRight.css({
                opacity: 0
            }), this.ui.itemLeft.css({
                opacity: 0
            }), 1 === this._currentSlide.options.length && (this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this.ui.itemRight.css({
                display: "none"
            }), ("medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() || "small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this._setResetButton(this.ui.itemLeftLink), this.ui.itemLeftLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeftLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation() && (this._currentSlide.options[0].hasOwnProperty("linkId") ? this._setResetButton(this.ui.itemMiddleLink) : this.ui.navStartNext.css("display", "inline-block"), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600)), "large" === this._getViewportWidth() && (this._currentSlide.options[0].hasOwnProperty("linkId") ? this._setResetButton(this.ui.itemMiddleLink) : this.ui.navStartNext.css("display", "inline-block"), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600))), 2 === this._currentSlide.options.length && (setTimeout(function() {
                a.ui.itemRight.css({
                    opacity: 0
                }), a._animateProp(a.ui.itemLeft, {
                    opacity: 1,
                    left: "0"
                }, 600), a._animateProp(a.ui.itemRight, {
                    opacity: 1,
                    right: "0"
                }, 600)
            }, 100), "large" === this._getViewportWidth() && (this._setResetButton(this.ui.itemMiddleLink), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation() && (this.ui.navStartNext.css("display", "inline-block"), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation())), "orphan" === this._getSelectedItem().data("choice").type && (this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this.ui.itemMiddle.css({
                display: "none"
            }), ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation()) && (this._setResetButton(this.ui.itemLeftLink), this.ui.itemLeftLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeftLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && this._setResetButton(this.ui.itemRightLink), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this._setResetButton(this.ui.itemRightLink), this.ui.itemLeft.css({
                display: "none"
            }))), "none" === this.ui.navStartNext.css("display") && "none" === this.ui.navBack.css("display") && this.ui.nav.css({
                display: "none"
            })), this.ui.itemRight.data("selected") === !0 && (this._getSelectedItem().data("choice").type === d && (1 === this._currentSlide.options.length && (this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600), ("medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() || "small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this._setResetButton(this.ui.itemRightLink), this.ui.itemRightLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRightLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation() && (this._setResetButton(this.ui.itemMiddleLink), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600)), "large" === this._getViewportWidth() && (this._setResetButton(this.ui.itemMiddleLink), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600))), 2 === this._currentSlide.options.length && (this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), !this._currentSlide.options[1].hasOwnProperty("linkId") && this._currentSlide.options[0].hasOwnProperty("linkId") ? this._setResetButton(this.ui.itemRightLink) : this._currentSlide.options[1].hasOwnProperty("linkId") && !this._currentSlide.options[0].hasOwnProperty("linkId") ? this._setResetButton(this.ui.itemLeftLink) : this.ui.navStartNext.css("display", "inline-block"), this._currentSlide.options[1].icon.indexOf("flat-pairing") > -1 && (("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this._setResetButton(this.ui.itemLeftLink), this.ui.itemLeftLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeftLink, {
                opacity: 1
            }, 600), this.ui.itemRight.css({
                display: "none"
            })), ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation()) && (this._setResetButton(this.ui.itemRightLink), this.ui.itemRightLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRightLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && (this._setResetButton(this.ui.itemLeftLink), this.ui.itemRight.css({
                display: "block",
                width: "100%"
            }), this.ui.itemLeft.css({
                display: "block",
                width: "100%"
            }), this.ui.itemLeft.before(this.ui.itemRight))), this.ui.itemMiddle.css({
                display: "none"
            }))), "child" === this._getSelectedItem().data("choice").type && (this.ui.itemRight.css({
                opacity: 0
            }), this.ui.itemLeft.css({
                opacity: 0
            }), 1 === this._currentSlide.options.length && (this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this.ui.itemLeft.css({
                display: "none"
            }), ("medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() || "small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this._setResetButton(this.ui.itemRightLink), this.ui.itemRightLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRightLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation() && (this._setResetButton(this.ui.itemMiddleLink), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600)), "large" === this._getViewportWidth() && (this._setResetButton(this.ui.itemMiddleLink), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600))), 2 === this._currentSlide.options.length && (setTimeout(function() {
                a.ui.itemRight.css({
                    opacity: 0
                }), a._animateProp(a.ui.itemLeft, {
                    opacity: 1,
                    left: "0"
                }, 600), a._animateProp(a.ui.itemRight, {
                    opacity: 1,
                    right: "0"
                }, 600)
            }, 100), "large" === this._getViewportWidth() && (this._setResetButton(this.ui.itemMiddleLink), this.ui.itemMiddleLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddleLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation(), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation())), "orphan" === this._getSelectedItem().data("choice").type && (this.ui.itemRight.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this.ui.itemLeft.css({
                opacity: 0
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this.ui.itemMiddle.css({
                display: "none"
            }), ("large" === this._getViewportWidth() || "medium" === this._getViewportWidth() && "landscape" === site.utils.getDeviceOrientation()) && (this._currentSlide.options[0].hasOwnProperty("linkId") ? this._setResetButton(this.ui.itemMiddleLink) : this.ui.navStartNext.css("display", "inline-block"), this.ui.itemRightLink.css({
                opacity: 0
            }), this._animateProp(this.ui.itemRightLink, {
                opacity: 1
            }, 600)), "medium" === this._getViewportWidth() && "portrait" === site.utils.getDeviceOrientation() && (this._setResetButton(this.ui.itemLeftLink), this.ui.itemLeft.before(this.ui.itemRight)), ("small" === this._getViewportWidth() || "xsmall" === this._getViewportWidth()) && (this._setResetButton(this.ui.itemLeftLink), this.ui.itemRight.css({
                display: "none"
            })))), void("none" === this.ui.navStartNext.css("display") && "none" === this.ui.navBack.css("display") && this.ui.nav.css({
                display: "none"
            }))) : (3 === this._currentSlide.options.length && (this.ui.itemMiddle.css({
                opacity: 0
            }), this._animateProp(this.ui.itemMiddle, {
                opacity: 1
            }, 600), this._animateProp(this.ui.itemMiddleContainer, {
                opacity: b
            }, 600)), this._leftIconIsSame === !1 && 2 === this._currentSlide.options.length && (this.ui.itemLeftImgContainer.css({
                left: "-200px"
            }), this._animateProp(this.ui.itemLeftImgContainer, {
                left: "0px"
            }, 600)), this._rightIconIsSame === !1 && 2 === this._currentSlide.options.length && (this.ui.itemRightImgContainer.css({
                left: "200px"
            }), this._animateProp(this.ui.itemRightImgContainer, {
                left: "0px"
            }, 600)), this.ui.itemLeft.css({
                opacity: this._leftIconIsSame === !1 ? 0 : 1
            }), this._animateProp(this.ui.itemLeft, {
                opacity: 1
            }, 600), this.ui.itemRight.css({
                opacity: this._rightIconIsSame === !1 ? 0 : 1
            }), this._animateProp(this.ui.itemRight, {
                opacity: 1
            }, 600), this.ui.itemLeftContainer.css({
                opacity: this._leftIconIsSame === !1 ? 0 : b
            }), this.ui.itemRightContainer.css({
                opacity: this._rightIconIsSame === !1 ? 0 : b
            }), this._animateProp(this.ui.itemRightContainer, {
                opacity: b
            }, 600), this._animateProp(this.ui.itemLeftContainer, {
                opacity: b
            }, 600), void("none" === this.ui.navStartNext.css("display") && "none" === this.ui.navBack.css("display") && this.ui.nav.css({
                display: "none"
            })))
        },
        _animateProp: function(a, b, c, e, f) {
            f === d && (f = "easeOutCubic"), a.stop().animate(b, c, f, function() {
                e !== d && setTimeout(function() {
                    e()
                }, 20)
            })
        },
        _shouldResolve: function() {
            return "choose-parent" === this._currentSlideId ? !1 : this._currentSlideId.indexOf("intermediate") > -1 && "forward" === this._clickType && this._getSelectedItem().data("choice").nextScreen.indexOf("recommendation") > -1 ? !1 : !0
        },
        _createExitSlideAnimations: function() {
            var b;
            return new Promise(function(c) {
                var e = this;
                if (null === this._currentSlideId) return this._log("_createExitSlideAnimations --> resolve --> null"), void c();
                if (this.ui.header.stop().animate({
                        opacity: 0
                    }, 600, function() {
                        e._log("_createExitSlideAnimations --> resolve --> done for " + e._currentSlideId), e._shouldResolve() === !0 && c()
                    }), this._animateProp(this.ui.nav, {
                        opacity: 0
                    }, 600), "choose-parent" === this._currentSlideId && ("back" === this._clickType && (this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemLeftImgContainer, {
                        left: "100px"
                    }, 600), this.ui.itemLeftTitle.html(""), this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemRightImgContainer, {
                        left: "-100px"
                    }, 600, c), this.ui.itemRightTitle.html("")), "forward" === this._clickType)) {
                    if (2 === this._getSlide(this._getSelectedItem().data("choice").nextScreen).options.length) {
                        var f;
                        b = function() {
                            this.ui.itemLeft.data("selected") === !0 && (f = a("#middle").offset().left - a("#left").offset().left, this._animateProp(this.ui.itemLeftImgContainer, {
                                left: f
                            }, 600, c, "easeOutQuad"), this._animateProp(this.ui.itemRight, {
                                opacity: 0
                            }, 600)), this.ui.itemRight.data("selected") === !0 && (f = -(a("#right").offset().left - a("#middle").offset().left), this._animateProp(this.ui.itemRightImgContainer, {
                                left: f
                            }, 800, c), this._animateProp(this.ui.itemLeft, {
                                opacity: 0
                            }, 600))
                        }.bind(this), "large" === this._getViewportWidth() ? this._animateProp(this.ui.itemMiddle, {
                            opacity: 0
                        }, 600, b) : (this._animateProp(this.ui.itemRight, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemLeft, {
                            opacity: 0
                        }, 600, c)), this.ui.itemRight.data("selected") === !0 && this._animateProp(this.ui.itemRightTitle, {
                            opacity: 0
                        }, 600), this.ui.itemLeft.data("selected") === !0 && this._animateProp(this.ui.itemLeftTitle, {
                            opacity: 0
                        }, 600)
                    }
                    3 === this._getSlide(this._getSelectedItem().data("choice").nextScreen).options.length && (b = function() {}.bind(this), this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemMiddle, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600, c))
                }
                if (this._currentSlideId.indexOf("intermediate") > -1 && "choose-parent" === this._history[this._history.length - 2] && "back" === this._clickType) return this._animateProp(this.ui.itemMiddle, {
                    opacity: 0
                }, 600), 2 === this._currentSlide.options.length ? (this._animateProp(this.ui.itemLeftImgContainer, {
                    left: "-200px"
                }, 600), this._animateProp(this.ui.itemRightImgContainer, {
                    left: "200px"
                }, 600)) : (this._rightIconIsSame = !1, this._leftIconIsSame = !1), this._animateProp(this.ui.itemLeft, {
                    opacity: 0
                }, 600), void this._animateProp(this.ui.itemRight, {
                    opacity: 0
                }, 600);
                if (this._currentSlideId.indexOf("intermediate") > -1 && "back" === this._clickType) return 2 === this._currentSlide.options.length && (3 === this._getSlide(this._history[this._history.length - 2]).options.length && this._animateProp(this.ui.itemMiddle, {
                    opacity: 0
                }, 600), this._leftIconIsSame === !1 && 2 === this._currentSlide.options.length ? (this._animateProp(this.ui.itemLeftImgContainer, {
                    left: "-200px"
                }, 600), this._animateProp(this.ui.itemLeft, {
                    opacity: 0
                }, 600)) : this._animateProp(this.ui.itemLeftContainer, {
                    opacity: .3
                }, 600), this._rightIconIsSame === !1 && 2 === this._currentSlide.options.length ? (this._animateProp(this.ui.itemRightImgContainer, {
                    left: "200px"
                }, 600), this._animateProp(this.ui.itemRight, {
                    opacity: 0
                }, 600)) : this._animateProp(this.ui.itemRightContainer, {
                    opacity: .3
                }, 600)), void(3 === this._currentSlide.options.length && (this._leftIconIsSame === !1 ? this._animateProp(this.ui.itemLeft, {
                    opacity: 0
                }, 600) : this._animateProp(this.ui.itemLeftContainer, {
                    opacity: .3
                }, 600), this._animateProp(this.ui.itemMiddle, {
                    opacity: 0
                }, 600), this._rightIconIsSame === !1 ? this._animateProp(this.ui.itemRight, {
                    opacity: 0
                }, 600) : this._animateProp(this.ui.itemRightContainer, {
                    opacity: .3
                }, 600)));
                if (this._currentSlideId.indexOf("intermediate") > -1 && "forward" === this._clickType && (-1 === this._getSelectedItem().data("choice").nextScreen.indexOf("recommendation") && (this.ui.itemLeft.data("selected") === !0 && (2 === this._currentSlide.options.length && (this._getSlide(this._getSelectedItem().data("choice").nextScreen).options[0].icon !== this._getSelectedItem().data("choice").icon ? (this._leftIconIsSame = !1, this._animateProp(this.ui.itemLeftImgContainer, {
                        left: "-200px"
                    }, 600), this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600)) : this._leftIconIsSame = !0, this._animateProp(this.ui.itemRightImgContainer, {
                        left: "200px"
                    }, 600), this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600)), 3 === this._currentSlide.options.length && (this._getSlide(this._getSelectedItem().data("choice").nextScreen).options[0].icon !== this._getSelectedItem().data("choice").icon ? (this._leftIconIsSame = !1, this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600)) : this._leftIconIsSame = !0, this._animateProp(this.ui.itemMiddle, {
                        opacity: 0
                    }, 600), this._getSlide(this._getSelectedItem().data("choice").nextScreen).options[1].icon !== this._getSelectedItem().data("choice").icon ? (this._rightIconIsSame = !1, this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600)) : this._rightIconIsSame = !0, this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600))), this.ui.itemMiddle.data("selected") === !0 && (this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemMiddle, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600)), this.ui.itemRight.data("selected") === !0 && (2 === this._currentSlide.options.length && (this._getSlide(this._getSelectedItem().data("choice").nextScreen).options[1].icon !== this._getSelectedItem().data("choice").icon ? (this._rightIconIsSame = !1, this._animateProp(this.ui.itemRightImgContainer, {
                        left: "200px"
                    }, 600), this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600)) : this._rightIconIsSame = !0, this._animateProp(this.ui.itemLeftImgContainer, {
                        left: "-200px"
                    }, 600), this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600)), 3 === this._currentSlide.options.length && (this._getSlide(this._getSelectedItem().data("choice").nextScreen).options[0].icon !== this._getSelectedItem().data("choice").icon ? (this._leftIconIsSame = !1, this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600)) : this._leftIconIsSame = !0, this._animateProp(this.ui.itemMiddle, {
                        opacity: 0
                    }, 600), this._getSlide(this._getSelectedItem().data("choice").nextScreen).options[1].icon !== this._getSelectedItem().data("choice").icon ? (this._rightIconIsSame = !1, this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600)) : this._rightIconIsSame = !0))), this._getSelectedItem().data("choice").nextScreen.indexOf("recommendation") > -1)) {
                    if (this._getSelectedItem().data("choice").type === d && (this._animateProp(this.ui.itemRight, {
                            opacity: 0
                        }, 600, c), this._animateProp(this.ui.itemMiddle, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemLeft, {
                            opacity: 0
                        }, 600)), "child" === this._getSelectedItem().data("choice").type) {
                        var g, h, i, j, k = 1.5 * this._getImagesSize().width - this._getImagesSize().width;
                        return this.ui.itemLeft.data("selected") === !0 && ("large" === this._getViewportWidth() ? (this._animateProp(this.ui.itemRight, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemLeftTitle, {
                            opacity: 0
                        }, 600), 1 === this._getSlide(this._getSelectedItem().data("choice").nextScreen).options.length ? (this.ui.item_t_Right.css({
                            display: "none"
                        }), this.ui.item_t_Middle.css({
                            width: "49%"
                        }), this.ui.item_t_Left.css({
                            width: "49%"
                        }), this.ui.item_t_Middle.find("div").width(1.5 * this._getImagesSize().width), this.ui.item_t_Middle.find("div").css({
                            height: "20px",
                            margin: "auto"
                        }), j = this.ui.item_t_Middle.find("div").offset().left, g = j - this.ui.itemLeftContainer.offset().left, h = j - this.ui.itemMiddleContainer.offset().left + k) : (g = a("#middle").offset().left - this.ui.itemLeftContainer.offset().left, h = k / 2), this.ui.itemLeftImgContainer.css("z-index", "10"), this._animateProp(this.ui.itemLeftImgContainer, {
                            left: g
                        }, 1e3, c), this._animateProp(this.ui.itemMiddleImgContainer, {
                            left: h
                        }, 1e3)) : (this._animateProp(this.ui.itemLeft, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemRight, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemLeftTitle, {
                            opacity: 0
                        }, 600, c))), void(this.ui.itemRight.data("selected") === !0 && ("large" === this._getViewportWidth() ? (this._animateProp(this.ui.itemLeft, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemRightTitle, {
                            opacity: 0
                        }, 600), 1 === this._getSlide(this._getSelectedItem().data("choice").nextScreen).options.length ? (this.ui.item_t_Left.css({
                            display: "none"
                        }), this.ui.item_t_Middle.css({
                            width: "49%"
                        }), this.ui.item_t_Right.css({
                            width: "49%"
                        }), this.ui.item_t_Middle.find("div").width(1.5 * this._getImagesSize().width), this.ui.item_t_Middle.find("div").css({
                            height: "20px",
                            margin: "auto"
                        }), j = this.ui.item_t_Middle.find("div").offset().left, i = -(this.ui.itemRightContainer.offset().left - j) + k, h = j - this.ui.itemMiddleContainer.offset().left) : (i = -(this.ui.itemRightContainer.offset().left - a("#middle").offset().left) + k, h = -k / 2), this.ui.itemLeftImgContainer.css("z-index", "10"), this._animateProp(this.ui.itemRightImgContainer, {
                            left: i
                        }, 1e3, c), this._animateProp(this.ui.itemMiddleImgContainer, {
                            left: h
                        }, 1e3)) : (this._animateProp(this.ui.itemRight, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemLeft, {
                            opacity: 0
                        }, 600), this._animateProp(this.ui.itemRightTitle, {
                            opacity: 0
                        }, 600, c))))
                    }
                    return void("orphan" === this._getSelectedItem().data("choice").type && (this.ui.itemLeft.data("selected") === !0 && (this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600, c), this._animateProp(this.ui.itemMiddle, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600)), this.ui.itemRight.data("selected") === !0 && (this._animateProp(this.ui.itemRight, {
                        opacity: 0
                    }, 600, c), this._animateProp(this.ui.itemMiddle, {
                        opacity: 0
                    }, 600), this._animateProp(this.ui.itemLeft, {
                        opacity: 0
                    }, 600))))
                }
                this._currentSlideId.indexOf("recommendation") > -1 && (this._animateProp(this.ui.itemRight, {
                    opacity: 0
                }, 600), this._animateProp(this.ui.itemMiddle, {
                    opacity: 0
                }, 600), this._animateProp(this.ui.itemLeft, {
                    opacity: 0
                }, 600))
            }.bind(this))
        },
        _checkImgLoaded: function() {
            this._imgLoaded++, 3 === this._imgLoaded && (this._log("_checkImgLoaded --> calling _createEnterSlideAnimations"), this._createEnterSlideAnimations())
        },
        _getImagesSize: function() {
            return this._imgSizes[this._getViewportWidth()]
        },
        _createSlide: function() {
            this._log("_createSlide"), a("#items").css({
                height: "auto"
            }), this.ui.itemMiddle.css({
                marginTop: "0px"
            }), a(b).width() <= 1200 ? this._imgSizes.large = {
                width: Math.floor(a(b).width() / 5.12),
                height: Math.floor(a(b).width() / 5.88),
                introductionIcon: {
                    width: Math.floor(a(b).width() / 5.12),
                    height: Math.floor(a(b).width() / 5.88)
                }
            } : this._imgSizes.large = {
                width: 264,
                height: 230,
                introductionIcon: {
                    width: 264,
                    height: 230
                }
            }, a(".item-link a").remove(), this.ui.pagination.css({
                display: "none"
            }), a(".item-description").css({
                display: "block",
                height: "auto",
                minHeight: "auto"
            }), this.ui.itemLeft.after(this.ui.itemRight), this.ui.itemLeft.after(this.ui.itemMiddle), "welcome-screen" === this._currentSlideId ? this.ui.itemMiddleContainer.css({
                width: this._getImagesSize().introductionIcon.width,
                height: this._getImagesSize().introductionIcon.height
            }) : this.ui.itemMiddleContainer.css({
                width: this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemLeftImg.css({
                width: this._getImagesSize().width,
                marginTop: 0
            }), this.ui.itemMiddleImg.css({
                width: "100%",
                marginTop: 0
            }), this.ui.itemRightImg.css({
                width: this._getImagesSize().width,
                marginTop: 0
            }), this.ui.itemLeftContainer.css({
                width: this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this.ui.itemRightContainer.css({
                width: this._getImagesSize().width,
                height: this._getImagesSize().height
            }), this._unbindSlideEvents(), this._imgLoaded = 0, this.ui.itemLeftTitle.html(""), this.ui.itemRightTitle.html(""), this.ui.itemMiddleTitle.html(""), this.ui.itemLeftDescription.html(""), this.ui.itemRightDescription.html(""), this.ui.itemMiddleDescription.html(""), this._currentSlide = this._getSlide(), this._toggleNavStartNextHover(!1), this.ui.nav.css({
                display: "block"
            }), this.ui.navStartNext.trigger("mouseleave"), this.ui.headerDescription.css({
                minHeight: this._highestSummary
            }), this._currentSlide.hasOwnProperty("title") && this.ui.header.find(".ChargeQualifier__title").html(this._currentSlide.title.toUpperCase()), this._currentSlide.hasOwnProperty("summary") && this.ui.header.find("p").html(this._currentSlide.summary), "welcome-screen" === this._currentSlideId && this._createWelcomeScreen(), "choose-parent" === this._currentSlideId && this._createChooseParentScreen(), this._currentSlideId.indexOf("intermediate") > -1 && this._createIntermediateScreen(), this._currentSlideId.indexOf("recommendation") > -1 && this._createRecommendationScreen(), this._createSlideNav(), this._createSlideEvents(), this._createEnterSlideAnimations()
        },
        _unbindSlideEvents: function() {
            this._log("_unbindSlideEvents"), this.ui.itemLeft.off(), this.ui.itemMiddle.off(), this.ui.itemRight.off(), this.ui.navStartNext.off(), this.ui.navBack.off(), this.ui.navBackArrow.off()
        },
        _createHoverEvent: function(b) {
            b.hover(function() {
                a(this).find(".item-icon").stop().animate({
                    opacity: .7
                }, "fast")
            }, function() {
                a(this).find(".item-icon").stop().animate({
                    opacity: .3
                }, "fast")
            })
        },
        _getSelectedItem: function() {
            return this.ui.itemLeft.data("selected") === !0 ? this.ui.itemLeft : this.ui.itemRight.data("selected") === !0 ? this.ui.itemRight : this.ui.itemMiddle.data("selected") === !0 ? this.ui.itemMiddle : void 0
        },
        _createSlideEvents: function() {
            var b = this;
            this._log("_createSlideEvents");
            var c = !1;
            if (this.ui.navBack.on("click", function(a) {
                    a.preventDefault(), this._goBack()
                }.bind(this)), this.ui.navBackArrow.on("click", function(a) {
                    a.preventDefault(), this._goBack()
                }.bind(this)), -1 === this._currentSlideId.indexOf("recommendation") && "welcome-screen" !== this._currentSlideId) {
                a(".nav-start-next.cq-button").removeClass("cq-hover"), this.ui.itemLeftContainer.css("opacity", "0.3"), this.ui.itemRightContainer.css("opacity", "0.3"), this._createHoverEvent(this.ui.itemLeft), this._createHoverEvent(this.ui.itemRight), this._currentSlide.options !== d && 3 === this._currentSlide.options.length && this._createHoverEvent(this.ui.itemMiddle);
                var e = function(a) {
                        b._toggleNavStartNextHover(!0), b.ui.itemLeft.data("selected", !0), b.ui.itemMiddle.data("selected", !1), b.ui.itemRight.data("selected", !1), a.preventDefault(), b.ui.itemLeft.off("mouseenter mouseleave"), b._animateProp(b.ui.itemLeftContainer, {
                            opacity: 1
                        }, 600), b._animateProp(b.ui.itemRightContainer, {
                            opacity: .3
                        }, 600), b._currentSlide.options !== d && 3 === b._currentSlide.options.length && (b.ui.itemMiddleContainer.css("opacity", "0.3"), b._createHoverEvent(b.ui.itemMiddle)), b._createHoverEvent(b.ui.itemRight), "choose-parent" === b._currentSlideId && (b._parentData = b.ui.itemLeft.data("choice").icon), c === !1 && (c = !0, b._animateProp(b.ui.navStartNext, {
                            opacity: 1
                        }, 600), b.ui.navStartNext.css("cursor", "pointer"), b._setButtonRole(b.ui.navStartNext), b.ui.navStartNext.on("click", function() {
                            this._log("--------------------------- CLICK 1 ---------------------------"), a.preventDefault(), this._goForward(this._getSelectedItem().data("choice").nextScreen)
                        }.bind(b))), setTimeout(function() {
                            this.ui.navStartNext.trigger("click"), this.ui.navBack.off()
                        }.bind(b), 0)
                    },
                    f = function(a) {
                        b._toggleNavStartNextHover(!0), b.ui.itemLeft.data("selected", !1), b.ui.itemMiddle.data("selected", !1), b.ui.itemRight.data("selected", !0), a.preventDefault(), b.ui.itemRight.off("mouseenter mouseleave"), b._animateProp(b.ui.itemRightContainer, {
                            opacity: 1
                        }, 600), b._animateProp(b.ui.itemLeftContainer, {
                            opacity: .3
                        }, 600), b._currentSlide.options !== d && 3 === b._currentSlide.options.length && (b.ui.itemMiddleContainer.css("opacity", "0.3"), b._createHoverEvent(b.ui.itemMiddle)), b._createHoverEvent(b.ui.itemLeft), "choose-parent" === b._currentSlideId && (b._parentData = b.ui.itemRight.data("choice").icon), c === !1 && (c = !0, b.ui.navStartNext.css("cursor", "pointer"), b._setButtonRole(b.ui.navStartNext), b._animateProp(b.ui.navStartNext, {
                            opacity: 1
                        }, 600), b.ui.navStartNext.on("click", function(b) {
                            this._log("--------------------------- CLICK 2 ---------------------------"), a.preventDefault(), this._goForward(this._getSelectedItem().data("choice").nextScreen)
                        }.bind(b))), setTimeout(function() {
                            this.ui.navStartNext.trigger("click"), this.ui.navBack.off()
                        }.bind(b), 0)
                    };
                this.ui.itemLeft.on("click", function(a) {
                    e(a)
                }), this.ui.itemLeft.on("keydown", function(a) {
                    (32 === a.keyCode || 13 === a.keyCode) && (a.preventDefault(), e(a))
                }), this.ui.itemRight.on("click", function(a) {
                    f(a)
                }), this.ui.itemRight.on("keydown", function(a) {
                    (32 === a.keyCode || 13 === a.keyCode) && (a.preventDefault(), f(a))
                }), this._currentSlide.options !== d && 3 === this._currentSlide.options.length && this.ui.itemMiddle.on("click", function(a) {
                    this._toggleNavStartNextHover(!0), this.ui.itemLeft.data("selected", !1), this.ui.itemMiddle.data("selected", !0), this.ui.itemRight.data("selected", !1), a.preventDefault(), this.ui.itemMiddle.off("mouseenter mouseleave"), this._animateProp(this.ui.itemMiddleContainer, {
                        opacity: 1
                    }, 600), this._animateProp(this.ui.itemLeftContainer, {
                        opacity: .3
                    }, 600), this._animateProp(this.ui.itemRightContainer, {
                        opacity: .3
                    }, 600), this._createHoverEvent(this.ui.itemLeft), this._createHoverEvent(this.ui.itemRight), c === !1 && (c = !0, this.ui.navStartNext.css("cursor", "pointer"), this._setButtonRole(this.ui.navStartNext), this._animateProp(this.ui.navStartNext, {
                        opacity: 1
                    }, 600), this.ui.navStartNext.on("click", function(a) {
                        this._log("--------------------------- CLICK 3 ---------------------------"), a.preventDefault(), this._goForward(this._getSelectedItem().data("choice").nextScreen)
                    }.bind(this))), setTimeout(function() {
                        this.ui.navStartNext.trigger("click"), this.ui.navBack.off()
                    }.bind(this), 0)
                }.bind(this))
            }
            "welcome-screen" === this._currentSlideId ? (this._animateProp(this.ui.navStartNext, {
                opacity: 1
            }, 0), this.ui.navStartNext.on("click", function(a) {
                this._log("--------------------------- CLICK 4 ---------------------------"), a.preventDefault(), this._goForward("choose-parent")
            }.bind(this))) : this._currentSlideId.indexOf("recommendation") > -1 ? (this._animateProp(this.ui.navStartNext, {
                opacity: 1
            }, 600), this.ui.navStartNext.on("click", function(a) {
                this._log("--------------------------- CLICK 5 ---------------------------"), a.preventDefault(), this._goHome()
            }.bind(this))) : (this.ui.navStartNext.off("click"), this.ui.navStartNext.css("cursor", "default"), this.ui.navStartNext.css("opacity", "0.3"), this._setButtonRole(this.ui.navStartNext, !1))
        },
        _toggleNavStartNextHover: function(b) {
            Modernizr.touch || a(".nav-start-next.cq-button").removeClass("cq-hover").addClass("cq-hover")
        },
        _createSlideNav: function() {
            this._log("_createSlideNav"), "welcome-screen" === this._currentSlideId && (this.ui.navStartNext.html(this._data.nav.letsBegin), this.ui.navStartNext.attr("aria-label", this._data.nav.letsBeginAccessibleText), this.ui.navStartNext.css("display", "inline-block"), this.ui.navBackArrow.css("display", "none"), this.ui.navBack.css("display", "none"), this.ui.navStartNext.css("cursor", "pointer"), this._setButtonRole(this.ui.navStartNext)), (this._currentSlideId.indexOf("intermediate") > -1 || "choose-parent" === this._currentSlideId) && (this.ui.navStartNext.html(this._data.nav.nextStep), this.ui.navStartNext.attr("aria-label", this._data.nav.nextStepAccessibleText), this.ui.navBack.html(this._data.nav.backAStep), this.ui.navBack.attr("aria-label", this._data.nav.backAStepAccessibleText), this.ui.navBack.css("display", "large" === this._getViewportWidth() || "medium" === this._getViewportWidth() ? "inline-block" : "none"), this.ui.navBack.css("display", "inline-block"), this.ui.navStartNext.css("cursor", "pointer"), this._setButtonRole(this.ui.navStartNext), this.ui.navStartNext.css("display", "none"), this.ui.navBack.css("cursor", "pointer"), this._setButtonRole(this.ui.navBack)), this._currentSlideId.indexOf("recommendation") > -1 && (this.ui.navStartNext.html(this._data.nav.backToStart), this.ui.navStartNext.attr("aria-label", this._data.nav.backtoStartAccessibleText), this.ui.navBackArrow.css("display", "none"), this.ui.navBack.css("display", "none"), this.ui.navStartNext.css("display", "inline-block"), this.ui.navStartNext.css("cursor", "pointer"), this._setButtonRole(this.ui.navStartNext))
        },
        _setItemsVisibility: function(b) {
            a(".ChargeQualifier .screen .items .item").css("display", "none"), b.forEach(function(b) {
                a(".ChargeQualifier .screen .items " + b).css("display", "inline-block")
            })
        },
        _setButtonRole: function(a) {
            var b = arguments.length > 1 && arguments[1] !== d ? arguments[1] : !0;
            a && b && a.attr("role", "button"), a && !b && a.attr("role", null)
        },
        _log: function(a) {}
    };
    jQuery.createComponent("ChargeQualifier", e)
}(jQuery, window, document),
function(a) {
    a.fn.removeStyle = function(b) {
        var c = new RegExp(b + "[^;]+;?", "g");
        return this.each(function() {
            a(this).attr("style", function(a, b) {
                return b.replace(c, "")
            })
        })
    }
}(jQuery),
function(a, b, c, d) {
    var e = {
        _models: [],
        _modelSelectorHeight: 0,
        _vehicleSelected: null,
        uiSelectors: {
            selectVehicle: ".vehicle-selector",
            selectModel: ".model-selector",
            total: ".total-selected",
            compareButtonContainer: ".button-container",
            dataContainer: ".data-container",
            vehicles: ".vehicle-selector .select-option",
            models: ".model-selector .select-option"
        },
        events: {
            "click .remove-icon": "_removeModel",
            "click .compare-button": "_getCompareData"
        },
        init_rtl: function() {},
        init: function() {
            this._updateSelectedTotal(), this.ui("selectModel").find(".Selectable").Selectable("initSlider"), this._modelSelectorHeight = this.ui("selectModel").outerHeight(), this.ui("selectModel").height(0).hide(), this.ui("selectVehicle").find(".Selectable").Selectable("initSlider"), this.ui("selectVehicle").on("option-selected", function(b, c, d) {
                this.ui("vehicles").removeClass("selected");
                var e = a(c.currentTarget);
                e.addClass("selected"), this._vehicleSelected = this.ui("vehicles").index(e), this._showModels()
            }.bind(this)), this.ui("selectModel").on("option-selected", function(a, b, c) {
                this._selectModel(b)
            }.bind(this))
        },
        _demoFn: function() {
            this.ui("models").removeClass("selected");
            for (var a = 0, b = this._models.length; b > a; a++) this._models[a].v === this._vehicleSelected && this.ui("models").eq(this._models[a].m).addClass("selected")
        },
        _showModels: function() {
            this.ui("selectModel").is(":visible") ? this.ui("selectModel").transition({
                opacity: 0,
                height: 0
            }, 250, function() {
                this._demoFn(), this.ui("selectModel").transition({
                    opacity: 1,
                    height: this._modelSelectorHeight
                }, 500), site.utils.scrollTo(a(".option-details:first()", this.$element), 500)
            }.bind(this)) : (this.ui("selectModel").show(), this.ui("selectModel").find(".Selectable").Selectable("updateSliderSize"), this.ui("selectModel").transition({
                opacity: 1,
                height: this._modelSelectorHeight
            }, 500), site.utils.scrollTo(a(".option-details:first()", this.$element), 500))
        },
        _selectModel: function(b) {
            var c = a(b.currentTarget);
            c.hasClass("selected") ? (c.removeClass("selected"), this._models = this._models.filter(function(a) {
                return !(a.v === this._vehicleSelected && a.m === this.ui("models").index(c))
            }.bind(this))) : this._models.length < 3 && (c.addClass("selected"), this._models.push({
                v: this._vehicleSelected,
                m: this.ui("models").index(c)
            })), this._updateVehicleSelectedCount(), this._updateSelectedTotal(), this._models.length > 1 ? this.ui("compareButtonContainer").show() : this.ui("compareButtonContainer").hide()
        },
        _updateVehicleSelectedCount: function() {
            var a = this.ui("vehicles").eq(this._vehicleSelected),
                b = this._models.filter(function(a) {
                    return a.v === this._vehicleSelected
                }.bind(this)).length;
            0 === b ? (a.removeClass("model-selected"), a.find(".selected-icon").text("")) : (a.addClass("model-selected"), a.find(".selected-icon").text(b))
        },
        _updateSelectedTotal: function() {
            this.ui("total").text(this._models.length)
        },
        _getCompareData: function() {
            this.ui("dataContainer").show(), site.utils.scrollTo(this.ui("dataContainer"), 300)
        }
    };
    jQuery.createComponent("CompareTwo", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            comparisonWrapper: ".comparisonWrapper",
            carouselNavigation: ".carouselNavigation"
        },
        $sliderSet: a(".sliderSet", this.$element),
        $activeSet: null,
        $activeSlides: null,
        _$html: a("html"),
        $initSlider: !1,
        $componentHeight: null,
        $visibleTab: a(".visibleTab", this.$element),
        $tabFilterContainer: a(".tabFilterContainer", this.$element),
        $tabFilter: a(".TabFilter", this.$element),
        $headerBlock: null,
        $totalTabs: [],
        $carousel: !1,
        activatedSliderItems: [],
        activeSlideItem: !1,
        _comparisonSlideDefaults: {
            $element: !1,
            dragControl: !1,
            dragPosition: 0,
            $dragBindElememt: !1,
            overlayActive: !1
        },
        toggleSnapFlag: !0,
        loadDelayMs: 4e3,
        dragsliderDelayMs: 1200,
        dragsliderElementRef: ".sliderControls",
        dragsliderProgressRef: ".sliderProgress",
        dragsliderObject: !1,
        dragsliderPosition: .5,
        dragTimeout: !1,
        fadeInComplete: !1,
        ieHoverLoop: !1,
        _carouselDirection: "slideFromRight",
        $hotspotOverlay: !1,
        _fallbackAnimationOffset: -230,
        breakpointSize: "large",
        activeHotspot: {
            $element: !1,
            dragControl: !1,
            dragPosition: .5,
            $dragBindElememt: !1
        },
        init_rtl: function() {
            this._carouselDirection = "slideFromLeft"
        },
        init: function() {
            var c = this;
            this.$element.addClass("loading"), this.$element.append(a('<div class="loaderOverlay"></div>')), this._setActiveSet(), this._setPadding(), this.$element.scrollfire({
                onBottomIn: function(a, d) {
                    c.$element.hasClass("loaded") === !1 && (c.$activeSlides.length > 1 ? c._initRoyalSlider() : (c.$element.hasClass("loading") && c.loaderEffect(c.loadDelayMs), c.ui("carouselNavigation").fadeOut(), c.$activeSet.find(".comparisonSliderCarousel").removeClass("royalSlider")), c._allTabsToArray(), c._initActiveSlide(c.$activeSlides.first(), !0), b.richsponsiveImage())
                }
            }), c._initEvents(), c._initEnquire()
        },
        _setActiveSet: function() {
            this.$activeSet = this.$sliderSet.filter(".active"), this.$activeSlides = a(".comparisonSliderItem", this.$activeSet), this.$headerBlock = a(".headerBlock", this.$activeSet)
        },
        _initActiveSlide: function(b, c) {
            var d = this;
            this.activeframeSliderItem = !1;
            var e = this.$activeSlides.index(b),
                f = null,
                g = null;
            if (this.$activeSlides.removeClass("active"), e in this.activatedSliderItems) {
                this.activeSlideItem = this.activatedSliderItems[e];
                var h = this.activeSlideItem.dragControl.getValue(),
                    i = 2;
                h[0] >= .75 ? i = 3 : h[0] <= .25 && (i = 1), this.activeSlideItem.dragControl.setStep(i, 1, !0), this.activeSlideItem.dragControl.reflow()
            } else this.activeSlideItem = a.extend(!0, {}, d._comparisonSlideDefaults), this.activeSlideItem.$element = b, this.activatedSliderItems[e] = this.activeSlideItem, f = this.activeSlideItem.$element.find(".sliderContainer"), g = this.activeSlideItem.$element.find(".comparisonWrapper"), 0 === e && c ? (this.activeSlideItem.dragPosition = .5, this.activeSlideItem.dragControl = this._initDragDealer(!0, f, g)) : (this.dragsliderPosition = site.rtl ? 1 : 0, this.activeSlideItem.dragControl = this._initDragDealer(!1, f, g));
            this.$element.hasClass("loading") && this.loaderEffect(d.loadDelayMs), this._initHotSpot(), this.activeSlideItem.$element.addClass("active")
        },
        _uninitDragAnimation: function(a) {
            clearTimeout(this.activeSlideItem.dragControl.activePauseTimout)
        },
        _initEnquire: function() {
            var a = this;
            enquire.register("screen and (min-width: " + b.site.breakpoints.wider + "px)", {
                match: function() {
                    a.breakpointSize = "large"
                }
            }), enquire.register("screen and (min-width: " + (b.site.breakpoints.small + 1) + "px) and (max-width: " + (b.site.breakpoints.wider - 1) + "px)", {
                match: function() {
                    a.breakpointSize = "medium"
                }
            }), enquire.register("screen and (max-width: " + b.site.breakpoints.small + "px)", {
                match: function() {
                    a.breakpointSize = "small"
                }
            }), enquire.register("screen and (max-width: 400px)", {
                match: function() {
                    a.breakpointSize = "extra-small"
                }
            })
        },
        _initHotSpot: function(a) {
            var b = this,
                c = 1300,
                d = 600,
                e = 1e3;
            this.$activeSlides.removeClass("activeHotspot"), this.activeSlideItem.$element.addClass("activeHotspot");
            var f = this.activeSlideItem.$element.find("div.hotspot"),
                g = f.find(".hotspotIcon"),
                h = f.find(".hotspotLine"),
                i = f.find(".hotspotPoint");
            g.css("opacity", 0).removeClass("pulse"), h.hide(), i.removeAttr("style"), b.fadeInComplete === !1 && (c = 3e3, d = 2600, e = 3e3, h.css({
                "-webkit-animation-delay": "2s",
                "animation-delay": "2s"
            })), b._hotspotResize(), i.delay(d).animate({
                opacity: 1
            }, 800), h.show(), g.delay(c).animate({
                opacity: 1
            }, 800, function() {
                g.addClass("pulse"), h.css({
                    "-webkit-animation-delay": "0s",
                    "animation-delay": "0s"
                })
            }), b.fadeInComplete = !0, this._$html.hasClass("no-smil") && setTimeout(function() {
                b._fallbackAnimation("forward")
            }, e), this._$html.hasClass("no-cssvhunit") && site.utils.getAndroidVersion() <= 4.2 && (this._hotspotReset(), this.$element.addClass("disableAnimation"))
        },
        _hotspotHideLines: function() {
            var b = this,
                c = a(".comparisonSliderItem.activeHotspot", this.$element),
                d = c.find(".hotspotPoint");
            d.fadeOut(300, function() {
                b._$html.hasClass("no-smil") && b._fallbackAnimation("reverse")
            });
            var e = c.find(".hotspot .inner");
            e.addClass("hidden")
        },
        _hotspotShowLines: function() {
            var b = this,
                c = a(".comparisonSliderItem.activeHotspot", this.$element),
                d = c.find(".hotspotPoint");
            d.delay(500).fadeIn(1e3), b._$html.hasClass("no-smil") && b._fallbackAnimation("forward");
            var e = c.find(".hotspot .inner");
            e.removeClass("hidden")
        },
        _hotspotResize: function() {
            var b, c, d = this,
                e = a(".hotspotWrapper", this.$activeSet),
                f = a(".comparisonWrapper", this.$element);
            e.find(".hotspot").each(function() {
                if (a(this).removeClass("flipV").removeClass("flipH"), "extra-small" === d.breakpointSize) {
                    var g = e.width() / 330;
                    b = a(this).data("mobile-y") * g, c = a(this).data("mobile-x") * g
                } else "small" === d.breakpointSize ? (b = a(this).data("mobile-y"), c = a(this).data("mobile-x")) : "medium" === d.breakpointSize ? (b = a(this).data("tablet-y"), c = a(this).data("tablet-x")) : (b = a(this).data("desktop-y"), c = a(this).data("desktop-x"));
                if (b >= f.outerHeight() / 2.5 && a(this).addClass("flipV"), c >= f.outerWidth() / 2 && a(this).addClass("flipH"), "medium" === d.breakpointSize || "large" === d.breakpointSize) {
                    var h = 50;
                    (h > c || c > f.outerWidth() - h) && a(this).toggleClass("flipH")
                }
                a(this).css({
                    display: "inherit",
                    top: b,
                    left: c
                })
            })
        },
        _hotSpotOpen: function(c) {
            c.preventDefault();
            var d = c.data.that,
                e = a(c.target),
                f = e.offset();
            site.utils.disableScroll();
            var g = e.parents(".hotspot"),
                h = g.find(".hotspotContent > .hotspotContent__heading").text(),
                i = g.find(".hotspotContent > .hotspotContent__text").text(),
                j = g.find(".hotspotContent .comparisonWrapperOverlay");
            a("html").addClass("hotSpotActive"), d.activeHotspot.$element = e, d.$hotspotOverlay === !1 && d._addOverlay(), d.dragsliderPosition = .5, f.top = f.top - a(b).scrollTop(), d.$hotspotOverlay.css({
                top: f.top,
                left: f.left
            }).addClass("hotspotOpen");
            var k = {
                height: 40,
                width: 40
            };
            d.$hotspotOverlay.stop().animate({
                width: 2.5 * a(b).width(),
                height: 2.5 * a(b).width()
            }, {
                duration: 420,
                step: function(a, b) {
                    var c = 0,
                        e = 0;
                    "width" === b.prop && (c = f.left - (a - k.width) / 2, d.$hotspotOverlay.css("left", c), f.left = c, k.width = a), "height" === b.prop && (e = f.top - (a - k.height) / 2, d.$hotspotOverlay.css("top", e), f.top = e, k.height = a)
                },
                complete: function() {
                    d.$hotspotOverlay.addClass("hotspotActive Fullscreen").removeAttr("style"), d.$hotspotOverlay.find(".hotspotOverlayContent").prepend(j), d.$hotspotOverlay.find(".Fullscreen__information-heading").text(h), d.$hotspotOverlay.find(".Fullscreen__information-text").text(i), d.$hotspotOverlay.find(".Fullscreen__footer-heading").text(h), d.$hotspotOverlay.find(".Fullscreen__footer-text").text(i), d.activeSlideItem.overlayActive = !0, b.richsponsiveImage(), d._uninitDragAnimation(a(d.activeSlideItem.$element)), d.activeHotspot.dragControl = d._initDragDealer(!1, d.$hotspotOverlay.find(".overlaidSlider"), d.$hotspotOverlay.find(".comparisonWrapperOverlay"))
                }
            })
        },
        _hotSpotClose: function(b) {
            b.preventDefault();
            var c = b.data.that;
            site.utils.enableScroll(), c.$hotspotOverlay = a(".hotspotOverlay", c.$element), c.$hotspotOverlay.removeClass("hotspotOpen Fullscreen");
            var d = c.activeHotspot.$element.parents(".hotspot");
            d.find(".hotspotContent").append(a(".comparisonWrapperOverlay", c.$hotspotOverlay)), c.$hotspotOverlay.removeClass("hotspotActive"), a("html").removeClass("hotSpotActive").removeAttr("style"), c.activeSlideItem.overlayActive = !1, c._uninitDragAnimation(a(c.activeSlideItem.$element)), c._initActiveSlide(c.activeSlideItem.$element)
        },
        _addOverlay: function() {
            this.$hotspotOverlay = a(".hotspotOverlay", this.$element)
        },
        _allTabsToArray: function(b) {
            var c = this;
            a(".sliderSet").each(function(b, d) {
                c.$totalTabs.push(a(this).data("tabid"))
            })
        },
        _toggleTab: function(c) {
            var d, e, f = this;
            f.$initSlider === !1 ? f.$initSlider = !0 : (a.each(f.$totalTabs, function(b, c) {
                if (e = a("." + c), e.hasClass("visibleTab")) {
                    e.removeClass("active");
                    var g = e.find(".comparisonSliderBg").css("background-image");
                    f._slideToComponentBackground(g)
                } else d = b, e.addClass("active toggling")
            }), this._tabFilterFade(0, 100), this.dragsliderPosition = .5, b.richsponsiveImage(), this.activatedSliderItems = [], this.activeSlideItem = !1, this._fallbackAnimationOffset = -230, this.$element.find(".hotspotLine").removeAttr("style"), this._setActiveSet(), f.$activeSlides.length > 1 ? f._initRoyalSlider() : f.$activeSet.find(".comparisonSliderCarousel").removeClass("royalSlider"), setTimeout(function() {
                var b = a(f.$activeSet.find(".active.comparisonSliderItem"));
                0 === b.length && (b = f.$activeSlides.first()), f._initActiveSlide(b, f.toggleSnapFlag), f.$activeSet.removeClass("toggling"), f.activeSlideItem.dragControl.reflow(), f.toggleSnapFlag = !1, f.$activeSlides.length > 1 && f.ui("carouselNavigation").fadeIn()
            }, 1200))
        },
        _slideToComponentBackground: function(a) {
            a.replace(/.*\s?url\([\'\"]?/, "").replace(/[\'\"]?\).*/, ""), this.$element.css("background-image", a)
        },
        _initRoyalSlider: function() {
            var c = this,
                d = 0,
                e = a(".royalSlider", this.$activeSet).royalSlider({
                    arrowsNav: !0,
                    loop: !0,
                    keyboardNavEnabled: !1,
                    controlsInside: !1,
                    imageScaleMode: "none",
                    arrowsNavAutoHide: !1,
                    autoHeight: !0,
                    autoScaleSlider: !1,
                    slidesSpacing: 0,
                    imgWidth: "100%",
                    imgHeight: "100%",
                    sliderDrag: !0,
                    sliderTouch: !0,
                    controlNavigation: "none",
                    thumbsFitInViewport: !1,
                    navigateByClick: !1,
                    startSlideId: d,
                    autoPlay: {
                        enabled: !1
                    },
                    numImagesToPreload: 1,
                    transitionType: "move"
                });
            e = a(".royalSlider", this.$activeSet).data("royalSlider"), c.$carousel = e, e.ev.on("rsBeforeAnimStart", function() {
                var b = this.currSlide.content;
                b.find(".hotspotLine").removeAttr("style").hide(), b.find(".hotspotIcon").removeAttr("style"), c._fallbackAnimationOffset = -230, c._updatePagination(), c._uninitDragAnimation(a(this.currSlide.content))
            }), e.ev.on("rsAfterSlideChange", function() {
                b.richsponsiveImage(), c._initActiveSlide(a(this.currSlide.content));
                var d = this.currSlide.content;
                d.find(".hotspotIcon").removeAttr("style"), c._resize()
            }), this._updatePagination(), b.richsponsiveImage(), this.$element.hasClass("loading") && this.loaderEffect(c.loadDelayMs), a(b).trigger("resize")
        },
        _initDragDealer: function(c, d, e) {
            var f = this;
            this.activeSlideItem.overlayActive ? this.activeHotspot.$dragBindElememt = e : this.activeSlideItem.$dragBindElememt = e;
            var g = d.find(this.dragsliderElementRef).get(0),
                h = d.find(this.dragsliderProgressRef),
                i = new b.Dragdealer(g, {
                    steps: 3,
                    x: this.dragsliderPosition,
                    xPrecision: e.outerWidth(),
                    dragStartCallback: function(b, c) {
                        a(this.handle).addClass("active"), f._hotspotHideLines()
                    },
                    dragStopCallback: function(b, c) {
                        a(this.handle).removeClass("active").data("position", 100 * b), f._hotspotShowLines()
                    },
                    animationCallback: function(b, c) {
                        a(this.handle).data("position", 100 * b), f.activeSlideItem.overlayActive !== !0 && (f.activeSlideItem.dragPosition = b), f.comparisonClipping(b, e), site.rtl ? h.width(100 - 100 * b + "%") : h.width(100 * b + "%")
                    }
                });
            if (a(g).on("mousedown touchstart pointerdown MSPointerDown", function(a) {
                    a.stopPropagation()
                }), c) {
                var j = site.rtl ? 1 : 0;
                this.dragTimeout = setTimeout(function() {
                    i.setValue(j, 1)
                }, f.loadDelayMs)
            }
            return i
        },
        _updatePagination: function() {
            var b = this,
                c = b.$carousel.currSlideId + 1;
            a(".carouselNavigation");
            return "slideFromLeft" === b._carouselDirection ? void a(".numbers", b.$element).html('<span class="number">' + b.$carousel.numSlides + '</span><span class="divide">/</span><span class="number">' + c + "</span>") : void a(".numbers", b.$element).html('<span class="number">' + c + '</span><span class="divide">/</span><span class="number">' + b.$carousel.numSlides + "</span>")
        },
        comparisonClipping: function(a, b) {
            if (this.activeSlideItem !== !1 && b !== !1) {
                var c = b.find(".beforeImage"),
                    d = b.find(".afterImage"),
                    e = c.width(),
                    f = c.height(),
                    g = 0;
                g = Math.round(e * a), c.css("clip", "rect(0," + e + "px," + f + "px," + g + "px)"), d.css("clip", "rect(0," + g + "px," + f + "px,0)")
            }
        },
        _initEvents: function() {
            var c = this;
            a(b).smartresize(function() {
                c._resize()
            }), 1 === c.$tabFilter.length && (c.$tabFilter.on("changeTabs", function(a) {
                c._toggleTab(c.$activeSet.data("tabid")), c.ui("carouselNavigation").fadeOut()
            }), c.$tabFilter.on("tabAnimationComplete", function() {
                a(".headingLinear", c.$activeSet).Headings("linearLines"), c._tabFilterFade(1, 800), c._setPadding()
            })), this.$element.find(".hotspot .hotspotIcon").on("click", {
                that: this
            }, this._hotSpotOpen), this.$element.find(".hotspotOverlayClose").on("click", {
                that: this
            }, this._hotSpotClose), c._initControls()
        },
        _resize: function() {
            var b = this,
                c = {
                    x: 0,
                    y: 0
                };
            b._setPadding(), b._hotspotResize(), b._resizeOverlayHeader(), b.activeSlideItem.dragControl !== d && a(b.activeSlideItem.dragControl.handle).hasClass("active") === !1 && (c = b.activeSlideItem.dragControl.getValue(), b.comparisonClipping(c[0], b.activeSlideItem.$dragBindElememt), b.activeSlideItem.dragControl.reflow()), b.activeHotspot.$element !== !1 && a(b.activeHotspot.dragControl.handle).hasClass("active") === !1 && b.activeSlideItem.dragControl !== d && (c = b.activeHotspot.dragControl.getValue(), b.comparisonClipping(c[0], b.activeHotspot.$dragBindElememt), b.activeSlideItem.dragControl.reflow()), b.$carousel !== !1 && b.$carousel.updateSliderSize()
        },
        _initControls: function() {
            var b = a(".carouselNavigation", this.element);
            a(".prev", b).on("click", {
                that: this
            }, this._onPrev), a(".next", b).on("click", {
                that: this
            }, this._onNext)
        },
        _onPrev: function(a) {
            a.preventDefault();
            var b = a.data.that;
            return site.rtl ? void b.$carousel.next() : void b.$carousel.prev()
        },
        _onNext: function(a) {
            a.preventDefault();
            var b = a.data.that;
            return site.rtl ? void b.$carousel.prev() : void b.$carousel.next()
        },
        _tabFilterFade: function(a, b) {
            var c = this;
            c.$tabFilter.stop().animate({
                opacity: a
            }, b)
        },
        _setPadding: function() {
            var a = this;
            a.$activeSlides.removeAttr("style");
            var b = a.$headerBlock.outerHeight(),
                c = parseInt(a.$activeSlides.css("paddingTop"), 0) + parseInt(b, 0) + a.$tabFilter.outerHeight();
            a.$activeSlides.css("paddingTop", c), a.$tabFilterContainer.css("top", b)
        },
        _setInlineHeight: function() {
            var b = a(".rsOverflow", this.$activeSet),
                c = a(".royalSlider", this.$activeSet);
            if (0 !== b.length) {
                var d = b.attr("style");
                if (d) {
                    var e, f = d.split("; ");
                    a.each(f, function(a, b) {
                        if (e = b.split(": "), "height" === e[0]) {
                            var d = e[1].replace(";", "");
                            "0px" !== d && c.css("min-height", d)
                        }
                    })
                }
            }
        },
        _comparisonWrapperResize: function() {
            var b = this,
                c = a(".rsOverflow");
            site.utils.isMobileDevice() && c.css("min-height", 0), b._setInlineHeight()
        },
        loaderEffect: function(a) {
            var b = this;
            this.$element.addClass("load-progress"), setTimeout(function() {
                b.$element.addClass("loaded").removeClass("loading load-progress")
            }, a)
        },
        _fallbackAnimation: function(c) {
            var d = a(".hotspotLine", this.activeSlideItem.$element),
                e = this;
            if ("undefined" == typeof b.requestAnimationFrame) return void this._hotspotReset();
            if ("reverse" === c) {
                if (this._fallbackAnimationOffset < -230) return void(this._fallbackAnimationOffset = -230);
                this._fallbackAnimationOffset--
            } else {
                if (this._fallbackAnimationOffset >= 0) return void(this._fallbackAnimationOffset = 0);
                this._fallbackAnimationOffset++
            }
            d.css("strokeDashoffset", this._fallbackAnimationOffset), setTimeout(function() {
                b.requestAnimationFrame(a.proxy(e._fallbackAnimation(c), e))
            }, 2)
        },
        _resizeOverlayHeader: function() {
            if (a("html").hasClass("hotSpotActive")) {
                var c = this.$hotspotOverlay.find(".logo").outerWidth() + this.$hotspotOverlay.find(".mfp-close").outerWidth();
                this.$hotspotOverlay.find(".info").width(a(b).width() - c)
            }
        },
        _hotspotReset: function() {
            var b = a(".hotspotLine", this.$element);
            b.css({
                strokeDashoffset: 0
            })
        }
    };
    jQuery.createComponent("ComparisonSlider", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _isMobile: !1,
        _groupTitlePaddingLeft: 0,
        uiSelectors: {
            tables: "table",
            overflowScrollContainer: ".scroll-x",
            accordion: ".Accordion",
            groupTitles: ".accordion-group-title",
            groupTitleDiv: ".accordion-group-title > div"
        },
        events: {},
        init_rtl: function() {},
        init: function() {
            this._groupTitlePaddingLeft = parseInt(this.ui("groupTitleDiv").first().css("padding-left"), 10), site.utils.isBreakpointSmall() ? (this._trackOverflowScroll(), this._isMobile = !0) : this.ui("tables").addClass("table-grid"), a(b).smartresize(function() {
                site.utils.isBreakpointSmall() ? (this._isMobile || this._trackOverflowScroll(), this._isMobile = !0) : (this.ui("tables").addClass("table-grid"), this._isMobile && this._untrackOverflowScroll(), this._isMobile = !1)
            }.bind(this), 250)
        },
        _equalizeColWidths: function() {
            var b = this.ui("tables").length,
                c = a("table:eq(0) td", this.$element).length,
                d = {};
            this.ui("tables").removeClass("table-grid");
            for (var e = 0; b > e; e++)
                for (var f = 0; c > f; f++) {
                    var g = a("table:eq(" + e + ") td:eq(" + f + ")", this.$element).width();
                    d[f] ? d[f] = g > d[f] ? g : d[f] : d[f] = g
                }
            for (var h = 0; c > h; h++) a("table tr td:nth-child(" + h + "1n)", this.$element).width(d[h]);
            this.ui("tables").addClass("table-grid")
        },
        _trackOverflowScroll: function() {
            this.ui("overflowScrollContainer").on("scroll", function(b) {
                clearTimeout(this.scrollTimeout), this._scrolling || (this.ui("overflowScrollContainer").addClass("scrolling"), this._scrolling = !0), this.scrollTimeout = setTimeout(function() {
                    var c = b.currentTarget,
                        d = (a(c), c.scrollLeft);
                    this.ui("groupTitleDiv").css({
                        paddingLeft: d + this._groupTitlePaddingLeft,
                        width: a(".scroll-x").width() - 80,
                        boxSizing: "content-box"
                    }), a(".header-row a").css({
                        paddingLeft: d + this._groupTitlePaddingLeft,
                        width: a(".scroll-x").width() - 80,
                        boxSizing: "content-box",
                        display: "block"
                    }), this.ui("overflowScrollContainer").removeClass("scrolling"), this.ui("accordion").trigger("padding-set", [d + this._groupTitlePaddingLeft]), this._scrolling = !1
                }.bind(this), 250)
            }.bind(this))
        },
        _untrackOverflowScroll: function() {
            this.ui("groupTitleDiv").css("padding-left", ""), this.ui("overflowScrollContainer").off("scroll")
        },
        _collapseAll: function() {}
    };
    jQuery.createComponent("ComparisonTable", e)
}(jQuery, window, document),
function(a, b, c) {
    var d = {
        _loader: null,
        _isLoaded: !1,
        _rId: null,
        _translations: null,
        _comparisons: [null, null, null],
        _data: null,
        _currentVehicle: 0,
        _currentDerivative: 0,
        _currentBodyStyle: 0,
        _currentlyPopulating: 0,
        _totalComparisons: 3,
        _slidesPerView: 4.2,
        _totalPopulated: 0,
        _enginesPopulated: 0,
        _comparisonEls: a(".model-selector-table .vehicles-row td"),
        _comparisonEngineSelectors: a(".engine-selector-row td"),
        _templates: {},
        _sliders: {},
        _loadedImages: 0,
        _dev: !1,
        _isFixed: !1,
        _stuckAt: 0,
        _maxKF: 0,
        _step: 0,
        _mobileScrollActive: !1,
        _scrollTimeout: null,
        _mode: !1,
        _isXI: !1,
        _freeMode: !1,
        _initialLoadDone: !1,
        _mobileBreakpoint: 740,
        _accordionWidth: 0,
        _sizes: {
            height: 0,
            width: 0
        },
        _randomPCPflag: !1,
        _financeCounter: 0,
        _financeMarketLink: "",
        _financeProductTitle: "",
        _financeConfig: {},
        _financeProductTerms: "",
        uiSelectors: {
            dataContainer: ".data-container",
            vehiclesRow: ".vehicles-row",
            backToVehicles: ".back-to-vehicles",
            bodySelector: ".body-selector",
            closeButtons: ".close-button",
            accordion: ".Accordion",
            modelsTable: ".models-table",
            chooseEngine: ".choose-engine",
            chooseVehicle: ".choose-vehicle",
            chooseDerivative: ".choose-derivative",
            derivateSwiper: ".choose-derivative .Selectable.swiper-wrapper",
            mobileAddVehicle: ".mobile-add-button span"
        },
        _breakpoints: {
            640: {
                slidesPerView: 1.1
            },
            1e3: {
                slidesPerView: 3.1
            },
            1200: {
                slidesPerView: 4.2
            }
        },
        _checkArrows: function(a) {
            var b = void 0,
                c = void 0;
            switch (a) {
                case 1:
                    b = this._data.models.length, c = this.ui("chooseVehicle");
                    break;
                case 2:
                    b = this._data.models[this._currentVehicle].bodyStyles[this._currentBodyStyle].derivatives.length, c = this.ui("chooseDerivative")
            }
            b > this._slidesPerView && c.removeClass("no-arrows")
        },
        _step1: function() {
            this._setStep(1), 3 === this._step && (a(".data-block").css({
                height: 0,
                overflow: "hidden"
            }), a(".slider-container").removeClass("transition")), this.ui("chooseDerivative").removeClass("shown"), this.ui("derivateSwiper").hide(), this.ui("chooseEngine").removeClass("shown"), this._checkArrows(1), this.ui("chooseVehicle").addClass("shown")
        },
        _step2: function() {
            a(".data-block").css({
                height: 0,
                overflow: "hidden"
            }), this.ui("derivateSwiper").show(), a(".slider-container").removeClass("transition"), this.ui("chooseEngine").removeClass("shown"), this._checkArrows(2), this._setStep(2)
        },
        _step3: function() {
            this._setStep(3)
        },
        _check: function(a, b, c) {
            return null !== a && (a && a[0] || c && c[0]) ? a && a[0] ? a[0] : c[0] : null
        },
        _munge: function(a, b, d) {
            var e = a.bodyStyles[0],
                f = e.derivatives[0],
                g = f.engines[b],
                h = f.keyFeatures,
                i = {
                    overview: {
                        overview: {
                            numberOfSeats: this._check(g.numberOfSeats, "numberOfSeats", e.numberOfSeats),
                            combinedConsumption: this._check(g.combinedConsumption, "combinedConsumption"),
                            wltpCombinedFuelConsumption: this._check(g.wltpCombinedFuelConsumption, "wltpCombinedFuelConsumption"),
                            co2: this._check(g.co2, "co2"),
                            wltpCO2CombinedEmissions: this._check(g.wltpCO2CombinedEmissions, "wltpCO2CombinedEmissions"),
                            fuelCapacity: this._check(g.fuelCapacity, "fuelCapacity"),
                            nedcRange: this._check(g.nedcRange, "nedcRange")
                        }
                    },
                    engines: f.engines,
                    keyFeatures: h,
                    additionalInformation: {
                        additionalInformation: {
                            additionalInformation1: this._check(g.additionalInformation1, "additionalInformation1"),
                            additionalInformation2: this._check(g.additionalInformation2, "additionalInformation2"),
                            additionalInformation3: this._check(g.additionalInformation3, "additionalInformation3"),
                            additionalInformation4: this._check(g.additionalInformation4, "additionalInformation4"),
                            additionalInformation5: this._check(g.additionalInformation5, "additionalInformation5"),
                            additionalInformation6: this._check(g.additionalInformation6, "additionalInformation6"),
                            additionalInformation7: this._check(g.additionalInformation7, "additionalInformation7"),
                            additionalInformation8: this._check(g.additionalInformation8, "additionalInformation8"),
                            additionalInformation9: this._check(g.additionalInformation9, "additionalInformation9"),
                            additionalInformation10: this._check(g.additionalInformation10, "additionalInformation10"),
                            additionalInformation11: this._check(g.additionalInformation11, "additionalInformation11"),
                            additionalInformation12: this._check(g.additionalInformation12, "additionalInformation12")
                        }
                    },
                    pricing: {
                        pricing: {
                            price1: this._check(g.price1, "price1"),
                            price2: this._check(g.price2, "price2"),
                            price3: this._check(g.price3, "price3"),
                            price4: this._check(g.price4, "price4"),
                            price5: this._check(g.price5, "price5"),
                            price6: this._check(g.price6, "price6"),
                            price7: this._check(g.price7, "price7"),
                            price8: this._check(g.price8, "price8"),
                            price9: this._check(g.price9, "price9"),
                            price10: this._check(g.price10, "price10"),
                            price11: this._check(g.price11, "price11"),
                            price12: this._check(g.price12, "price12")
                        }
                    },
                    businessPrice: {
                        businessPrice: {
                            businessPrice1: this._check(g.businessPrice1, "businessPrice1"),
                            businessPrice2: this._check(g.businessPrice2, "businessPrice2"),
                            businessPrice3: this._check(g.businessPrice3, "businessPrice3"),
                            businessPrice4: this._check(g.businessPrice4, "businessPrice4"),
                            businessPrice5: this._check(g.businessPrice5, "businessPrice5"),
                            businessPrice6: this._check(g.businessPrice6, "businessPrice6"),
                            businessPrice7: this._check(g.businessPrice7, "businessPrice7"),
                            businessPrice8: this._check(g.businessPrice8, "businessPrice8"),
                            businessPrice9: this._check(g.businessPrice9, "businessPrice9"),
                            businessPrice10: this._check(g.businessPrice10, "businessPrice10"),
                            businessPrice11: this._check(g.businessPrice11, "businessPrice11"),
                            businessPrice12: this._check(g.businessPrice12, "businessPrice12")
                        }
                    },
                    finances: this._setFinanceData(d),
                    performanceAndWeights: {
                        performance: {
                            maximumSpeed: this._check(g.maximumSpeed, "maximumSpeed"),
                            acceleration: this._check(g.acceleration, "acceleration")
                        },
                        fuelConsumption: {
                            urbanConsumption: this._check(g.urbanConsumption, "urbanConsumption"),
                            wltpUrbanConsumption: this._check(g.wltpUrbanConsumption, "wltpUrbanConsumption"),
                            extraUrbanConsumption: this._check(g.extraUrbanConsumption, "extraUrbanConsumption"),
                            wltpExtraUrbanFuelConsumption: this._check(g.wltpExtraUrbanFuelConsumption, "wltpExtraUrbanFuelConsumption"),
                            combinedConsumption: this._check(g.combinedConsumption, "combinedConsumption"),
                            wltpCombinedFuelConsumption: this._check(g.wltpCombinedFuelConsumption, "wltpCombinedFuelConsumption"),
                            nedcConsumption: this._check(g.nedcConsumption, "nedcConsumption"),
                            wltpConsumption: this._check(g.wltpConsumption, "wltpConsumption"),
                            fuelCapacity: this._check(g.fuelCapacity, "fuelCapacity"),
                            nedcRange: this._check(g.nedcRange, "nedcRange"),
                            wltpRange: this._check(g.wltpRange, "wltpRange"),
                            co2: this._check(g.co2, "co2"),
                            wltpCO2CombinedEmissions: this._check(g.wltpCO2CombinedEmissions, "wltpCO2CombinedEmissions")
                        },
                        engine: {
                            battery: this._check(g.battery, "battery"),
                            engineCapacity: this._check(g.engineCapacity, "engineCapacity"),
                            maximumPower: this._check(g.maximumPower, "maximumPower"),
                            engineMaximumPowerRevPerMin: this._check(g.engineMaximumPowerRevPerMin, "engineMaximumPowerRevPerMin"),
                            maximumTorque: this._check(g.maximumTorque, "maximumTorque"),
                            engineMaximumTorqueRevPerMin: this._check(g.engineMaximumTorqueRevPerMin, "engineMaximumTorqueRevPerMin"),
                            driveTrain: this._check(g.driveTrain, "driveTrain"),
                            transmission: this._check(g.transmission, "transmission"),
                            chargingTime: this._check(g.chargingTime, "chargingTime")
                        },
                        weights: {
                            weight: this._check(g.weight, "weight"),
                            weightUnladen: this._check(g.weightUnladen, "weightUnladen"),
                            grossVehicleWeight: this._check(g.grossVehicleWeight, "grossVehicleWeight"),
                            maximumLadenWeight: this._check(g.maximumLadenWeight, "maximumLadenWeight"),
                            maximumMassOnFrontAxle: this._check(g.maximumMassOnFrontAxle, "maximumMassOnFrontAxle"),
                            maximumMassOnRearAxle: this._check(g.maximumMassOnRearAxle, "maximumMassOnRearAxle")
                        }
                    },
                    towingOptions: {
                        "towing.subHeading.Txt": {
                            unbrakedTrailer: this._check(g.unbrakedTrailer, "unbrakedTrailer"),
                            maximumTowing: this._check(g.maximumTowing, "maximumTowing"),
                            maximumCouplingPointWeight: this._check(g.maximumCouplingPointWeight, "maximumCouplingPointWeight"),
                            maximumCombinationWeight: this._check(g.maximumCombinationWeight, "maximumCombinationWeight")
                        },
                        roofCarrying: {
                            maximumRoofLoad: this._check(e.maximumRoofLoad, "maximumRoofLoad")
                        }
                    },
                    dimensions: {
                        turningCircle: {
                            turningRadius: this._check(g.turningCircle, "turningRadius", e.turningRadius),
                            wallToWall: this._check(e.wallToWall, "wallToWall"),
                            turnsLockToLock: this._check(e.turnsLockToLock, "turnsLockToLock")
                        },
                        obstacleClearance: {
                            groundClearance: this._check(g.groundClearance, "groundClearance", e.groundClearance),
                            clearanceFrontAxle: this._check(g.clearanceFrontAxle, "clearanceFrontAxle", e.clearanceFrontAxle),
                            clearanceRearAxle: this._check(g.clearanceRearAxle, "clearanceRearAxle", e.clearanceRearAxle)
                        },
                        "wadingDepth.headingTxt": {
                            wadingDepth: this._check(g.wadingDepth, "wadingDepth", e.wadingDepth)
                        },
                        vehicleLength: {
                            length: this._check(g.length, "length", e.length),
                            wheelbase: this._check(g.wheelbase, "wheelbase", e.wheelbase)
                        },
                        vehicleHeightAndWidths: {
                            height: this._check(e.height, "height"),
                            frontWheelTrack: this._check(g.frontWheelTrack, "frontWheelTrack", e.frontWheelTrack),
                            rearWheelTrack: this._check(g.rearWheelTrack, "rearWheelTrack", e.rearWheelTrack),
                            widthMirrorsOut: this._check(e.widthMirrorsOut, "widthMirrorsOut"),
                            widthMirrorsFolded: this._check(e.widthMirrorsFolded, "widthMirrorsFolded"),
                            bootVolume: this._check(e.bootVolume, "bootVolume")
                        },
                        approachAngle: {
                            approachAngleStandard: this._check(g.approachAngleStandard, "approachAngleStandard", e.approachAngleStandard),
                            approachAngleOffRoad: this._check(g.approachAngleOffRoad, "approachAngleStandard", e.approachAngleOffRoad)
                        },
                        breakOverAngle: {
                            rampBreakOverAngleStandard: this._check(g.rampBreakOverAngleStandard, "rampBreakOverAngleStandard", e.rampBreakOverAngleStandard),
                            rampBreakOverAngleOffRoad: this._check(g.rampBreakOverAngleOffRoad, "breakOverAngleOffRoad", e.rampBreakOverAngleOffRoad)
                        },
                        departureAngle: {
                            departureAngleStandard: this._check(g.departureAngleStandard, "departureAngleStandard", e.departureAngleStandard),
                            departureAngleOffRoad: this._check(g.departureAngleOffRoad, "departureAngleOffRoad", e.departureAngleOffRoad)
                        },
                        loadspaceCapacityRearSeatsUpright: {
                            loadspaceSeatsUprightHeight: this._check(e.loadspaceSeatsUprightHeight, "loadspaceSeatsUprightHeight"),
                            loadspaceSeatsUprightWidth: this._check(e.loadspaceSeatsUprightWidth, "loadspaceSeatsUprightWidth"),
                            loadspaceSeatsUprightVolume: this._check(e.loadspaceSeatsUprightVolume, "loadspaceSeatsUprightVolume"),
                            loadspaceSeatsUprightWidthBetweenArches: this._check(e.loadspaceSeatsUprightWidthBetweenArches, "loadspaceSeatsUprightWidthBetweenArches"),
                            loadspaceSeatsUprightLength: this._check(e.loadspaceSeatsUprightLength, "loadspaceSeatsUprightLength")
                        },
                        loadspaceCapacityRearSeatsForward: {
                            loadspaceSeatsForwardHeight: this._check(e.loadspaceSeatsForwardHeight, "loadspaceSeatsForwardHeight"),
                            loadspaceSeatsForwardWidth: this._check(e.loadspaceSeatsForwardWidth, "loadspaceSeatsForwardWidth"),
                            loadspaceSeatsForwardVolume: this._check(e.loadspaceSeatsForwardVolume, "loadspaceSeatsForwardVolume"),
                            loadspaceSeatsForwardWidthBetweenArches: this._check(e.loadspaceSeatsForwardWidthBetweenArches, "loadspaceSeatsForwardWidthBetweenArches"),
                            loadspaceSeatsForwardLength: this._check(e.loadspaceSeatsForwardLength, "loadspaceSeatsForwardLength")
                        },
                        standardRideHeight: {
                            rideHeightWithRoofRails: this._check(e.rideHeightWithRoofRails, "rideHeightWithRoofRails"),
                            rideHeightWithRoofAntannae: this._check(e.rideHeightWithRoofAntannae, "rideHeightWithRoofAntannae")
                        },
                        headroom: {
                            headroomFront: this._check(e.headroomFront, "headroomFront"),
                            headroomRear: this._check(e.headroomRear, "headroomRear"),
                            headroomFrontWithPanoramicRoof: this._check(e.headroomFrontWithPanoramicRoof, "headroomFrontWithPanoramicRoof"),
                            headroomRearWithPanoramicRoof: this._check(e.headroomRearWithPanoramicRoof, "headroomRearWithPanoramicRoof")
                        }
                    }
                };
            return "en-US" === c.documentElement.lang && (delete i.performanceAndWeights.fuelConsumption.co2, delete i.overview.overview.co2), i
        },
        _setFinanceData: function(a) {
            return null !== this._comparisons[a] && null !== this._comparisons[a].tableData && null !== this._comparisons[a].tableData.finances ? this._comparisons[a].tableData.finances : {
                quote: {}
            }
        },
        _findHighest: function(b) {
            var c = 0;
            return a(b).each(function(b, d) {
                var e = a(d).outerHeight();
                e > c && (c = e)
            }), c
        },
        _setStep: function(c) {
            this._step = c, a(".step-indicator ul").attr("data-step", c), a(".slider-container .faded").removeClass("faded"), this._setText(), 1 === c && a("#finance-disclaimer").hide(), 4 === c ? ("gb" !== this._financeConfig.market && "de" !== this._financeConfig.market || "true" !== this._financeConfig.enabled || a("#finance-disclaimer").show(), a(".close-button").hide()) : b.innerWidth > 640 && (this._initialLoadDone ? site.utils.scrollTo(this.$element) : this._initialLoadDone = !0)
        },
        _bindMobileScroll: function(b) {
            var c = a(".models-table");
            4 === this._step && c.hasClass("is-fixed") && c.animate({
                marginLeft: -b.currentTarget.scrollLeft
            }, 0)
        },
        _mobileScrollOn: function() {
            !this._mobileScrollActive && b.innerWidth < this._mobileBreakpoint && (a(".scroll-x").on("scroll", this._bindMobileScroll.bind(this)), this._mobileScrollActive = !0)
        },
        _mobileScrollOff: function() {
            this._mobileScrollActive && (a(".scroll-x").off("scroll", this._bindMobileScroll.bind(this)), this._mobileScrollActive = !1)
        },
        _updateCanvasSize: function() {
            var b = a(".spinner");
            this.canvas.width = b.width(), this.canvas.height = b.height(), this._loader.x = b.width() / 2, this._loader.y = 100
        },
        _updateSizes: function() {
            this._accordionWidth = this.ui("accordion").width();
            var b = a(".accordion-group-title").css("width");
            4 === this._step && (a(".spinner").css("width", b), a(".engine-selector-table td").css("width", parseInt(b, 10) / this._totalPopulated - 1 + "px")), this._updateCanvasSize(), this._equalizeCellHeight()
        },
        init: function() {
            var d = this;
            "en-XI" === c.documentElement.lang && (this._isXI = !0), this.ui("chooseEngine").hover(function() {
                a(".slider-container").css("overflow", "visible")
            }, function() {
                a(".slider-container").css("overflow", "hidden")
            }), a(".step-indicator li").click(function(b) {
                var c = parseInt(a(b.currentTarget).index(), 10) + 1;
                if (c < d._step) {
                    var e = "_step" + c;
                    d[e]()
                }
            }), this.ui("accordion").on("padding-set", function(b, c) {
                a(".header-row a").css({
                    paddingLeft: c
                })
            }), this.ui("accordion").on("height-change", function(b, c) {
                var e = a(".models-table").outerHeight(),
                    f = a(".engine-selector").outerHeight(),
                    g = 0,
                    h = a(".mobile-add-button");
                "none" !== h.css("display") && (g = h.outerHeight()), d._totalPopulated > 0 && a(".data-block").height(c + e + g + f)
            }), this._translations = this.$element.find(".translations").data("json"), this._setStep(1), ("localhost" === b.location.hostname || "192.168.13.83" === b.location.hostname || "192.168.15.37" === b.location.hostname) && (this._dev = !0), a(".close-button").hide(), this._initLoader(), this._getTemplates(), this._setupSliders(), this._getInitialData(), this._setupEvents(), this._setMobileButtonTranslation(), this.ui("dataContainer").height(0), this.ui("dataContainer").addClass("closed"), b.innerWidth < 1025 && (b.innerWidth > b.innerHeight ? (this._mode = "landscape", this._mobileScrollOff()) : (this._mode = "portrait", this._mobileScrollOn())), a(b).on("orientationchange", function() {
                setTimeout(function() {
                    b.innerWidth < 1025 && (b.innerWidth > b.innerHeight ? d._mode = "landscape" : d._mode = "portrait"), "landscape" === d._mode && (a(".toggle").width("auto"), a(".accordion-group-title > div").width("auto")), 4 !== d._step ? 3 !== d._step && setTimeout(function() {
                        var b = a(a(".select-block")[d._step - 1]).outerHeight();
                        a(".slider-container").height(b)
                    }, 200) : (setTimeout(function() {
                        if ("landscape" === d._mode) {
                            var b = a(".Accordion");
                            a(".models-table, .models-table table, .models-table > div").width(b.width()), a(".models-table").css({
                                position: "relative",
                                top: 0
                            }), b.css({
                                marginTop: 0
                            }), a(".fixed-background").css({
                                height: 0,
                                opacity: 0
                            }), d._mobileScrollOff()
                        } else a(".models-table table, .models-table > div").width(a(".Accordion").width()), a(".models-table").css({
                            width: "100%"
                        }), d._mobileScrollOn()
                    }, 200), d.ui("accordion").Accordion("calculateNewHeight"))
                }, 500)
            }), a(b).resize(this._handleResize.bind(this)), this._handleResize(), this._mobileScrollOn(), a(c).scroll(function() {
                if (d._totalPopulated > 0 && 4 === d._step && "landscape" !== d._mode) {
                    var c = a(".populated img").first(),
                        e = 48,
                        f = c.offset().top + c.height() - e,
                        g = d.ui("accordion").find(".accordion-group:not(.always-open):not(.ignore)").last(),
                        h = g.offset().top + g.outerHeight(),
                        i = d._findHighest(".populated .meta-block"),
                        j = a(b).scrollTop() + i + e,
                        k = d._findHighest(".populated img");
                    if (a(b).scrollTop() > f && !d._isFixed || d._stuckAtBottom && h >= j) {
                        a(".populated").css("box-shadow", "0px 1px 2px rgba(0,0,0,0.1)"), d._isFixed = !0, d._stuckAt = f, d._stuckAtBottom = !1;
                        var l = a(".models-table");
                        d.ui("accordion").css({
                            marginTop: l.height()
                        }), l.css({
                            position: "fixed",
                            top: -k + e,
                            width: d.ui("accordion").width()
                        }).addClass("is-fixed"), b.innerWidth < d._mobileBreakpoint && (l.css({
                            width: "100%",
                            overflow: "visible"
                        }), d._totalPopulated > 1 && (a(".models-table > div").width(a(".models-table table").width() + 20), l.animate({
                            marginLeft: -a(".scroll-x")[0].scrollLeft
                        }, 0)))
                    } else if (d._isFixed && a(b).scrollTop() <= a(".Accordion").offset().top - i - e && !d._stuckAtBottom) {
                        a(".populated").css("box-shadow", "none");
                        var m = a(".models-table");
                        m.css({
                            position: "relative",
                            width: "auto",
                            top: 0,
                            marginLeft: 0
                        }).removeClass("is-fixed"), d.ui("accordion").css({
                            marginTop: 0
                        }), d._isFixed = !1, d._stuckAtBottom = !1, b.innerWidth < d._mobileBreakpoint && (m.css({
                            overflow: "visible"
                        }), a(".models-table > div").css({
                            width: "auto"
                        }))
                    } else if (j > h && !d._stuckAtBottom && d._isFixed) {
                        a(".populated").css("box-shadow", "none"), d._stuckAtBottom = !0;
                        var n = a(".models-table");
                        b.innerWidth <= 740 ? n.css({
                            position: "absolute",
                            top: h - a(".scroll-x").offset().top - n.height(),
                            overflow: "visible"
                        }).removeClass("is-fixed") : n.css({
                            position: "absolute",
                            top: h - n.height() - d.$element.offset().top
                        }).removeClass("is-fixed"), n.css({
                            "margin-left": "0px"
                        })
                    }
                }
            }), this._setupCloseButton()
        },
        _createCanvas: function() {
            this.$element.find("canvas") && this.$element.find("canvas").remove(), this.canvas = c.createElement("canvas"), this.ctx = this.canvas.getContext("2d"), this.ctx.mozImageSmoothingEnabled = this._imageSmoothing, this.ctx.webkitImageSmoothingEnabled = this._imageSmoothing, this.ctx.msImageSmoothingEnabled = this._imageSmoothing, this.ctx.imageSmoothingEnabled = this._imageSmoothing, this.$element.find(".spinner").prepend(this.canvas)
        },
        _draw: function() {
            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this._loader.draw(), this.ctx.save(), this.ctx.fillStyle = "#fc00cf", this.ctx.restore(), this._isLoaded === !1 && (this._rID = requestAnimationFrame(this._draw.bind(this)))
        },
        _initLoader: function() {
            this._createCanvas(), this._loader = new Loader(this.ctx, this.canvas, 0, 0, 27, "#4A4F54", 18), this._loader.hidden = !1, this._loader.alpha = 1, this._loader.arrowAlpha = 1
        },
        _handleResize: function() {
            var c = this;
            1 === this._step && this._setCarouselSize(this._sliders.vehicle), 2 === this._step && this._setCarouselSize(this._sliders.derivative), b.innerWidth < this._mobileBreakpoint ? this._calculateMobileWidth() : (this.ui("accordion").width("100%"), 0 !== this._accordionWidth && (a(".models-table").hasClass("is-fixed") ? a(".models-table, .models-table table, .models-table > div").css("width", this.ui("accordion").width() + "px") : a(".models-table, .models-table table, .models-table > div").width("100%"))), this._updateSizes(), this._equalizeCellHeight(), setTimeout(function() {
                c._alignTabsIcons(), c._alignTooltips()
            }, 10)
        },
        _calculateDataTableHeight: function() {
            var b = 0;
            b += a(".header-row").outerHeight(), b += a(".engine-selector").outerHeight(), a(".accordion-group").each(function(c, d) {
                var e = a(d);
                if (b += e.find(".accordion-group-title").outerHeight(), e.hasClass("open")) {
                    var f = e.find(".accordion-group-content");
                    f.height(e.find("table").outerHeight()), b += e.find(".accordion-group-content table").outerHeight()
                }
            }), a(".Accordion.data-container").height(b)
        },
        _openDataTable: function() {
            this.ui("dataContainer").hasClass("closed") && this.ui("dataContainer").removeClass("closed").addClass("open")
        },
        _setupCloseButton: function() {
            var b = this;
            a(".close-button").click(function() {
                b._openDataBlock(), b._setStep(4)
            })
        },
        _calculateMobileWidth: function() {
            if (b.innerWidth < this._mobileBreakpoint) {
                var c = 100;
                this._totalPopulated > 1 && (c = 75);
                var d = a(".scroll-x").width(),
                    e = d / 100,
                    f = Math.round(e * c),
                    g = f * this._totalPopulated;
                a(".Accordion.data-container, .models-table table").width(g)
            }
        },
        _getTemplates: function() {
            var a = site.utils.template;
            this._templates = {
                comparisonBlock: a("comparison_block_data"),
                comparisonBlockNoData: a("comparison_block_nodata"),
                comparisonEngineSelector: a("comparison_engine_selector"),
                engineSelect: a("engine_select"),
                vehicle: a("vehicle_template"),
                derivative: a("derivative_template"),
                product: a("product_template"),
                bodystyle: a("bodystyle_buttons"),
                link: a("cta_link"),
                stickyNav: a("stickynav_element")
            }
        },
        _setupSliders: function() {
            var a = this,
                c = this._slidesPerView;
            b.innerWidth <= 601 && (c = "landscape" === this._mode ? 2.6 : 1.6);
            var d = {
                vehicles: !1,
                derivatives: !1
            };
            this._freeMode = !site.rtl, b.innerWidth < 1025 && (d.vehicles = ".vehicles-slider .swiper-scrollbar", d.derivatives = ".derivatives-slider .swiper-scrollbar"), this._sliders.vehicle = new Swiper(".vehicles-slider", {
                slidesPerView: c,
                navigation: {
                    nextEl: ".choose-vehicle .slide-controls .next",
                    prevEl: ".choose-vehicle .slide-controls .prev"
                },
                roundLengths: !0,
                freeMode: this._freeMode,
                freeModeSticky: !0,
                freeModeMinimumVelocity: 0,
                freeModeMomentumRatio: 1,
                freeModeMomentumBounce: !1,
                scrollbar: {
                    el: d.vehicles,
                    hide: !1
                }
            }), this._sliders.derivative = new Swiper(".derivatives-slider", {
                slidesPerView: c,
                navigation: {
                    nextEl: ".choose-derivative .slide-controls .next",
                    prevEl: ".choose-derivative .slide-controls .prev"
                },
                roundLengths: !0,
                freeMode: this._freeMode,
                freeModeSticky: !0,
                freeModeMinimumVelocity: 0,
                freeModeMomentumRatio: 1,
                freeModeMomentumBounce: !1,
                scrollbar: {
                    el: d.derivatives,
                    hide: !1
                }
            }), setTimeout(function() {
                a._setCarouselSize(a._sliders.vehicle), a._setCarouselSize(a._sliders.derivative)
            }, 100)
        },
        _setCarouselSize: function(c) {
            b.innerWidth < 1025 && (b.innerWidth > b.innerHeight ? this._mode = "landscape" : this._mode = "portrait");
            var d = c,
                e = this._slidesPerView;
            b.innerWidth > 1200 ? e = 4.2 : b.innerWidth < 1200 && b.innerWidth > 900 ? e = 3.2 : b.innerWidth <= 900 && b.innerWidth > 601 ? e = 2.2 : b.innerWidth <= 601 && (e = "landscape" === this._mode ? 2.6 : 1.6), this._slidesPerView = e;
            var f = 0;
            if (d.slides && (f = d.slides.length), f > 0) {
                var g = a(d.$wrapperEl[0]).parent().parent().width() / e;
                if (0 === g) return;
                var h = 0;
                e > f ? (a(d.$wrapperEl[0]).css({
                    width: g * f
                }), a(d.$el[0]).css({
                    width: g * f
                }), d.params.slidesPerView = f, a(d.$el[0]).parent().addClass("no-arrows"), this._detached = !0, d.detachEvents(), this._resizeSlideDetailsWrapper(d), h = Math.round(g / 16 * 9), a(d.slides).each(function(b, c) {
                    var d = a(c).find(".option-image");
                    a(d).height(h)
                }), d.update()) : (a(d.$el[0]).parent().removeClass("no-arrows"), a(d.$wrapperEl[0]).css({
                    width: Math.round(g * f)
                }), a(d.$el[0]).css({
                    width: "auto"
                }), this._detached && (this._detached = !1, d.attachEvents()), d.params.slidesPerView = e, this._resizeSlideDetailsWrapper(d), h = Math.round(g / 16 * 9), a(d.slides).each(function(b, c) {
                    var d = a(c).find(".option-image");
                    a(d).height(h)
                }), d.update())
            }
        },
        _resizeSlideDetailsWrapper: function(c) {
            if (c) {
                var d = 0;
                a(c.slides).each(function(b, c) {
                    var e = a(c).find(".option-details");
                    e.css("height", "auto");
                    var f = a(e).outerHeight();
                    f > d && (d = f)
                }), a(c.slides).each(function(b, c) {
                    var e = a(c).find(".option-details");
                    e.css("height", d)
                });
                var e = "";
                switch (this._step) {
                    case 1:
                        e = ".choose-vehicle";
                        break;
                    case 2:
                        e = ".choose-derivative";
                        break;
                    case 3:
                        e = ".choose-engine"
                }
                if (this._step < 4) {
                    var f = 40;
                    b.innerWidth < 700 && (f = 100), a(".slider-container").height(a(e).outerHeight() + f)
                }
            }
        },
        _populateSlider: function(b, c) {
            var d = this,
                e = this._templates[b],
                f = this._sliders[b],
                g = [];
            f.removeAllSlides(), c.forEach(function(a, b) {
                g.push(e({
                    data: a,
                    id: b,
                    fromText: d._translations.headings.from,
                    co2: d._translations.co2,
                    combinedConsumption: d._translations.combinedConsumption
                }))
            }), f.appendSlide(g), a(".choose-" + b).waitForImages(function() {
                d._imagesLoaded(b)
            })
        },
        _imagesLoaded: function(b) {
            this._setCarouselSize(this._sliders[b]), setTimeout(function() {
                a(".slider-container").height(a(".choose-" + b).outerHeight())
            }, 50)
        },
        _equalizeCellHeight: function() {
            var b = 0,
                c = a(".meta-block--equal-height");
            c.css("min-height", "auto"), c.each(function(c, d) {
                var e = a(d).outerHeight();
                e > b && (b = e)
            }), b > 0 && c.css("min-height", b)
        },
        _resetSliders: function() {
            3 === this._totalPopulated ? a(".slider-container").height(0) : a(".slider-container").height(a(".choose-vehicle").outerHeight()), 0 === this._totalPopulated && (a(".slider-container").removeClass("transition"), a(".data-block").height(0), this._step1()), a(".slider-container .faded").removeClass("faded"), a(".slider-container .selected").removeClass("selected")
        },
        _getInitialData: function() {
            this._createFinanceConfig(), this._data = this.$element.data("json"), this._populateSlider("vehicle", this._data.models, this._templates.vehicle), this._populateComparisons()
        },
        _removePopulatedEmptyClass: function(a) {
            a.removeClass("populated empty disabled")
        },
        _buildUrlFromConfigCodes: function(b, c) {
            var d = this,
                e = {
                    nameplate: b.modelId[0],
                    nameplateYear: b.modelYear[0],
                    bodyStyle: b.bodyStyles[0].configCode[0],
                    derivative: b.bodyStyles[0].derivatives[0].configCode[0],
                    engine: c
                };
            return new Promise(function(b, f) {
                var g = "";
                a.ajax({
                    url: "" + d._financeConfig.api_url + e.nameplate + "_" + e.nameplateYear + "?callback=?",
                    dataType: "jsonp",
                    timeout: 5e3,
                    success: function(a) {
                        var d = a.vehicleConfig.collections[0].href;
                        d = d.substr(d.search("__") + 2);
                        for (var f = 0;
                            "_" !== d.charAt(f);) g += d.charAt(f), f += 1;
                        var h = e.nameplate + "_" + e.nameplateYear + "__" + g + "__" + c + "_" + e.bodyStyle + "_" + e.derivative + "__/quote";
                        b(h)
                    },
                    error: function(a, b, c) {
                        f(c)
                    }
                })
            })
        },
        _getFinanceProduct: function(b, c) {
            var d = this;
            return new Promise(function(e) {
                a.ajax({
                    url: b + "?callback=?",
                    dataType: "jsonp",
                    success: function(b) {
                        var f = "<p>" + d._translations.headings.disclaimer + "</p>";
                        b.literals.terms && (f += b.literals.terms), a("#finance-disclaimer").html(f), e({
                            index: c,
                            result: b
                        })
                    }
                })
            })
        },
        _setFinanceHeaders: function() {
            var b = this,
                c = [{
                    header: null,
                    apr: null,
                    otrPrice: null
                }, {
                    header: null,
                    apr: null,
                    otrPrice: null
                }, {
                    header: null,
                    apr: null,
                    otrPrice: null
                }];
            a.each(this._comparisons, function(a, d) {
                null !== d && d.noFinance === !0 && (c[a].header = b._financeConfig.finProdErrorHeader), Object.prototype.hasOwnProperty.call(d.tableData.finances.quote, "otrPrice"), null !== d && d.noFinance === !1 && Object.prototype.hasOwnProperty.call(d.tableData.finances.quote, "apr") && Object.prototype.hasOwnProperty.call(d.tableData.finances.quote, "otrPrice") && (c[a].apr = parseFloat(d.tableData.finances.quote.apr), c[a].otrPrice = Number(d.tableData.finances.quote.otrPrice.replace(/[^0-9\.-]+/g, "")))
            });
            var d = function() {
                    a.each(c, function(a, c) {
                        null === c.header && null !== b._comparisons[a] && b._comparisons[a].noFinance === !1 && (c.header = b._translations.headings.financeExample + "-" + b._financeProductTitle)
                    })
                },
                e = function() {
                    for (var a = -1, e = -1, f = 0, g = 0; g < c.length; g += 1) null !== c[g].apr && (a = c[g].apr, a > e && (e = a, f = g));
                    b._comparisons[f].noFinance === !1 && (c[f].header = b._translations.headings.representativeExample + "-" + b._financeProductTitle), d()
                },
                f = function() {
                    for (var a = -1, e = -1, f = 0, g = 0; g < c.length; g += 1) null !== c[g].otrPrice && (a = c[g].otrPrice, -1 === e ? (e = a, f = g) : e > a && (e = a, f = g));
                    b._comparisons[f].noFinance === !1 && (c[f].header = b._translations.headings.representativeExample + " - " + b._financeProductTitle), d()
                },
                g = function(a) {
                    return a.map(function(a) {
                        return a.apr
                    }).some(function(a, b, c) {
                        return c.indexOf(a) !== c.lastIndexOf(a) && null !== a
                    })
                };
            g(c) ? f() : e();
            var h = a(".table.finances").find(".title div");
            h.map(function(b, d) {
                a(d).html(c[b].header)
            })
        },
        _getFinanceData: function(a, b) {
            var c = this,
                d = this._financeConfig.api_url + a,
                e = this._financeConfig.api_url + a.replace("__/quote", "__/bootstrap");
            this._getFinanceProduct(e, b).then(function(a) {
                for (var e = null, f = 0; f < a.result.products.length; f += 1)
                    if (a.result.products[f].id === c._financeConfig.finProdId && a.result.products[f].disabled === !1) {
                        e = a.result.products[f];
                        break
                    } var g = Math.floor(2 * Math.random());
                if (null !== e && (c._randomPCPflag === !1 || c._randomPCPflag === !0 && 1 === g)) {
                    c._financeProductTitle = e.title;
                    var h = c._financeConfig.finProdId;
                    d = d + "?product=" + h + "&deposit=" + c._financeConfig.deposit + "&duration=" + c._financeConfig.duration + "&mileage=" + c._financeConfig.mileage + "&compare=true", "de" === c._financeConfig.market && "true" === c._financeConfig.enabled && (d = d + "&typeOfPayment=" + c._financeConfig.typeOfPayment), c._getFinanceQuote(d, b).then(function(a) {
                        c._comparisons[a.index].tableData.finances = c._formatFinancialData(a), c._comparisons[a.index].noFinance = !1, c._financeCounter += 1, c._financeCounter === c._getComparisonsLength() && c._showFinancialData()
                    })
                } else c._comparisons[a.index].tableData.finances.quote = {
                    noFinanceMessage: "  "
                }, c._translations.noFinance = " ", c._comparisons[a.index].noFinance = !0, c._financeCounter += 1, c._financeCounter === c._getComparisonsLength() && c._showFinancialData()
            })
        },
        _getFinanceQuote: function(b, c) {
            return new Promise(function(d, e) {
                a.ajax({
                    url: b + "&callback=?",
                    dataType: "jsonp",
                    success: function(a) {
                        d({
                            index: c,
                            result: a
                        })
                    },
                    error: function(a) {
                        e(a)
                    }
                })
            })
        },
        _createFinanceConfig: function() {
            var b = a("#finance-config");
            if (b && (this._financeConfig.api_url = b.find(".api-url").text(), this._financeConfig.finance_url = b.find(".finance-url").text(), this._financeConfig.enabled = b.find(".enabled").text(), this._financeConfig.market = b.find(".market").text(), this._financeConfig.mileage = b.find(".mileage").text(), this._financeConfig.duration = b.find(".duration").text(), this._financeConfig.deposit = b.find(".deposit").text(), this._financeConfig.typeOfPayment = b.find(".typeOfPayment").text(), this._financeConfig.finProdId = b.find(".finProdId").text(), this._financeConfig.finProdErrorMessage = b.find(".finProdErrorMessage").html(), this._financeConfig.finProdErrorRedirection = b.find(".finProdErrorRedirection").text(), this._financeConfig.finProdErrorHeader = b.find(".finProdErrorHeader").text(), this._financeConfig.finProdTerms = b.find(".finProdTerms").text()), "gb" !== this._financeConfig.market && "de" !== this._financeConfig.market || "false" === this._financeConfig.enabled) {
                var c = a(".accordion-group");
                c.addClass("ignore"), c.has(".finances").css("display", "none")
            }
        },
        _equalizeFinanceTableData: function() {
            var b = this,
                c = this._getFinanceLargestDataSet(),
                d = 0;
            a.each(this._comparisons, function(a, e) {
                if (null !== e && (d = Object.keys(e.tableData.finances.quote).length, c > d))
                    for (; c > d;) e.noFinance === !1 ? (e.tableData.finances.quote["hasFinanceEmptyCell" + d] = " ", b._translations["hasFinanceEmptyCell" + d] = " ") : e.noFinance === !0 && (e.tableData.finances.quote["noFinanceEmptyCell" + d] = "  ", b._translations["noFinanceEmptyCell" + d] = "  "), d++
            })
        },
        _getFinanceLargestDataSet: function() {
            var b = 0,
                c = 0;
            return a.each(this._comparisons, function(a, d) {
                null !== d && d.noFinance === !1 && (c = Object.keys(d.tableData.finances.quote).length, c > b && (b = c))
            }), b
        },
        _addFinanceTerms: function() {
            var b = this,
                c = !0;
            a.each(this._comparisons, function(a, d) {
                null !== d && "gb" === b._financeConfig.market && d.noFinance === !1 && (d.tableData.finances.quote.finProdTerms = b._financeConfig.finProdTerms, b._translations.finProdTerms = " ", c = !1)
            }), a.each(this._comparisons, function(a, d) {
                null !== d && "gb" === b._financeConfig.market && d.noFinance === !0 && c === !1 && (d.tableData.finances.quote["noFinanceEmptyCell_" + a] = "  ", b._translations["noFinanceEmptyCell_" + a] = "  ")
            })
        },
        _showFinancialData: function() {
            var b = this;
            this._equalizeFinanceTableData(), this._addFinanceTerms(), this._populateTable("finances"), this._setFinanceHeaders(), setTimeout(function() {
                a(".ComparisonTable").removeClass("hidden-td-0 hidden-td-1 hidden-td-2"), b._totalPopulated > 0 && b._openDataBlock(), b._equalizeCellHeight()
            }, 0), this._toggleSpinner(!1), setTimeout(function() {
                b._alignTooltips()
            }, 10)
        },
        _alignTooltips: function() {
            a(".tooltip").each(function(b, c) {
                var d = parseInt(a(c).css("height"), 10),
                    e = a(c).find("div"),
                    f = parseInt(e.css("height"), 10);
                e.css({
                    top: d / 2 - f / 2 + 2
                })
            })
        },
        _formatFinancialData: function(a) {
            var b = {};
            b.quote = {};
            var c = a.quote.quote;
            this._comparisons[a.index].tooltips = [];
            for (var d = 0; d < c.length; d += 1) b.quote[c[d].key] = c[d].value, this._translations[c[d].key] = c[d].label, this._comparisons[a.index].tooltips.push(c[d].tooltip);
            return b
        },
        _getComparisonsLength: function() {
            for (var a = 0, b = 0; b < this._comparisons.length; b += 1) void 0 !== this._comparisons[b] && null !== this._comparisons[b] && (a += 1);
            return a
        },
        _populateLinks: function(b) {
            var c = this;
            if (this._financeCounter = 0, this._totalPopulated > 0) {
                var d = 0,
                    e = "<tr>",
                    f = this,
                    g = function h() {
                        if (d < c._comparisons.length)
                            if (null !== c._comparisons[d]) {
                                var g = c._addLinkAccessibleText(c._comparisons[d]);
                                if ("us" !== c._financeConfig.market && "gb" !== c._financeConfig.market && "de" !== c._financeConfig.market || "true" !== c._financeConfig.enabled) e += '<td class="button-cell" data-id=' + d + ">", e += f._templates.link({
                                    links: g
                                }), e += "</td>", d += 1, h();
                                else {
                                    var i = f._comparisons[d].tableData.engines[f._comparisons[d].selectedEngine].configCode[0];
                                    c._buildUrlFromConfigCodes(c._comparisons[d].data, i).then(function(a) {
                                        var b = 0,
                                            f = c._comparisons[d].links.length;
                                        for (b; f > b; b += 1) c._comparisons[d].links[b].url.indexOf("financecalculator") > -1 && ("" === c._financeMarketLink && (c._financeMarketLink = c._financeConfig.finance_url), c._comparisons[d].links[b].url = c._financeMarketLink + a, c._comparisons[d].ctaLink = c._financeMarketLink + a);
                                        e += '<td class="button-cell" data-id=' + d + ">", e += c._templates.link({
                                            links: g
                                        }), e += "</td>", "gb" !== c._financeConfig.market && "de" !== c._financeConfig.market || "true" !== c._financeConfig.enabled || c._getFinanceData(a, d), d += 1, h()
                                    })["catch"](function(a) {
                                        console.log("there was an error"), console.log(a)
                                    })
                                }
                            } else e += '<td class="button-cell empty">', e += "</td>", d += 1, h();
                        else {
                            e += "</tr>", a("table." + b).html(e);
                            var j = a(".accordion-group-content");
                            j.has(".table.links").css("height", "auto"), j.has(".table.terms").css("height", "auto"), setTimeout(function() {
                                a(".ComparisonTable").removeClass("hidden-td-0 hidden-td-1 hidden-td-2"), c._totalPopulated > 0 && c._openDataBlock(), c._equalizeCellHeight()
                            }, 0)
                        }
                    };
                g()
            }
        },
        _populateImages: function() {
            var b = "<tr>";
            this._totalPopulated > 0 && a.each(this._comparisons, function(c, d) {
                null !== d ? (b += "<td>", d.tableData.images.length > 0 && a.each(d.tableData.images, function(a, c) {
                    var d = c.image,
                        e = c.text,
                        f = c.value;
                    "undefined" !== d && (b += '<div><img src="' + d + '" alt=""><p>' + e + "</p><p>" + f + "</p></div>")
                }), b += "</td>") : b += '<td class="empty"></td>'
            }), b += "</tr>", a("table.images").html(b)
        },
        _populateTable: function(b) {
            var c = [
                [],
                [],
                []
            ];
            if (this._totalPopulated > 0) {
                var d = "";
                a.each(this._comparisons, function(d, e) {
                    null !== e && a.each(e.tableData[b], function(f, g) {
                        if ("keyFeatures" === b) c[d].push({
                            type: "feature",
                            value: g
                        });
                        else {
                            var h = ["overview", "additionalInformation", "pricing", "businessPrice"];
                            if (-1 === h.indexOf(b)) {
                                var i = 0;
                                for (var j in g) null !== g[j] && "" !== g[j] && i++;
                                c[d].push({
                                    label: f,
                                    type: "title",
                                    total: i,
                                    isElectric: e.isElectric
                                })
                            }
                            g && a.each(g, function(a, b) {
                                null !== b && "" !== b && -1 === a.indexOf("noFinanceEmptyCell") && -1 === a.indexOf("noFinanceMessage") && -1 === a.indexOf("hasFinanceEmptyCell") ? c[d].push({
                                    label: a,
                                    type: "data",
                                    value: b
                                }) : null !== b && a.indexOf("hasFinanceEmptyCell") > -1 ? c[d].push({
                                    label: a,
                                    type: "hasFinance",
                                    value: b
                                }) : null !== b && a.indexOf("noFinanceEmptyCell") > -1 ? c[d].push({
                                    label: a,
                                    type: "noFinance",
                                    value: b
                                }) : null !== b && a.indexOf("noFinanceMessage") > -1 ? c[d].push({
                                    label: a,
                                    type: "noFinanceMessage",
                                    value: b
                                }) : c[d].push({
                                    label: !1,
                                    type: "empty",
                                    value: !1
                                })
                            })
                        }
                    })
                });
                for (var e = 0, f = [0, 0, 0]; e < c[0].length;) {
                    if (("undefined" != typeof c[0][e] && "empty" !== c[0][e].type || "undefined" != typeof c[1][e] && "empty" !== c[1][e].type || "undefined" != typeof c[2][e] && "empty" !== c[2][e].type) && ("undefined" != typeof c[0][e] && 0 !== c[0][e].total || "undefined" != typeof c[1][e] && 0 !== c[1][e].total || "undefined" != typeof c[2][e] && 0 !== c[2][e].total)) {
                        d += "<tr>";
                        for (var g = 0; 3 > g;) {
                            var h = "empty-cell";
                            switch (c[g][e] && (h = c[g][e].type), h) {
                                case "feature":
                                    f[g] += 1, d += '<td class="feature"><div>' + c[g][e].value + "</div></td>";
                                    break;
                                case "data":
                                    f[g] += 1, d += "finProdTerms" === c[g][e].label ? '<td><div class="data-content finProdTerms fontSmooth"><strong>' + this._translations[c[g][e].label] + "</strong><br/>" + c[g][e].value + this._createTooltip(b, g, e - 1, this._translations[c[g][e].label]) + "</div></td>" : '<td><div class="data-content "><strong>' + this._translations[c[g][e].label] + "</strong><br/>" + (c[g][e].value + this._createTooltip(b, g, e - 1, this._translations[c[g][e].label])) + "</div></td>";
                                    break;
                                case "noFinance":
                                    f[g] += 1, d += '<td class="financeToDelete">' + this._translations[c[g][e].label] + "</td>";
                                    break;
                                case "hasFinance":
                                    f[g] += 1, d += '<td class="financeNotToDelete">' + this._translations[c[g][e].label] + "</td>";
                                    break;
                                case "noFinanceMessage":
                                    f[g] += 1, d += '<td class="noFinanceMessage">' + this._financeConfig.finProdErrorMessage + " <a href=" + this._comparisons[g].ctaLink + ">" + this._financeConfig.finProdErrorRedirection + "</a></td>";
                                    break;
                                case "title":
                                    f[g] += 1;
                                    var i = this._translations.headings[c[g][e].label];
                                    "fuelConsumption" === c[g][e].label && c[g][e].isElectric && (i = this._translations.headings.rangeconsumption), "engine" === c[g][e].label && c[g][e].isElectric && (i = this._translations.headings.powertrain || "Not Translated"), d += '<td class="title"><div>' + i + "</div></td>";
                                    break;
                                case "empty":
                                    d += '<td class="data"><div></div></td>';
                                    break;
                                case "empty-cell":
                                    d += '<td class="empty-cell"></td>'
                            }
                            g += 1
                        }
                        d += "<tr/>"
                    }
                    e += 1
                }
                "finances" === b && "true" === this._financeConfig.enabled && "de" === this._financeConfig.market && this._hasAtLeastOneFinanceProduct() && (d += '<tr class="data"><td colspan="' + this._getComparisonsLength() + '"><div>' + this._financeConfig.finProdTerms + "</div></td></tr>");
                var j = a("table." + b);
                j.html(d), "finances" === b && (a(".table.finances tr:empty").remove(), a(".table.finances td.financeToDelete").remove(), a(".table.finances td.noFinanceMessage").attr("rowspan", this._getFinanceLargestDataSet())), 0 === f[0] && 0 === f[1] && 0 === f[2] ? (j.parent().parent().hide(), a(j.parent().parent()).addClass("ignore")) : (j.parent().parent().show(), a(j.parent().parent()).removeClass("ignore")), j.parent().parent().hasClass("open") && j.parent().height(j.height())
            }
            a(".tooltip_open").magnificPopup({
                type: "inline",
                midClick: !0,
                mainClass: "mfp-fade"
            })
        },
        _hasAtLeastOneFinanceProduct: function() {
            for (var a = 0; a < this._getComparisonsLength(); a += 1)
                if (null !== this._comparisons[a] && this._comparisons[a].noFinance === !1) return !0;
            return !1
        },
        _createTooltip: function(a, b, c, d) {
            return "finances" !== a || void 0 === this._comparisons[b].tooltips || " " === d ? "" : '<div class="tooltip"><a class="tooltip_open" data-effect="mfp-zoom-in" href="#tooltip_' + b + "_" + c + '"><div></div></a></div><div class ="tooltip_popup mfp-hide" id="tooltip_ ' + b + "_" + c + '"><p>' + d + "</p>" + this._comparisons[b].tooltips[c] + "</div> "
        },
        _openDataBlock: function() {
            var b = !0;
            b && (a(".Accordion").removeClass("closed"), a(".slider-container, .scroll-x").addClass("transition"), this.ui("accordion").Accordion("calculateNewHeight"))
        },
        _closeDataBlock: function() {
            a(".slider-container, .scroll-x").removeClass("transition"), a(".data-block").addClass("has-transition").height(0), setTimeout(function() {
                a(".data-block").removeClass("has-transition")
            }, 510)
        },
        _populateComparisons: function(b) {
            var c = this;
            this._toggleSpinner(!0), a(".data-container").attr("data-engines", this._enginesPopulated), this._comparisons.forEach(function(d, e) {
                var f = a(c._comparisonEls.get(e)),
                    g = a(c._comparisonEngineSelectors.get(e));
                if (d && (d.data.selectedEngine = d.tableData.engines[d.selectedEngine], d.isElectric = Array.isArray(d.data.selectedEngine.typePowerTrain) && d.data.selectedEngine.typePowerTrain.length && "battery" === d.data.selectedEngine.typePowerTrain[0].toLowerCase()), null !== d) {
                    var h = d.data.modelName[0].trim().split(" "),
                        i = d.data.bodyStyles[0].derivatives[0].derivativeName[0].trim().split(" ");
                    f.html(c._templates.comparisonBlock({
                        data: d,
                        id: e,
                        fromText: c._translations.headings.from,
                        co2: c._translations.co2,
                        combinedConsumption: c._translations.combinedConsumption,
                        title: c._createDerivativeTitle(h, i)
                    })), g.html(c._templates.comparisonEngineSelector({
                        data: d,
                        id: e,
                        changeEngine: d.isElectric ? c._translations.headings.changePowertrain : c._translations.headings.changeEngine,
                        selectEngine: d.isElectric ? c._translations.headings["powertrainSelection.txt"] : c._translations.headings["selectEngine.txt"],
                        fromText: c._translations.headings.from,
                        co2: c._translations.co2,
                        combinedConsumption: c._translations.combinedConsumption
                    })), c._removePopulatedEmptyClass(g), c._removePopulatedEmptyClass(f), f.addClass("populated"), g.css("display", "table-cell"), e < c._enginesPopulated && f.addClass("not-populating"), a(g).find(".DropdownSelect").DropdownSelect()
                } else c._removePopulatedEmptyClass(f), f.html(c._templates.comparisonBlockNoData({
                    addVehicleText: c._translations.headings["addVehicle.txt"]
                })), c._enginesPopulated > 0 ? e > c._enginesPopulated ? (f.addClass("empty disabled"), g.css("display", "none")) : (f.addClass("empty"), g.css("display", "none")) : (f.addClass("empty disabled"), g.css("display", "none")), c._updateSizes();
                c._calculateMobileWidth(), 2 === e && (setTimeout(function() {
                    c._populateTable("overview"), c._populateTable("keyFeatures"), c._populateTable("performanceAndWeights"), c._populateTable("towingOptions"), c._populateTable("dimensions"), c._populateTable("additionalInformation"), c._populateTable("pricing"), c._populateTable("businessPrice"), c._populateLinks("links"), setTimeout(function() {
                        a(".ComparisonTable").removeClass("hidden-td-0 hidden-td-1 hidden-td-2"), c._totalPopulated > 0 && c._openDataBlock(), c._equalizeCellHeight()
                    }, 0)
                }, 0), b && setTimeout(function() {
                    a(".scroll-x").animate({
                        scrollLeft: 1e3
                    }, 100)
                }, 600))
            });
            var d = this._comparisons.every(function(a) {
                return null === a
            });
            if (!d) {
                var e = {
                    event: "comparatorComparisonView"
                };
                this._comparisons.map(function(a) {
                    return a ? {
                        nameplate: a.data.modelName[0],
                        series: a.data.bodyStyles[0].derivatives[0].derivativeName[0],
                        bodystyle: a.data.bodyStyles[0].bodyStyleName[0],
                        engine: a.tableData.engines[a.selectedEngine].engineName[0]
                    } : null
                }).forEach(function(a, b) {
                    e["vehicle" + (b + 1)] = a
                }), dataLayer.push(e)
            }
            setTimeout(function() {
                c._alignTabsIcons()
            }, 10)
        },
        _alignTabsIcons: function() {
            a(".accordion-group-title").each(function(b, c) {
                var d = a(c),
                    e = parseInt(d.css("height"), 10),
                    f = d.find(".accordion-toggle-icon"),
                    g = parseInt(f.css("height"), 10);
                f.css({
                    top: e / 2 - g / 2
                })
            })
        },
        _getMaxKeyFeatures: function() {
            this._maxKF = 0;
            for (var a = 0; a < this._comparisons.length;) {
                if (null !== this._comparisons[a]) {
                    var b = this._comparisons[a].tableData.keyFeatures.length;
                    b > this._maxKF && (this._maxKF = b)
                }
                a += 1
            }
            for (var c = 0; c < this._comparisons.length;) {
                if (null !== this._comparisons[c] && this._comparisons[c].data.bodyStyles[0].derivatives[0].keyFeatures.length < this._maxKF) {
                    for (var d = this._maxKF - this._comparisons[c].data.bodyStyles[0].derivatives[0].keyFeatures.length, e = this._comparisons[c].data.bodyStyles[0].derivatives[0].keyFeatures; 0 !== d;) e.push("&nbsp;"), d -= 1;
                    this._comparisons[c].tableData.keyFeatures = e
                }
                c += 1
            }
        },
        _getDerivatives: function() {
            return this._data.models[this._currentVehicle].bodyStyles[this._currentBodyStyle].derivatives
        },
        _bindDropdownEvents: function() {
            var b = this;
            this.ui("chooseEngine").on("change", ".DropdownSelect select", function(c) {
                b._currentEngine = a(c.currentTarget).find("option:selected").index() - 1, b._currentSelectionTrackingData = {
                    event: "comparatorSelectEngine",
                    vehicle: {
                        nameplate: b._data.models[b._currentVehicle].modelName[0],
                        series: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].derivatives[b._currentDerivative].derivativeName[0],
                        bodystyle: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].bodyStyleName[0],
                        engine: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].derivatives[b._currentDerivative].engines[b._currentEngine].engineName[0]
                    }
                }, dataLayer.push(b._currentSelectionTrackingData), a(".slider-container .choose-vehicle, .slider-container .choose-engine, .slider-container .choose-derivative").removeClass("shown"), b._doAjax(), b._getNextToPopulate(), setTimeout(function() {
                    b._resetSliders()
                }, 600), b._enginesPopulated += 1
            }), a(".engine-selector").on("change", ".DropdownSelect select", function(c) {
                b._toggleSpinner(!0);
                var d = a(c.currentTarget).data("magic");
                b._comparisons[d].selectedEngine = a(c.currentTarget).find("option:selected").index() - 1, b._comparisons[d].tableData = b._munge(b._comparisons[d].data, b._comparisons[d].selectedEngine, d), a(".ComparisonTable").addClass("hidden-td-" + d), setTimeout(function() {
                    b._populateComparisons()
                }, 330), b._currentSelectionTrackingData = {
                    event: "comparatorSelectEngine",
                    vehicle: {
                        nameplate: b._comparisons[d].data.modelName[0],
                        series: b._comparisons[d].data.bodyStyles[0].derivatives[0].derivativeName[0],
                        bodystyle: b._comparisons[d].data.bodyStyles[0].bodyStyleName[0],
                        engine: b._comparisons[d].tableData.engines[b._comparisons[d].selectedEngine].engineName[0]
                    }
                }, dataLayer.push(b._currentSelectionTrackingData)
            })
        },
        _setText: function() {
            var b = "",
                c = this._data && Array.isArray(this._data.models[this._currentVehicle].typePowerTrain) && "battery" === this._data.models[this._currentVehicle].typePowerTrain[0].toLowerCase();
            switch (this._step) {
                case 1:
                    b = this._translations.headings["vehicleSelection.txt"];
                    break;
                case 2:
                    var d = this._translations.headings["modelSelection.alternativeHeading.txt"];
                    b = void 0 !== d && d.trim() ? d : this._translations.headings["modelSelection.txt"] + " " + this._data.models[this._currentVehicle].modelName[0];
                    break;
                case 3:
                    b = c ? this._translations.headings["chooseYourPowertrain.txt"] : this._translations.headings["chooseYourEngine.txt"];
                    break;
                case 4:
                    b = this._translations.headings["addUptoThreeModels.txt"]
            }
            a(".choose-vehicle-title").css({
                opacity: 0
            }), setTimeout(function() {
                var c = a(".choose-vehicle-title");
                c.html(b), c.css({
                    opacity: 1
                })
            }, 600)
        },
        _bindVehicleSliderEvents: function() {
            var b = this;
            a(".choose-vehicle").addClass("shown"), a(".vehicles-slider").on("click", ".select-option", function(c) {
                b._currentVehicle = a(c.currentTarget).data("id"), b._currentSelectionTrackingData = {
                    event: "comparatorSelectNameplate",
                    vehicle: {
                        nameplate: b._data.models[b._currentVehicle].modelName[0],
                        series: null,
                        bodystyle: null,
                        engine: null
                    }
                }, dataLayer.push(b._currentSelectionTrackingData), b._step2(), b._currentBodyStyle = 0, b._populateSlider("derivative", b._getDerivatives()), b.ui("chooseVehicle").addClass("faded"), b._data.models[b._currentVehicle].bodyStyles.length > 1 ? (a(".select-block").addClass("has-tabs"), a(".body-selector").show(), b._populateBodyStyles()) : a(".body-selector").hide(), a(".slider-container .selected").removeClass("selected"), a(c.currentTarget).addClass("selected"), b.ui("chooseVehicle").addClass("no-arrows"), a(".choose-derivative").addClass("shown")
            })
        },
        _doAjax: function() {
            var c = this,
                d = {
                    model: this._data.models[this._currentVehicle].modelName[0],
                    bodyStyle: this._data.models[this._currentVehicle].bodyStyles[this._currentBodyStyle].bodyStyleName[0],
                    derivatives: this._data.models[this._currentVehicle].bodyStyles[this._currentBodyStyle].derivatives[this._currentDerivative].derivativeName[0],
                    ajax: !0
                };
            a.ajax({
                url: "",
                data: d,
                method: "GET",
                cache: !1
            }).success(function(d) {
                var e = void 0,
                    f = [];
                e = c._dev ? a(d).find(".Compare").data("json") : a(d).filter(".Compare").data("json"), e.models[0].ctasJson.length > 0 && (f = "false" === c._financeConfig.enabled ? e.models[0].ctasJson.filter(function(a) {
                    return -1 === a.url.indexOf("financecalculator")
                }) : e.models[0].ctasJson), c._comparisons[c._currentlyPopulating] = {
                    tableData: c._munge(e.models[0], c._currentEngine, c._currentlyPopulating),
                    links: f,
                    data: e.models[0],
                    selectedEngine: c._currentEngine
                }, c._getMaxKeyFeatures(), 0 === c._totalPopulated && a(".models-table, .Accordion.data-container").css("opacity", 0), setTimeout(function() {
                    c._getNextToPopulate(), c._populateComparisons(!0), setTimeout(function() {
                        c._calculateMobileWidth(), 1 === c._totalPopulated && a(".models-table, .Accordion.data-container").animate({
                            opacity: 1
                        }, 300), a(".body-selector").hide(), a(".select-block").removeClass("has-tabs"), a(".close-button").hide(), c.ui("accordion").height(0);
                        var d = 30;
                        b.innerWidth > c._mobileBreakpoint && (d = 90);
                        var e = a(".choose-vehicle-title").offset().top - d;
                        b.innerWidth > 640 && site.utils.scrollTo(e), c._setStep(4), c._toggleSpinner(!0)
                    }, 0)
                }, 0)
            })
        },
        _bindDerivativeSliderEvents: function() {
            var b = this;
            a(".derivatives-slider").on("click", ".select-option", function(c) {
                var d = b._data && Array.isArray(b._data.models[b._currentVehicle].typePowerTrain) && "battery" === b._data.models[b._currentVehicle].typePowerTrain[0].toLowerCase();
                b._currentDerivative = a(c.currentTarget).data("id"), b._currentSelectionTrackingData = {
                    event: "comparatorSelectSeries",
                    vehicle: {
                        nameplate: b._data.models[b._currentVehicle].modelName[0],
                        series: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].derivatives[b._currentDerivative].derivativeName[0],
                        bodystyle: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].bodyStyleName[0],
                        engine: null
                    }
                }, dataLayer.push(b._currentSelectionTrackingData), a(".derivatives-slider .selected").removeClass("selected"), a(c.currentTarget).addClass("selected"), b.ui("chooseDerivative").addClass("no-arrows faded"), a(".slider-container").height(b.ui("chooseEngine").outerHeight());
                var e = b._data.models[b._currentVehicle].modelName[0].trim().split(" "),
                    f = b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].derivatives[b._currentDerivative].derivativeName[0].trim().split(" ");
                b.ui("chooseEngine").html(b._templates.engineSelect({
                    derivative: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].derivatives[b._currentDerivative],
                    model: b._data.models[b._currentVehicle],
                    bodyStyle: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].bodyStyleName[0],
                    changeEngine: b._translations.headings.changeEngine,
                    selectEngine: d ? b._translations.headings["powertrainSelection.txt"] : b._translations.headings["selectEngine.txt"],
                    fromText: b._translations.headings.from,
                    co2: b._translations.co2,
                    combinedConsumption: b._translations.combinedConsumption,
                    title: b._createDerivativeTitle(e, f)
                })), b.ui("chooseEngine").waitForImages(function() {
                    a(".choose-engine .DropdownSelect").DropdownSelect(), b.ui("chooseEngine").addClass("shown"), b._setStep(3);
                    var c = b.ui("chooseEngine").outerHeight(),
                        d = b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].derivatives[b._currentDerivative].engines;
                    d.length > 2 && (c += 45 * (d.length - 2)), a(".slider-container").height(c)
                })
            })
        },
        _bindBodySelectorEvents: function() {
            var b = this;
            this.ui("bodySelector").on("click", "li", function(c) {
                a(c.currentTarget).parent().find(".active").removeClass("active"), a(c.currentTarget).addClass("active"), b._currentBodyStyle = a(c.currentTarget).data("id"), b._currentSelectionTrackingData = {
                    event: "comparatorSelectBodystyle",
                    vehicle: {
                        nameplate: b._data.models[b._currentVehicle].modelName[0],
                        series: null,
                        bodystyle: b._data.models[b._currentVehicle].bodyStyles[b._currentBodyStyle].bodyStyleName[0],
                        engine: null
                    }
                }, dataLayer.push(b._currentSelectionTrackingData), a(".derivatives-slider").css({
                    opacity: 0
                }).addClass("fast-transition"), setTimeout(function() {
                    b._populateSlider("derivative", b._getDerivatives()), setTimeout(function() {
                        a(".derivatives-slider").css({
                            opacity: 1
                        }), setTimeout(function() {
                            a(".derivatives-slider").removeClass("fast-transition")
                        }, 320)
                    }, 50)
                }, 300)
            })
        },
        _toggleSpinner: function(b) {
            if (4 === this._step) {
                this._updateSizes();
                var c = a(".accordion-group-title").has(".financesTitle").outerWidth();
                if (b) {
                    var d = a(".spinner");
                    d.css({
                        width: c
                    }), d.fadeIn(300), a(".accordion-group").has(".open").find(".table.finances").css("visibility", "hidden"), null === this._rID && (this._isLoaded = !1, this._rID = requestAnimationFrame(this._draw.bind(this)))
                } else a(".spinner").fadeOut(300), setTimeout(function() {
                    a(".accordion-group").has(".open").find(".table.finances").css("visibility", "visible")
                }, 300), this._isLoaded = !0, this._rID = null
            }
        },
        _bindRemoveButtonEvents: function() {
            var c = this;
            this.ui("vehiclesRow").on("click", ".remove", function(d) {
                var e = a(d.currentTarget).data("id");
                if (c._totalPopulated === c._enginesPopulated && (c._enginesPopulated -= 1), c._comparisons.splice(e, 1), c._comparisons.push(null), c._getMaxKeyFeatures(), c._getNextToPopulate(), c._populateComparisons(), c._resetSliders(), b.innerWidth <= c._mobileBreakpoint) {
                    var f = a(".models-table > div");
                    c._totalPopulated < 2 ? f.width("auto") : f.width(a(".Accordion").width() + 20)
                }
            })
        },
        _bindMobileAddButtonEvents: function() {
            a(".mobile-add-button").click(this._startNewSelection.bind(this))
        },
        _startNewSelection: function(b) {
            a(b.currentTarget).hasClass("disabled") || (this._setStep(1), this._step1(), a(".close-button").show(), this._closeDataBlock())
        },
        _bindAddNewEvents: function() {
            this.ui("vehiclesRow").on("click", ".empty", this._startNewSelection.bind(this))
        },
        _bindBackToVehiclesEvents: function() {
            var b = this;
            this.ui("backToVehicles").click(function(c) {
                c.preventDefault(), a(".slider-container .selected").removeClass("selected"), a(".choose-derivative").css({
                    transform: "translateY(0px)"
                }), b._currentVehicle = 0, b._currentBodyStyle = 0, b._currentDerivative = 0, a(".slider-container").height(a(".choose-vehicle").outerHeight()), setTimeout(function() {
                    b.ui("bodySelector").hide(), a(".select-block").removeClass("has-tabs")
                }, 500)
            })
        },
        _setupEvents: function() {
            var b = this;
            this._bindDropdownEvents(), this._bindVehicleSliderEvents(), this._bindDerivativeSliderEvents(), this._bindBodySelectorEvents(), this._bindRemoveButtonEvents(), this._bindMobileAddButtonEvents(), this._bindAddNewEvents(), this._bindBackToVehiclesEvents(), a("#addRandomPCP").click(function() {
                b._randomPCPflag = !b._randomPCPflag, a("#addRandomPCP").text("Random PCP " + b._randomPCPflag.toString().toUpperCase())
            })
        },
        _populateBodyStyles: function() {
            this.ui("bodySelector").html(this._templates.bodystyle({
                data: this._data.models[this._currentVehicle].bodyStyles
            })), a(this.ui("bodySelector").find("li").get(0)).addClass("active")
        },
        _getNextToPopulate: function() {
            var b = this;
            this._totalPopulated = 0;
            var c = !1;
            a.each(this._comparisons, function(a, d) {
                null !== d || c ? null !== d && (b._totalPopulated += 1) : (b._currentlyPopulating = a, c = !0)
            }), a(".ComparisonTable").attr("data-total", this._totalPopulated)
        },
        _removeClassesFromSelectBlock: function() {
            a(".select-block").removeClass("choose-vehicle choose-derivative")
        },
        _createDerivativeTitle: function(b, c) {
            var d = b;
            return a.each(b, function(a, b) {
                c.length && (b.toUpperCase() === c[0].toUpperCase() ? c.splice(0, 1) : c[0].toUpperCase().startsWith(b.toUpperCase()) && d.splice(d.indexOf(b), 1))
            }), d.concat(c).join(" ")
        },
        _addLinkAccessibleText: function(a) {
            var b = this,
                c = a.data.modelName[0].trim().split(" "),
                d = a.data.bodyStyles[0].derivatives[0].derivativeName[0].trim().split(" ");
            return a.links.map(function(a) {
                return a.accessibleText = a.accessibleText ? a.accessibleText : b._createDerivativeTitle(c, d) + " " + a.text, a
            })
        },
        _setMobileButtonTranslation: function() {
            "" !== this._translations.headings["addVehicle.txt"] && this.ui("mobileAddVehicle").html(this._translations.headings["addVehicle.txt"])
        }
    };
    jQuery.createComponent("Compare", d)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            example: ".example"
        },
        _foo: "bar",
        _blue: "blar",
        init: function() {},
        publicMethod: function() {},
        _privateMethod: function() {},
        _destroy: function() {}
    };
    jQuery.createComponent("ComponentName", e)
}(jQuery, window, document),
function(a, b, c) {
    var d = {
        uiSelectors: {
            hideCursor: "a, button, .rsNavItem, .rsNav, .carouselPagination"
        },
        _$cursor: null,
        _cursorHeight: 0,
        _cursorWidth: 0,
        _$window: a(b),
        _supportsCursorAnimateRotate: !1,
        init: function() {
            var a = this;
            site.utils.isMobileDevice() === !1 && (this.recalculatePositionHalf(), this._initCursorAnimateRotate(), this.$element.on("mousemove", function(b) {
                return a._cursorMouseMove(b)
            }))
        },
        _checkSupport: function() {
            var a = c.createElement("x");
            return a.style.cssText = "pointer-events:auto", a.style.cursor = "none", "auto" === a.style.pointerEvents && "none" === a.style.cursor && !site.utils.isIe11()
        },
        _initCursorAnimateRotate: function() {
            var b = this._checkSupport();
            this._supportsCursorAnimateRotate = b, b ? (this.$element.addClass("CursorAnimateRotate"), this._$cursor = a('<div class="cursor"><div class="cursorIcon"></div></div>'), this.$element.append(this._$cursor), this._cursorHeight = this._$cursor.height(), this._cursorWidth = this._$cursor.width(), this._eventHandlers()) : this.$element.addClass("CursorNoAnimateNoRotate")
        },
        _eventHandlers: function() {
            var a = this;
            this.$element.on("mouseenter", function() {
                return a._cursorShow()
            }).on("mouseleave", function() {
                return a._cursorHide()
            }), this.ui("hideCursor").on("mouseenter", function() {
                return a._cursorHide()
            }).on("mouseleave", function() {
                return a._cursorShow()
            })
        },
        _cursorMouseMove: function(a) {
            var b = a.pageX - this._cursorWidth - 5,
                c = a.pageY - this._$window.scrollTop() - 86,
                d = "translate(" + b + "," + c + ");";
            a.pageX <= this._positionHalf ? this.$element.removeClass("cursorRight").addClass("cursorLeft") : this.$element.addClass("cursorRight").removeClass("cursorLeft"), this._supportsCursorAnimateRotate && this._$cursor.css({
                transform: d,
                "-webkit-transform": d,
                "-moz-transform": d,
                "-o-transform": d
            })
        },
        _cursorHide: function() {
            this._$cursor && this._$cursor.removeClass("isVisible")
        },
        _cursorShow: function() {
            this._$cursor && this._$cursor.addClass("isVisible")
        },
        recalculatePositionHalf: function() {
            this._pageWidth = a(b).width(), this._positionHalf = Math.ceil(this._pageWidth / 2)
        },
        refreshSelectors: function() {
            this.uiElements.hideCursor = a(this.uiSelectors.hideCursor, this.$element), this._eventHandlers()
        }
    };
    jQuery.createComponent("CursorAnimateRotate", d)
}(jQuery, window, document),
function(a, b, c, d, e) {
    "use strict";
    var f = {
        uiSelectors: {},
        carousel: null,
        resizeTimeout: null,
        _players: [],
        _player: null,
        _pauseTimeout: null,
        loaded: !1,
        _swiperInit: function(b) {
            1 === b.slides.length && a(".swiper-container .left, .swiper-container .right").hide()
        },
        _swiperSlideChange: function(b) {
            a(".video", this.$element).length > 0 && (site.utils.isMobileDevice() || this._player.pauseVideo())
        },
        _swiperSetSlide: function(b) {
            var c = b.activeIndex + 1,
                d = b.slides.length;
            a(".numbers").html('<span class="number">' + c + '</span><span class="divide">/</span><span class="number">' + d + "</span>")
        },
        getSwiper: function() {
            return this.mySwiper
        },
        destroy: function() {},
        _setupPlayer: function() {
            var c = a(".youtube-player")[0];
            this._player = new b.YT.Player(c, {
                videoId: a(c).data("vid"),
                playerVars: {
                    modestbranding: !0,
                    showinfo: 0,
                    controls: !1
                },
                events: {
                    onStateChange: function(b) {
                        0 === b.data ? (a(".cover-image").css({
                            display: "block"
                        }), a("iframe").css({
                            display: "none"
                        })) : 2 === b.data && site.utils.isMobileDevice() && (a(".cover-image").css({
                            display: "block"
                        }), a("iframe").css({
                            display: "none"
                        }))
                    }
                }
            })
        },
        init: function() {
            b.ytAPIloaded ? this._setupPlayer() : a.getScript("//www.youtube.com/iframe_api");
            var c = this;
            b.onYouTubeIframeAPIReady = function() {
                b.ytAPIloaded = !0, c._setupPlayer()
            }, a(".swiper-slide iframe").hide(), a(".cover-image").show(), b.richsponsiveImage(), site.utils.isMobileDevice() ? this.mySwiper = new b.Swiper(".swiper-container", {
                speed: 200,
                nextButton: ".swiper-container .right",
                prevButton: ".swiper-container .left",
                onSlideChangeStart: function(a) {
                    c._swiperSlideChange(a)
                },
                onInit: function(a) {
                    c._swiperInit(a)
                }
            }) : this.mySwiper = new b.Swiper(".swiper-container", {
                speed: 1e3,
                nextButton: ".swiper-container .right",
                prevButton: ".swiper-container .left",
                onSlideChangeStart: function(a) {
                    c._swiperSlideChange(a)
                },
                onInit: function(a) {
                    c._swiperInit(a)
                }
            }), a(".cover-image, .cover-image .play").click(function(d) {
                var e = a(".swiper-slide iframe").height(),
                    f = a(".swiper-slide iframe").width(),
                    g = e / f;
                if (b.innerWidth > 767) a(".swiper-slide iframe").css({
                    height: 750,
                    width: 750 / g
                });
                else {
                    var h, i = a(".swiper-slide").width() / 16,
                        j = a(".swiper-slide").height(),
                        k = 9 * i;
                    k > j ? (k = j, h = 0) : h = j - 9 * i, a(".swiper-slide iframe").css({
                        height: k,
                        width: a(".swiper-container").width(),
                        marginTop: h / 2
                    })
                }
                a(".cover-image").css({
                    display: "none"
                }), a("iframe").css({
                    display: "block"
                }), site.utils.isMobileDevice() || c._player.playVideo()
            })
        }
    };
    jQuery.createComponent("DefenderJourneyCarousel", f)
}(jQuery, window, document),
function(a, b, c, d, e) {
    "use strict";
    var f = {
        uiSelectors: {
            map: "#map",
            ajaxContainer: ".ajax-container",
            ajaxContainerContent: ".ajax-container .content",
            journeyContainer: ".journey-container",
            filterBar: "#filter-bar",
            locateButton: "#map-controls .locate",
            zoomInButton: "#map-controls .plus",
            zoomOutButton: "#map-controls .minus",
            featuredButton: "#filter-bar .featured",
            modeSwitchButton: ".mode-switch a",
            listView: "#list-view",
            terrainSelection: "#filter-bar .terrains",
            distanceSelection: "#filter-bar .distance",
            viewSelection: "#filter-bar .view",
            modelSelection: "#filter-bar .model",
            yearSelection: "#filter-bar .year",
            backToTopContainer: ".back-to-top",
            backToTop: ".back-to-top a",
            listContainer: "#list-view .list-container",
            listContainerNew: "#list-view .list-container.new",
            listContainerOld: "#list-view .list-container.old",
            mapDraggableButton: ".control.drag"
        },
        currentMode: "map",
        summaryImages: ["http://s28.postimg.org/ibt2mva25/DJ_placeholder_01.jpg", "http://s28.postimg.org/o2j90li25/DJ_placeholder_02.jpg", "http://s28.postimg.org/azs7v2h7x/DJ_placeholder_03.jpg", "http://s28.postimg.org/zdlwoyox9/DJ_placeholder_04.jpg", "http://s28.postimg.org/bqky0ujl9/DJ_placeholder_05.jpg", "http://s28.postimg.org/eqx73n5il/DJ_placeholder_06.jpg", "http://s28.postimg.org/qrn8i42b1/DJ_placeholder_07.jpg", "http://s28.postimg.org/9aj4n01il/DJ_placeholder_08.jpg", "http://s28.postimg.org/buerh3p2l/DJ_placeholder_09.jpg", "http://s28.postimg.org/89ivxvkj1/DJ_placeholder_10.jpg", "http://s28.postimg.org/qsx6bj44t/DJ_placeholder_11.jpg", "http://s28.postimg.org/qu744y5yl/DJ_placeholder_12.jpg", "http://s28.postimg.org/id7lu119p/DJ_placeholder_13.jpg", "http://s28.postimg.org/ly3hd95t9/DJ_placeholder_14.jpg", "http://s28.postimg.org/h0ui5vt7x/DJ_placeholder_15.jpg", "http://s28.postimg.org/jw7lcqx7x/DJ_placeholder_16.jpg", "http://s28.postimg.org/ytg2dragd/DJ_placeholder_17.jpg", "http://s28.postimg.org/wde8zwsdp/DJ_placeholder_18.jpg", "http://s28.postimg.org/q0z3q2pbh/DJ_placeholder_19.jpg", "http://s28.postimg.org/dnm9j5zn1/DJ_placeholder_20.jpg", "http://s28.postimg.org/vrpa3sxbh/DJ_placeholder_21.jpg", "http://s28.postimg.org/nnh5z2awd/DJ_placeholder_22.jpg", "http://s28.postimg.org/egyvbs5nx/DJ_placeholder_23.jpg", "http://s28.postimg.org/w8ahq8l2l/DJ_placeholder_24.jpg"],
        markers: [],
        geolocation: null,
        clusterer: null,
        infoBox: null,
        infoBoxes: [],
        data: {
            map: [],
            list: []
        },
        currentCarousel: null,
        apiURL: "http://defenderjourneys.landrover.dev.gotham.connect-group.com/api/journeys",
        mapStyles: [],
        filters: {
            map: {
                type: null,
                featured: "n",
                lngSW: null,
                latSW: null,
                lngNE: null,
                latNE: null,
                lang: "en",
                market: "us"
            },
            list: {
                type: null,
                featured: "n",
                lang: "en",
                market: "us",
                latNE: 89.57010579397294,
                latSW: -89.90535101833973,
                lngNE: 180.5,
                lngSW: -180.5,
                page: 1
            }
        },
        maxZoom: 1,
        translations: {
            "view-story": null,
            "view-moment": null,
            "back-to-map": null,
            "back-to-list": null,
            "api-url": null,
            "base-url": null,
            "there-are": null,
            journeys: null
        },
        mapDraggable: !0,
        checksums: [],
        hasAjaxed: !1,
        noResultsShown: !1,
        resultsTimeout: null,
        _setupZoom: function() {
            this.ui("zoomInButton").click(function() {
                null !== this.clusterer.getMaxZoom() && this.clusterer.setMaxZoom(null), this.map.setZoom(this.map.zoom + 1)
            }.bind(this)), this.ui("zoomOutButton").click(function() {
                null !== this.clusterer.getMaxZoom() && this.clusterer.setMaxZoom(null), this.map.zoom - 1 >= this.maxZoom && this.map.setZoom(this.map.zoom - 1)
            }.bind(this))
        },
        _getLocationSuccess: function(c, d) {
            var e = new google.maps.LatLng(c.coords.latitude, c.coords.longitude);
            this.map.panTo(e), new b.RichMarker({
                map: this.map,
                position: e,
                content: '<div class="richMarker created"><img src="/resources/public/images/DefenderJourneys/pin_green.png"></div>',
                flat: !0,
                zIndex: 1e3
            }), a(d).removeClass("locating")
        },
        _getLocationError: function(b, c) {
            a(b).removeClass("locating")
        },
        _doLocate: function(a) {
            navigator.geolocation.getCurrentPosition(function(b) {
                this._getLocationSuccess(b, a)
            }.bind(this), function(b) {
                this._getLocationError(a, b)
            }.bind(this))
        },
        _setupLocateButton: function() {
            this.ui("locateButton").click(function(b) {
                b.preventDefault(), a(b.target).addClass("locating"), this._doLocate(b.target)
            }.bind(this))
        },
        _setupClusterer: function() {
            this.clusterer = new b.MarkerClusterer(this.map, this.markers, {
                styles: [{
                    width: 36,
                    height: 36,
                    anchor: [18, 18],
                    url: "/resources/public/images/DefenderJourneys/cluster-marker.png",
                    textColor: "#ffffff"
                }],
                zoomOnClick: !1,
                ignoreHidden: !0
            }), google.maps.event.addListener(this.clusterer, "clusterclick", function(a) {
                var b = this.map.getZoom();
                if (b >= 14 || b >= 12 && site.utils.isBreakpointSmall()) {
                    this.clusterer.setMaxZoom(b - 1), a.updateIcon_();
                    var c = a.getMarkers();
                    if (this._setupMarkerSpread(), c) {
                        for (var d = 0, e = c.length; e > d; d++) this.oms.addMarker(c[d]), c[d].setOptions({
                            map: this.map,
                            visible: !0
                        });
                        this.map.panTo(a.getCenter()), this.oms.spiderListener(c[0])
                    }
                } else this.map.fitBounds(a.getBounds())
            }.bind(this))
        },
        _setupMarkerSpread: function() {
            this.oms && this.oms.clearMarkers(), this.oms = new OverlappingMarkerSpiderfier(this.map, {
                keepSpiderfied: !0,
                circleSpiralSwitchover: 1 / 0,
                legWeight: 0,
                nearbyDistance: 80,
                markersWontMove: !0
            }), this.oms.circleFootSeparation = 40, this.oms.addListener("unspiderfy", function(a) {
                this._closeInfoBox(), this.clusterer.setMaxZoom(null), this.clusterer.repaint()
            }.bind(this))
        },
        _markersInBounds: function() {
            var b = this.map.getBounds(),
                c = !1;
            return a.each(this.markers, function(a, d) {
                b.contains(d.getPosition()) && (c = !0)
            }), c
        },
        _toggleNoResults: function() {
            0 !== this.data.map.length || this._markersInBounds() ? (a(".no-results").removeClass("visible"), a("#map-controls").removeClass("has-no-results"), this.noResultsShown = !1) : (this.noResultsShown = !0, a(".no-results").addClass("visible"), a("#map-controls").addClass("has-no-results"), this._noResultsTimeout())
        },
        _noResultsTimeout: function() {
            clearTimeout(this.noResultsTimeout), this.noResultsTimeout = setTimeout(function() {
                this.noResultsShown && (a(".no-results").removeClass("visible"), a("#map-controls").removeClass("has-no-results"), this.noResultsShown = !1)
            }.bind(this), 2e3)
        },
        _renderMarkers: function() {
            this.checksums = [];
            var b = this;
            if (this._toggleNoResults(), 0 === this.markers.length) a.each(this.data.map, function(a, b) {
                var c = this._renderMarker(a, b);
                this.clusterer.addMarker(c), this.markers.push(c)
            }.bind(this));
            else {
                var c = [];
                a.each(this.markers, function(a, b) {
                    c.push(b.data.id)
                }), a.each(this.data.map, function(a, d) {
                    if (-1 === c.indexOf(d.id)) {
                        var e = b._renderMarker(a, d);
                        this.markers.push(e), this.clusterer.addMarker(e)
                    }
                }.bind(this))
            }
        },
        _waitForImages: function(b, c) {
            var d = b.find("img"),
                e = d.length,
                f = 0;
            0 === e ? c() : a.each(d, function(b, d) {
                a(d).load(function() {
                    f++, f === e && c()
                })
            })
        },
        _closeInfoBox: function() {
            "undefined" != typeof this.infoBoxes[0] && (a(this.infoBoxes[0].div_).addClass("closing"), setTimeout(function() {
                "undefined" != typeof this.infoBoxes[0] && (this.infoBoxes[0].close(), this.infoBoxes = [])
            }.bind(this), 150))
        },
        _closeInfoBoxOnMove: function() {
            google.maps.event.addListenerOnce(this.map, "bounds_changed", function() {
                this._closeInfoBox()
            }.bind(this))
        },
        _openInfoBox: function(b, c) {
            b.open(this.map, c), this.infoBoxes = [], this.infoBoxes.push(b), setTimeout(function() {
                this._closeInfoBoxOnMove()
            }.bind(this), 250), setTimeout(function() {
                a(".map .journey-card .route-view").click(function(b) {
                    b.preventDefault(), a(b.target).addClass("loading"), a(b.target).html(this.translations.loading), this._ajaxContent(a(b.target))
                }.bind(this)), a(".map .journey-card .close").click(function(a) {
                    a.preventDefault(), a.stopPropagation(), this._closeInfoBox()
                }.bind(this))
            }.bind(this), 0)
        },
        _bindMarkerEvents: function(c) {
            c.addListener("click", site.utils.throttle(function(c) {
                this._closeInfoBox(), this.map.panTo(c.getPosition()), b.innerWidth <= 330 ? this.map.panBy(0, -125) : this.map.panBy(0, -200), google.maps.event.addListenerOnce(this.map, "idle", function() {
                    var b = this._createInfoBox(c.data);
                    this._waitForImages(a(b.content_), function() {
                        this._openInfoBox(b, c)
                    }.bind(this))
                }.bind(this))
            }.bind(this, c), 250, this))
        },
        _createInfoBox: function(a) {
            var c = this._generateStoryCard(a),
                d = "350px",
                e = new google.maps.Size(-175, -37),
                f = new google.maps.Size(10, 10);
            return b.innerWidth <= 500 && (d = "300px", e = new google.maps.Size(-150, -37)), b.innerWidth <= 330 && (d = "200px", e = new google.maps.Size(-100, -37)), b.innerWidth >= 330 && b.innerWidth <= 375 && (f = !1), new this.infoBox({
                content: c,
                boxStyle: {
                    backgroundColor: "transparent",
                    width: d
                },
                alignBottom: !0,
                pixelOffset: e,
                infoBoxClearance: f
            })
        },
        _generateMarker: function(a) {
            var c = "pin_black.png";
            return a.data.curatedJourney && (c = "pin_white_star.png"), new b.RichMarker({
                map: this.map,
                position: a.position,
                data: a.data,
                content: '<div class="richMarker created"><img src="/resources/public/images/DefenderJourneys/' + c + '"></div>',
                anchor: a.anchor,
                flat: !0
            })
        },
        _renderMarker: function(a, b) {
            var c, d = b.start.coordinates[0] + "" + b.start.coordinates[1];
            if (c = {
                    lat: b.start.coordinates[0],
                    lng: b.start.coordinates[1]
                }, "number" == typeof this.checksums[d]) {
                this.checksums[d]++;
                this.checksums[d]
            } else this.checksums[c.lat + "" + c.lng] = 0;
            var e = {
                    position: new google.maps.LatLng(c.lat, c.lng),
                    data: b,
                    anchor: new google.maps.Size(-19, -45)
                },
                f = this._generateMarker(e);
            return this._bindMarkerEvents(f), f
        },
        _scrollToMap: function() {
            var c = 900;
            if (!this.scrolling) {
                this.scrolling = !0;
                var d = 0;
                d = b.innerWidth <= c ? a(".DefenderJourneyMap").offset().top - a("#header").height() : a(".DefenderJourneyMap").offset().top - 40, a("body, html").animate({
                    scrollTop: d
                }, 500, function() {
                    this.scrolling = !1
                }.bind(this))
            }
        },
        _showMap: function() {
            a(".journey-container").removeClass("show-map"), a(".on-list").hide(), a(".on-map").show();
            var c = 86;
            site.utils.isMobileDevice() && (c = 25), this.ui("journeyContainer").height(a(b).height() - c), setTimeout(function() {
                google.maps.event.trigger(this.map, "resize")
            }.bind(this), 1e3), this.ui("backToTop").html(this.translations["back-to-map"]), this._scrollToMap()
        },
        _showList: function() {
            var b = this.ui("journeyContainer");
            b.height(a(".list-container").height() + 235), b.addClass("show-map"), a(".on-list").show(), a(".on-map").hide(), this.ui("backToTop").html(this.translations["back-to-list"]), this._scrollToMap()
        },
        _setupModeSwitch: function() {
            this.ui("modeSwitchButton").click(function(b) {
                b.preventDefault(),
                    this.ui("modeSwitchButton").removeClass("active"), a(b.target).addClass("active"), a(b.target).hasClass("map") ? (this.currentMode = "map", this._showMap()) : (this.currentMode = "list", this._showList())
            }.bind(this))
        },
        _getTranslations: function() {
            this.translations = {
                "view-story": a("#translations .view-story").html(),
                "view-moment": a("#translations .view-moment").html(),
                "back-to-map": a("#translations .back-to-map").html(),
                "back-to-list": a("#translations .back-to-list").html(),
                "api-url": a("#translations .api-url").html(),
                "base-url": a("#translations .base-url").html(),
                "no-journeys-line1": a("#translations .no-journeys-line1").html(),
                "no-journeys-line2": a("#translations .no-journeys-line2").html(),
                "there-are": a("#translations .there-are").html(),
                journeys: a("#translations .journeys").html(),
                loading: a("#translations .loading").html()
            }, this.filters.map.market = a("#translations .base-market").html(), this.filters.map.lang = a("#translations .base-lang").html(), this.filters.list.market = a("#translations .base-market").html(), this.filters.list.lang = a("#translations .base-lang").html()
        },
        getTranslations: function() {
            return this.translations = {
                "view-story": a("#translations .view-story").html(),
                "view-moment": a("#translations .view-moment").html(),
                "back-to-map": a("#translations .back-to-map").html(),
                "back-to-list": a("#translations .back-to-list").html(),
                "api-url": a("#translations .api-url").html(),
                "base-url": a("#translations .base-url").html(),
                "no-journeys-line1": a("#translations .no-journeys-line1").html(),
                "no-journeys-line2": a("#translations .no-journeys-line2").html(),
                "there-are": a("#translations .there-are").html(),
                journeys: a("#translations .journeys").html(),
                loading: a("#translations .loading").html()
            }, this.filters.map.market = a("#translations .base-market").html(), this.filters.map.lang = a("#translations .base-lang").html(), this.filters.list.market = a("#translations .base-market").html(), this.filters.list.lang = a("#translations .base-lang").html(), {
                translations: this.translations,
                filters: this.filters
            }
        },
        _bindStickyNav: function() {
            this.ui("backToTop").html(this.translations["back-to-map"]), this.ui("backToTop").click(function(a) {
                a.preventDefault(), this._scrollToMap()
            }.bind(this)), a(".LessButton", ".SubNavigation").on("click tap", function() {
                var a = parseInt(this.ui("backToTopContainer").css("top"), 10);
                this.ui("backToTopContainer").transition({
                    top: a - 40 + "px",
                    duration: 400
                }, "ease", function() {
                    this.ui("backToTopContainer").css("top", a - 40)
                }.bind(this))
            }.bind(this)), a(".MoreButton", ".SubNavigation").on("click tap", function() {
                var a = parseInt(this.ui("backToTopContainer").css("top"), 10);
                this.ui("backToTopContainer").transition({
                    top: a + 40 + "px",
                    duration: 400
                }, "ease", function() {
                    this.ui("backToTopContainer").css("top", a + 40)
                }.bind(this))
            }.bind(this)), a(b).on("scroll", function(c) {
                var d = "#header.stickyNavigation";
                site.utils.isBreakpointMedium() && (d = "#header.withSubNavigation");
                var e = a(b).scrollTop() - (a("#filter-bar").offset().top - 90),
                    f = a(b).scrollTop() - (a("#map-view").offset().top + a("#map-view").height()) + 89,
                    g = a(b).scrollTop() - (this.ui("listView").offset().top + .5 * this.ui("listView").outerHeight());
                e >= 0 && 50 >= e ? a(d).css({
                    top: -e
                }) : 0 > e ? a(d).css({
                    top: 0
                }) : e > 50 && a(d).css({
                    top: -50
                }), a(".SubNavigation").length && "none" === a(".SubNavigation").css("display") && "fixed" === a("#header").css("position") ? this.ui("backToTopContainer").css({
                    top: 50
                }) : a(".SubNavigation").length && "fixed" === a("#header").css("position") ? this.ui("backToTopContainer").css({
                    top: "none" === a(".LessButton", ".SubNavigation").css("display") ? 40 : 80
                }) : site.utils.isBreakpointSmall() || site.utils.isBreakpointMedium() ? this.ui("backToTopContainer").css({
                    top: 50
                }) : this.ui("backToTopContainer").css({
                    top: 0
                }), this.hasAjaxed && (f >= 0 ? this.ui("backToTopContainer").hasClass("shown") || this.ui("backToTopContainer").addClass("shown") : this.ui("backToTopContainer").hasClass("shown") && this.ui("backToTopContainer").removeClass("shown")), site.utils.isBreakpointSmall() && "list" === this.currentMode && this.ui("listContainer").find(".journey-card").length > 4 && (g >= 0 ? this.ui("backToTopContainer").hasClass("shown") || this.ui("backToTopContainer").addClass("shown") : this.ui("backToTopContainer").hasClass("shown") && this.ui("backToTopContainer").removeClass("shown"))
            }.bind(this))
        },
        _setupListView: function() {
            this._createListView(1, !0), a("#list-view").on("click", "a", function(b) {
                b.preventDefault(), a(b.target).data("originalText", a(b.target).html()), a(b.target).addClass("loading"), a(b.target).html(this.translations.loading), this._ajaxContent(a(b.target))
            }.bind(this))
        },
        _bindResizeEvents: function() {
            b.addEventListener("resize", function() {
                a(".ajax-container").height(a(".ajax-container .content").height()), site.utils.isBreakpointSmall() && (a("#header").css("top", 0), this.ui("backToTopContainer").css({
                    top: 50
                }))
            }.bind(this))
        },
        _mapDraggableOn: function() {
            this.mapDraggable = !0, this.map.setOptions({
                draggable: !0
            }), this.ui("mapDraggableButton").addClass("active")
        },
        _mapDraggableOff: function() {
            this.mapDraggable = !1, this.map.setOptions({
                draggable: !1
            }), this.ui("mapDraggableButton").removeClass("active")
        },
        _zoomChanged: function() {
            this.map.getZoom() > 20 && this.map.setZoom(20), 20 === this.map.getZoom() ? this.clusterer.setGridSize(100) : this.map.getZoom() > 18 ? this.clusterer.setGridSize(60) : this.map.getZoom() > 12 ? this.clusterer.setGridSize(60) : this.map.getZoom() >= 4 && site.utils.isMobileDevice() ? this.clusterer.setGridSize(40) : this.clusterer.setGridSize(100)
        },
        _setupMap: function() {
            var c = this;
            b.loadRichMarker(), b.loadOverlappingMarkerSpiderfier(), this.infoBox = b.loadInfoBox(), this.map = this.ui("map").GoogleMap("getMapObject"), this.map.setOptions({
                styles: this.mapStyles
            }), this.map.setZoom(4), this.map.setCenter(new google.maps.LatLng(51.518829, -.107869)), this._setupClusterer(), this._setupFilterBar(), this._setupZoom(), this._setupListView(), site.utils.isMobileDevice() && (this._mapDraggableOff(), this.ui("mapDraggableButton").show(), this.mapDraggable = !1, this.ui("mapDraggableButton").on("tap click", function(b) {
                this.mapDraggable ? (a(b.target).removeClass("draggable"), this._mapDraggableOff()) : (a(b.target).addClass("draggable"), this._mapDraggableOn())
            }.bind(this))), this._setMapSize(), google.maps.event.addListenerOnce(this.map, "idle", function() {
                setTimeout(function() {
                    google.maps.event.trigger(this.map, "resize"), this._changeBounds(), google.maps.event.addListener(this.map, "bounds_changed", site.utils.throttle(function(a) {
                        c._changeBounds()
                    }, 200, this)), google.maps.event.addListener(this.map, "zoom_changed", function() {
                        this._zoomChanged()
                    }.bind(this)), this.map.addListener("mousedown", function() {
                        this.mapDraggable && (this._scrollToMap(), site.utils.isMobileDevice() && this._setMapSize())
                    }.bind(this))
                }.bind(this), 1e3)
            }.bind(this)), this._bindSameSizeCarouselEvents()
        },
        _bindSameSizeCarouselEvents: function() {
            var b = this;
            a(".SameSizeCarousel .linkContainer a").on("click", function(c) {
                c.preventDefault(), b._ajaxContent(a(this))
            })
        },
        _openMobileMenu: function(b) {
            a(b).data("open", !0), a("#filter-bar").animate({
                height: 180
            }, 500, function(b) {
                a("#filter-bar").height("auto")
            })
        },
        _closeMobileMenu: function(b) {
            a(b).data("open", !1), a("#filter-bar").animate({
                height: 45
            }, 500)
        },
        _setMapSize: function() {
            if ("map" === this.currentMode) {
                var c = this.ui("journeyContainer").height(),
                    d = a("#filter-bar").height(),
                    e = a(".SubNavigation").height(),
                    f = a("#header").height(),
                    g = 0;
                g = b.innerWidth <= 900 ? d + f : d + e;
                var h = b.innerHeight - g;
                c !== h && (this.ui("journeyContainer").height(b.innerHeight - g), setTimeout(function() {
                    google.maps.event.trigger(this.map, "resize")
                }, 1e3))
            } else a(".journey-container").height(a(".list-container").height() + 235)
        },
        init: function() {
            var c = this;
            this.mapStyles = site.utils.googleMapStyles, a(".mob-only").on("tap click", function(b) {
                a(this).data("open") ? (a(this).removeClass("open"), c._closeMobileMenu(this)) : (a(this).addClass("open"), c._openMobileMenu(this))
            }), this._getTranslations(), this._bindResizeEvents(), this._bindStickyNav(), a(b).on("resize", function() {
                this._setMapSize()
            }.bind(this)), this.ui("map").on("api:ready", function() {
                this._setupMap(), a(".HeroCarousel .primaryLinkWithStyle").click(function(a) {
                    a.preventDefault(), this._scrollToMap()
                }.bind(this)), 4.4 === site.utils.getAndroidVersion() && a("#filter-bar").css({
                    webkitBoxShadow: "none",
                    boxShadow: "none"
                })
            }.bind(this))
        },
        _changeBounds: function() {
            var a = this.map.getBounds(),
                b = a.getSouthWest(),
                c = a.getNorthEast();
            this.filters.map.latSW = b.lat(), this.filters.map.lngSW = b.lng(), this.filters.map.latNE = c.lat(), this.filters.map.lngNE = c.lng(), this._getData("map").then(function(a) {
                this.data.map = a.journeys, this._renderMarkers()
            }.bind(this))
        },
        _getData: function(b, c) {
            return "map" === b && this.map.getZoom() <= 3 && (this.filters[b].latSW = -89.90535101833973, this.filters[b].lngSW = -180.5, this.filters[b].latNE = 89.57010579397294, this.filters[b].lngNE = 180.5), a.ajax({
                url: this.translations["api-url"],
                data: this.filters[b],
                type: "GET"
            })
        },
        getData: function(b, c) {
            return a.ajax({
                url: this.translations["api-url"],
                data: this.filters[b],
                type: "GET"
            })
        },
        _featuredButtonMobileText: function() {
            this.ui("featuredButton").each(function(b, c) {
                var d = a(c).html().split(" "),
                    e = [];
                a(d).each(function(a, b) {
                    e.push("<span>" + b + "</span>")
                });
                var f = e.join(" ");
                a(c).html(f)
            })
        },
        _featuredButtonClick: function() {
            this.ui("featuredButton").click(function(b) {
                b.preventDefault();
                var c = a(b.currentTarget),
                    d = c.data("for");
                c.toggleClass("active"), c.hasClass("active") ? this.filters[d].featured = "y" : this.filters[d].featured = "n", "map" === d ? this._clearAllMarkers("map") : this._createListView(1, !1, !0)
            }.bind(this))
        },
        _setupFeaturedButton: function() {
            this._featuredButtonMobileText(), this._featuredButtonClick()
        },
        _openDropdown: function(b) {
            a(b).addClass("open"), a(b).data("open", !0), a(b).find("ul").css({
                height: a(b).data("height"),
                opacity: 1
            })
        },
        _closeDropdown: function(b) {
            a(b).removeClass("open"), a(b).data("open", !1), a(b).find("ul").css({
                height: 0,
                opacity: 0
            })
        },
        _dropdown: function(b) {
            var c = b.find(".chevron"),
                d = c.html(),
                e = b.data("attr"),
                f = b.data("for"),
                g = this;
            b.data("height", b.find("ul").height()), b.data("open", !1), b.find("ul").height(0), b.find(".chevron").click(function(a) {
                a.preventDefault(), a.stopPropagation(), b.data("open") ? g._closeDropdown(b) : g._openDropdown(b)
            }), b.find("a").click(function(h) {
                h.preventDefault(), h.stopPropagation(), g._closeDropdown(b), a(this).hasClass("active") ? (a(this).removeClass("active"), c.html(d), "distance" === e ? (g.filters[f].minDist = 0, g.filters[f].maxDist = 1e9) : g.filters[f][e] = null) : (b.find(".active").removeClass("active"), a(this).addClass("active"), c.html(a(this).html()), "distance" === e ? (g.filters[f].minDist = a(this).data("min"), g.filters[f].maxDist = a(this).data("max")) : g.filters[f][e] = a(this).data("value")), "map" === f ? g._clearAllMarkers("map") : g._createListView(1, !1, !0)
            }), b.on("mouseleave", function() {
                g._closeDropdown(b)
            })
        },
        _clearAllMarkers: function(b) {
            this._closeInfoBox(), this.clusterer.clearMarkers(), a.each(this.markers, function(a, b) {
                google.maps.event.clearListeners(b, "click"), b.setMap(null)
            }.bind(this)), this.markers = [], this._getData(b).then(function(a) {
                this.data.map = a.journeys, this._renderMarkers()
            }.bind(this))
        },
        _setupFilterBar: function() {
            this._dropdown(a(".terrains.on-map")), this._dropdown(a(".distance.on-map")), this._dropdown(a(".terrains.on-list")), this._dropdown(a(".distance.on-list")), a(".on-list").hide(), this._setupModeSwitch(), this._setupLocateButton(), this._setupFeaturedButton()
        },
        _generateStoryCard: function(b, c) {
            "undefined" == typeof c && (c = !1);
            var d, e = this.translations["base-url"] + b.id + ".html";
            d = b.curatedJourney ? "" : "hidden";
            var f, g;
            b.defenderMoment ? (f = "/resources/public/images/DefenderJourneys/moment-separator.png", g = this.translations["view-moment"]) : (f = "/resources/public/images/DefenderJourneys/journey-separator.png", g = this.translations["view-story"]);
            var h = '<div class="journey-card"><img src="/resources/public/images/DefenderJourneys/featured.svg" class="featured ' + d + '"/>';
            c || (h += '<div class="close"></div>');
            var i;
            if ("undefined" != typeof b.images && b.images.length > 0) {
                var j = b.images[0],
                    k = 1e4;
                a.each(b.images, function(a, b) {
                    1 === b.sort && b.width < k && (k = b.width, j = b)
                }), i = j.url
            } else i = this.summaryImages[this.rando(0, 23, 0)];
            return h += '<div class="summary-image" style="background: url(' + i + ') no-repeat center center; background-size: cover;" data-background="' + i + '"></div><div class="details"><p class="title">' + b.journeyName + '</p><p class="author">' + b.userDisplayName + '</p><div class="separator"><img src="' + f + '"/></div><a href="' + e + '" class="route-view" data-title="' + b.journeyName + '">' + g + "</a></div></div>"
        },
        _listViewPagination: function() {
            var b = "";
            return 0 === this.data.list.journeys.length ? (a(".pagination").hide(), b += '<li class="wide"><p>' + this.translations["no-journeys-line2"] + "</p></li>") : a(".pagination").show(), b
        },
        _createListView: function(b, c, d) {
            a(".list-container").addClass("loading"), this.filters.list.page = b, this._getData("list").then(function(b) {
                a(".journey-totals").html(this.translations["there-are"] + " " + b.journeyCount + " " + this.translations.journeys), this.data.list = b, (c || d) && this._createPagination();
                var e = a('<div class="list-container new"><ul class="list"></ul></div>'),
                    f = this._listViewPagination();
                a.each(this.data.list.journeys, function(a, b) {
                    f += "<li>" + this._generateStoryCard(b, !0) + "</li>"
                }.bind(this)), a(".list-container.loading").removeClass("loading"), a(e).find("ul").append(f), a("#list-view .pagination-container").before(e), this._waitForImages(a(".list-container.new"), function() {
                    this._listViewTransition(c)
                }.bind(this))
            }.bind(this))
        },
        _listViewTransition: function(b) {
            if (a(".list-container").each(function() {
                    a(this).hasClass("new") || a(this).addClass("old")
                }), !site.utils.isBreakpointSmall()) {
                var c = 0;
                a(".list-container.new .journey-card").each(function(b, d) {
                    a(d).height() > c && (c = a(d).height())
                }), a(".list-container.new .journey-card").height(c)
            }
            b || (a(".journey-container").height(a(".list-container.new").height() + 235), this._scrollToMap()), a(".list-container.new").removeClass("new"), setTimeout(function() {
                a(".list-container.old").remove()
            }, 1e3)
        },
        _createPagination: function() {
            var b = 6;
            this.pagination = a("#pagination").pagination({
                items: this.data.list.journeyCount,
                itemsOnPage: b,
                cssStyle: "light-theme",
                displayedPages: 4,
                prevText: null,
                nextText: null,
                ellipsePageSet: !1,
                onPageClick: function(a, b) {
                    b.preventDefault(), this._createListView(a)
                }.bind(this)
            })
        },
        _setAjaxContainerHeight: function() {
            setTimeout(function() {
                this.ui("ajaxContainer").height(this.ui("ajaxContainerContent").height()), a("body, html").animate({
                    scrollTop: a(".ajax-container").offset().top - 86
                }, 1e3, "swing")
            }.bind(this), 200)
        },
        _ajaxContent: function(c) {
            this.hasAjaxed = !0, a.get(a(c).attr("href") + "?ajax=true").success(function(d) {
                var e = a(d),
                    f = e.filter(".SameSizeCarousel"),
                    g = e.filter(":not(.SameSizeCarousel)");
                a(".SameSizeCarousel.defenderJourney").replaceWith(f), this.ui("ajaxContainerContent").html(g), a(".SameSizeCarousel.defenderJourney").SameSizeCarousel(), b.richsponsiveImage(), this._waitForImages(this.ui("ajaxContainerContent"), function() {
                    a(c).removeClass("loading"), a(c).data("originalText") && a(c).html(a(c).data("originalText")), a(".DefenderJourneyCarousel").DefenderJourneyCarousel(), a(".DefenderJourneyStoryMap").DefenderJourneyStoryMap({
                        ajax: !0
                    }), this.currentCarousel = a(".DefenderJourneyCarousel").DefenderJourneyCarousel("getSwiper"), a(".SameSizeCarousel").SameSizeCarousel(), this._bindSameSizeCarouselEvents(), this._setAjaxContainerHeight(), this._closeInfoBox()
                }.bind(this))
            }.bind(this)).error(function(a) {
                console.log(a)
            })
        },
        rando: function(a, b, c) {
            return 1 * (Math.random() * (b - a) + a).toFixed(c)
        },
        _performanceMonitor: function() {
            if (b.location.href.indexOf("localhost") > -1 || b.location.href.indexOf("davestest") > -1) {
                var a = c.createElement("script");
                a.onload = function() {
                    var a = new b.Stats;
                    a.domElement.style.cssText = "position:fixed;bottom:10px;left: 10px;z-index:10000", c.body.appendChild(a.domElement), b.requestAnimationFrame(function d() {
                        a.update(), b.requestAnimationFrame(d)
                    })
                }, a.src = "//rawgit.com/mrdoob/stats.js/master/build/stats.min.js", c.head.appendChild(a)
            }
        }
    };
    jQuery.createComponent("DefenderJourneyMap", f)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            exploreMore: ".explore-more"
        },
        _defaults: {
            ajax: !1
        },
        init: function() {
            if (!this.options.ajax) {
                var c = a("#header"),
                    d = this.ui("exploreMore"),
                    e = a(b);
                e.on("scroll", function() {
                    if (site.utils.isMobileDevice() && b.innerWidth < site.breakpoints.medium) e.scrollTop() > this.$element.offset().top - c.height() ? d.css({
                        position: "fixed",
                        top: c.height()
                    }) : d.css({
                        position: "absolute",
                        top: 0
                    });
                    else if (0 === e.scrollTop()) d.css({
                        position: "fixed",
                        top: parseInt(c.css("top"), 10) + c.height()
                    });
                    else {
                        var a = c.height() - e.scrollTop();
                        a > 0 ? d.css({
                            position: "fixed",
                            top: a
                        }) : d.css({
                            position: "fixed",
                            top: 0
                        })
                    }
                }.bind(this)), this.ui("exploreMore").show()
            }
        }
    };
    jQuery.createComponent("DefenderJourneyStoryDetail", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            map: ".map"
        },
        map: !1,
        mapStyles: [],
        maxZoom: 1,
        routeBounds: null,
        markers: [],
        init: function() {
            this.mapStyles = site.utils.googleMapStyles, "object" === ("undefined" == typeof google ? "undefined" : _typeof(google)) && "object" === _typeof(google.maps) ? this._setupMap() : this.ui("map").on("api:ready", function() {
                this._setupMap()
            }.bind(this))
        },
        _setupMap: function(a) {
            b.loadRichMarker(), this._setupControls(), this.map = this.ui("map").GoogleMap("getMapObject"), this.map.setOptions({
                styles: this.mapStyles
            }), this.path = new google.maps.MVCArray, this.map.setCenter(new google.maps.LatLng(-45, -45)), this.map.setZoom(1), this.line = new google.maps.Polyline({
                path: this.path,
                map: this.map,
                strokeColor: "#ffffff",
                strokeWeight: 5,
                strokeOpacity: 1
            }), this.thickerLine = new google.maps.Polyline({
                path: this.path,
                map: this.map,
                strokeColor: "#005a2b",
                strokeWeight: 3,
                strokeOpacity: 1
            }), site.utils.isMobileDevice() && this.map.setOptions({
                draggable: !1
            }), this._getRoute()
        },
        _setupControls: function() {
            a("#map-controls .plus").click(function(a) {
                a.preventDefault(), this.map.setZoom(this.map.getZoom() + 1)
            }.bind(this)), a("#map-controls .minus").click(function(a) {
                a.preventDefault(), this.map.getZoom() - 1 > this.maxZoom && this.map.setZoom(this.map.getZoom() - 1)
            }.bind(this)), a("#map-controls .recenter").click(function(a) {
                a.preventDefault(), this.map.fitBounds(this.routeBounds)
            }.bind(this))
        },
        _processLine: function(a) {
            a.forEach(function(a, b) {
                this.path.push(a)
            }.bind(this))
        },
        _drawMoment: function(a) {
            this._addMarker(a), this.map.setCenter(a), this.map.setZoom(10)
        },
        _drawRoute: function(a) {
            new google.maps.Polyline({
                path: this.path,
                map: this.map,
                strokeColor: "#ffffff",
                strokeWeight: 5
            }), new google.maps.Polyline({
                path: this.path,
                map: this.map,
                strokeColor: "#005a2b",
                strokeWeight: 3
            });
            for (var b = 0; b < a.length;) this._processLine(google.maps.geometry.encoding.decodePath(a[b].poly)), b++;
            this._addMarker(this.path.getAt(0)), this._addMarker(this.path.getAt(this.path.getLength() - 1)), this._fitToBounds()
        },
        _getRoute: function() {
            if (this.ui("map").data("latlng")) {
                var a = this.ui("map").data("latlng"),
                    b = new google.maps.LatLng(a[0], a[1]);
                this._drawMoment(b)
            } else if (this.ui("map").data("route")) {
                var c = this.ui("map").data("route");
                this._drawRoute(c)
            } else console.log("no map data?")
        },
        _addMarker: function(a) {
            var c = "pin_black.png",
                d = new b.RichMarker({
                    map: this.map,
                    position: a,
                    content: '<div class="richMarker created"><img src="/resources/public/images/DefenderJourneys/' + c + '"></div>',
                    anchor: new google.maps.Size(-19, -45),
                    flat: !0
                });
            return this.markers.push(d), d
        },
        _fitToBounds: function() {
            if (this.path.getLength() > 1) {
                var a = new google.maps.LatLngBounds;
                this.path.forEach(function(b, c) {
                    a.extend(b)
                }), this.routeBounds = a, this.map.fitBounds(a)
            } else this.map.setCenter(this.markers[0].position), this.map.setZoom(15)
        }
    };
    jQuery.createComponent("DefenderJourneyStoryMap", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            closeOnTapOutside: !1
        },
        _$toggleButton: null,
        _$dropdownList: null,
        _valueInTitle: !1,
        _height: 0,
        init: function() {
            var b = this;
            this._$toggleButton = a("> span", this.$element), this._$dropdownList = a("ul", this.$element), "undefined" != typeof this.$element.data("dropdownnav-close-on-tap-outside") && this.$element.data("dropdownnav-close-on-tap-outside") === !0 && (this.options.closeOnTapOutside = !0), "undefined" != typeof this.$element.data("dropdownnav-value-in-title") && (this._valueInTitle = !0), "undefined" != typeof this.$element.data("dropdownnav-stay-on-page") && (this._stayOnPage = !0), b._height = b._$dropdownList.height();
            var c = !1;
            if (b.$element.hasClass("active") ? (c = !0, b._$dropdownList.css({
                    opacity: 1,
                    height: "auto",
                    "overflow-y": "hidden",
                    display: "block"
                })) : b._$dropdownList.css({
                    opacity: 0,
                    height: 0,
                    "overflow-y": "hidden",
                    display: "none"
                }), this._valueInTitle === !0) {
                var d = a("li.active span", this._$dropdownList).html();
                "" !== d && a("span", this._$toggleButton).html(d)
            }
            this._stayOnPage === !0 && a("li a, li span", b._$dropdownList).on("click tap", function(c) {
                c.preventDefault(), b.changeSelected(a(this).parent()), b.$element.trigger("selected", a(this).parent())
            }), b.$element.Dropdown({
                timeout: 250,
                closeOnTapOutside: b.options.closeOnTapOutside,
                button: b._$toggleButton,
                buttonWithinMenu: !1,
                openByDefault: c,
                onOpen: function() {
                    setTimeout(function() {
                        if (!b.$element.hasClass("active")) {
                            b.$element.trigger("open").addClass("active animating");
                            var c = a(b.$element).clone().css({
                                position: "absolute",
                                visibility: "hidden",
                                height: "auto",
                                width: b.$element.width()
                            }).addClass("dropdownClone").appendTo(b.$element.parent());
                            a("ul", c).css({
                                opacity: 1,
                                height: "auto",
                                "overflow-y": "hidden"
                            }), b._height = a(".dropdownClone ul").height(), a(".dropdownClone").remove(), b._$dropdownList.show().transition({
                                opacity: 1,
                                height: b._height,
                                duration: 400,
                                easing: "ease"
                            }, function() {
                                b._$dropdownList.css({
                                    height: "auto"
                                }), b.$element.removeClass("animating").trigger("opened")
                            })
                        }
                    }, 50)
                },
                onClose: function() {
                    b.$element.hasClass("active") && (b.$element.hasClass("animating") || (b.$element.trigger("close").addClass("animating"), b._height = b._$dropdownList.height(), b._$dropdownList.css({
                        height: b._height
                    }).show().transition({
                        duration: 400,
                        easing: "ease",
                        height: 0,
                        opacity: 0
                    }, function() {
                        b.$element.removeClass("animating active"), b._$dropdownList.hide(), b.$element.trigger("closed")
                    })))
                }
            }), b._addKeyboardNavigation()
        },
        open: function() {
            this._$toggleButton.trigger("open")
        },
        changeSelected: function(b) {
            if (a("li.active", this._$dropdownList).removeClass("active"), b.addClass("active"), this._valueInTitle === !0) {
                var c = a("li.active span", this._$dropdownList).html();
                "" !== c && a("span", this._$toggleButton).html(c)
            }
            this._$toggleButton.trigger("close")
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = b.$element,
                d = b._$toggleButton,
                e = a("ul", b.$element);
            b._$toggleButton.attr("tabindex", "0"), d.keydown(function(a) {
                var b = c.hasClass("active");
                if (b) {
                    if (40 === a.keyCode) return e.find("li").not(":hidden").first().find("a").focus(), !1;
                    13 === a.keyCode && d.trigger("close")
                } else if (40 === a.keyCode || 13 === a.keyCode) {
                    d.trigger("open");
                    var f = e.find("li.active > a");
                    return f.focus(), !1
                }
            }), e.find("> li > a").keydown(function(b) {
                return 40 === b.keyCode ? (a(this).parent("li").nextAll("li").not(":hidden").first().find("a").focus(), !1) : 38 === b.keyCode ? (a(this).parent("li").prevAll("li").not(":hidden").first().find("a").focus(), !1) : void 0
            })
        },
        _destroy: function() {
            this.$element.removeAttr("style"), this.$element.off("open close", "**"), a("ul a", this.$element).unbind("keydown").off("click tap"), a.removeData(this._$toggleButton), a.removeData(this.$element)
        }
    };
    jQuery.createComponent("DropdownNav", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        _selectNode: null,
        _dropdownWrapperElement: null,
        _dropdownSelectedElement: null,
        _dropdownListElement: null,
        _hasFlag: !1,
        init: function() {
            this._selectNode = this.$element, this._createComponentElements(), this._populateElementsData(), this._assignSelectEvents(), this._assignListItemEvents(), this._addKeyboardNavigation()
        },
        _createComponentElements: function() {
            var b = this;
            this.$element.on("setFlag", function(a, b, c) {
                this._setFlag(b, c)
            }.bind(this));
            var c = a.grep(b._selectNode.attr("class").split(" "), function(a, b) {
                    return 0 === a.indexOf("DropdownSelectTheme")
                }).join(),
                d = a.grep(b._selectNode.attr("class").split(" "), function(a, b) {
                    return 0 === a.indexOf("DropdownSelectDirection")
                }).join();
            b._selectNode.removeClass("DropdownSelect"), b._selectNode.removeClass(c), b._dropdownWrapperElement = b._selectNode.wrap("<div class='DropdownSelect " + c + " " + d + "'></div>").parent(), b._dropdownWrapperElement.append('<span class="selected" tabindex="0"><span>SELECTED</span></span>'), b._dropdownWrapperElement.append("<ul></ul>"), b._dropdownSelectedElement = a("span.selected", b._dropdownWrapperElement), b._dropdownListElement = a("ul", b._dropdownWrapperElement), site.utils.isIe11() && b._selectNode.hasClass("DropdownSelectNoClickOffInIe11") || b._dropdownWrapperElement.append('<div class="clickOff"></div>'), b._selectNode.hasClass("flagSelect") && (b._selectNode.removeClass("flagSelect"), b._dropdownWrapperElement.addClass("flagSelect"), b._hasFlag = !0)
        },
        _populateElementsData: function() {
            var b = this,
                c = a("option", b._selectNode);
            b._selectNode.attr("disabled") !== d ? b._dropdownWrapperElement.addClass("disabled") : b._dropdownWrapperElement.removeClass("disabled");
            var e = a("option:selected", b._selectNode),
                f = e.attr("data-flag-img"),
                g = b._hasFlag && "undefined" != typeof f ? '<div class="flag ' + f + '"></div><span class="hasFlag">' + e.first().text() + "</span>" : "<span>" + e.first().text() + "</span>";
            b._dropdownSelectedElement.html(g), b._dropdownSelectedElement.attr("data-val", e.first().val()), b._dropdownListElement.children().remove();
            for (var h = 0; h < c.length; h++) {
                var i = a(c[h]),
                    j = i.val(),
                    k = i.text(),
                    l = i.attr("disabled"),
                    m = i.attr("data-flag-img");
                if ("undefined" == typeof l) {
                    var n = b._hasFlag ? '<li data-val="' + j + '" tabindex="0"><span class="hasFlag">' + k + '</span><div class="flag ' + m + '"></div></li>' : '<li data-val="' + j + '" tabindex="0"><span>' + k + "</span></li>";
                    b._dropdownListElement.append(n)
                }
            }
            b._highlightSelected()
        },
        _highlightSelected: function() {
            this._dropdownListElement.children().removeClass("active"), this._dropdownListElement.find('li[data-val="' + this.$element.val() + '"]').addClass("active")
        },
        _emitChangeEvent: function() {
            this.$element.trigger("DropdownSelect:change")
        },
        _assignSelectEvents: function() {
            var b = this;
            b._dropdownSelectedElement.on("click tap", function(a) {
                b._dropdownWrapperElement.hasClass("disabled") || (b._dropdownWrapperElement.hasClass("open") ? (b._dropdownWrapperElement.removeClass("open"), b._dropdownSelectedElement.trigger("blur")) : (b._dropdownWrapperElement.addClass("open"), b._dropdownListElement.scrollTop(0)), b._emitChangeEvent())
            }), b._addSpaceClick(b._dropdownSelectedElement), b._selectNode.on("update", function() {
                b._populateElementsData(), b._assignListItemEvents()
            }), b._selectNode.on("change", function() {
                b._processSelectEvent()
            }), a(".clickOff", b._dropdownWrapperElement).on("click tap", function() {
                b._dropdownWrapperElement.removeClass("open"), b._emitChangeEvent()
            }), b._dropdownListElement.on("DOMMouseScroll mousewheel", function(b) {
                var c = a(this),
                    d = this.scrollTop,
                    e = this.scrollHeight,
                    f = c.height(),
                    g = b.originalEvent.wheelDelta,
                    h = g > 0,
                    i = function() {
                        return b.stopPropagation(), b.preventDefault(), b.returnValue = !1, !1
                    };
                return !h && -g > e - f - d ? (c.scrollTop(e), i()) : h && g > d ? (c.scrollTop(0), i()) : void 0
            })
        },
        _assignListItemEvents: function() {
            var b = this;
            a("li", b._dropdownListElement).off("click tap").on("click tap", function(c) {
                var d = a(this).attr("data-val");
                b._selectNode.val(d).change()
            }), b._addSpaceClick(a("li", b._dropdownListElement))
        },
        _addSpaceClick: function(b) {
            b.keydown(function(b) {
                32 === b.keyCode && (b.preventDefault(), a(this).click())
            })
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = b._dropdownWrapperElement,
                d = b._dropdownSelectedElement,
                e = b._dropdownListElement,
                f = b._selectNode;
            d.keydown(function(b) {
                var g = e.find("li"),
                    h = f.val();
                h = h ? h.toString() : h;
                var i = g.filter(function() {
                        return a(this).data("val").toString() === h
                    }),
                    j = c.hasClass("open");
                if (40 === b.keyCode) {
                    if (j) g.first().focus();
                    else {
                        var k = null;
                        if (k = i.length > 0 ? i.next("li") : g.first(), k.length > 0) {
                            var l = k.data("val");
                            f.val(l).change(), d.html("<span>" + a("option:selected", f).text() + "</span>")
                        }
                    }
                    return !1
                }
                if (38 === b.keyCode) {
                    if (j === !1) {
                        var m = null;
                        if (i.length > 0 && (m = i.prev("li"), m.length > 0)) {
                            var n = m.data("val");
                            f.val(n).change(), d.html("<span>" + a("option:selected", f).text() + "</span>")
                        }
                    }
                    return !1
                }
                13 === b.keyCode && (c.toggleClass("open"), i.focus())
            }), a(e).on("keydown", "li", function(c) {
                if (40 === c.keyCode) return a(this).next("li").focus(), !1;
                if (38 === c.keyCode) return a(this).prev("li").focus(), !1;
                if (13 === c.keyCode) {
                    var d = a(this).data("val");
                    f.val(d).change(), b._processSelectEvent()
                }
            })
        },
        _processSelectEvent: function() {
            var b = this,
                c = a("option:selected", b._selectNode),
                d = c.attr("data-flag-img"),
                e = b._hasFlag && "undefined" != typeof d ? '<div class="flag ' + d + '"></div><span class="hasFlag">' + c.first().text() + "</span>" : "<span>" + c.first().text() + "</span>";
            b._dropdownSelectedElement.html(e), b._dropdownSelectedElement.attr("data-val", c.val()), b._dropdownWrapperElement.removeClass("open"), b._emitChangeEvent()
        },
        _setFlag: function(a, b) {
            var c = this._hasFlag && "undefined" != typeof a ? '<div class="flag ' + a + '"></div><span class="hasFlag">' + b + "</span>" : "<span>" + b + "</span>";
            this._dropdownSelectedElement.html(c)
        }
    };
    jQuery.createComponent("DropdownSelect", e)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _breakpoints: {
            medium: 900,
            small: 740
        },
        _slider: null,
        _mode: null,
        _dragging: !1,
        _slidePosition: !1,
        _windowWidth: 0,
        _windowHeight: 0,
        _previousSlideHeight: 0,
        _direction: "slideFromRight",
        _breakpointTabletLandscape: 1024,
        _breakpointTabletLandscapeActive: !1,
        init_rtl: function() {
            this._direction = "slideFromLeft"
        },
        init: function() {
            a(".royalSlider > div", this.element).length > 1 ? this._initSlider() : (this.$element.addClass("singleSlide"), a(".royalSlider", this.element).wrapInner('<div class="overflow"><div class="rsContainer"><div class="rsSlide"></div></div></div>'), a(".carouselNavigation", this.element).remove(), b.richsponsiveImage()), a(".TargetLinks", this.$element).each(function(b, c) {
                "video" === a(c).attr("data-type") && a(c).append('<div class="playButton"></div>')
            });
            var c = a(".carouselNavigation > div a.prev", this.element);
            c.on("click.dfc tap", {
                that: this
            }, this._onPrev);
            var d = a(".carouselNavigation > div a.next", this.element);
            d.on("click.dfc tap", {
                that: this
            }, this._onNext), this._initEnquire(), a(b).on("resize", {
                that: this
            }, this._onResize), a(b).trigger("resize"), a(this.element).css({
                visibility: "visible",
                display: "block"
            })
        },
        _initSlider: function() {
            var c = this,
                d = 0;
            "slideFromLeft" === this._direction && (d = a(".royalSlider > div", this.$element).length - 1);
            var e = a(".royalSlider", this.$element).royalSlider({
                arrowsNav: !1,
                controlNavigation: "none",
                loop: !0,
                startSlideId: d,
                keyboardNavEnabled: !1,
                navigateByClick: !1,
                controlsInside: !1,
                imageScaleMode: "none",
                arrowsNavAutoHide: !1,
                thumbsFitInViewport: !1,
                numImagesToPreload: 100,
                slidesSpacing: 0
            });
            this._slider = e.data("royalSlider");
            var f = this._slider;
            a(".rsOverflow", e).width("100%"), setTimeout(function() {
                b.richsponsiveImage()
            }, 50), setTimeout(function() {
                b.richsponsiveImage()
            }, 500), f.ev.on("rsBeforeAnimStart", {
                that: this
            }, this._updatePagination), f.ev.on("rsDragStart", {
                that: this
            }, this._onDragStart), f.ev.on("rsDragRelease", {
                that: this
            }, this._onDragStop), f.ev.on("rsAfterSlideChange", function() {
                b.richsponsiveImage(), c._onResize(), c._updateSlideContent()
            }), this._updatePagination(), this._addKeyboardNavigation()
        },
        _onDragStart: function(b) {
            var c = b ? b.data.that : this,
                d = a(".royalSlider", c.$element);
            a(".rsSlide", d).show(), c._slidePosition = a(".rsContainer", c.$element).position().left
        },
        _onDragStop: function(b) {
            var c = b ? b.data.that : this,
                d = c._slidePosition,
                e = a(".rsContainer", c.$element).position().left;
            d === e ? this._dragging = !1 : this._dragging = !0
        },
        getDragging: function() {
            return this._dragging
        },
        _initEnquire: function() {
            var a = this;
            enquire.register("screen and (min-width: " + this._breakpoints.medium + "px)", {
                match: function() {
                    a._convert("large")
                }
            }), enquire.register("screen and (min-width: " + (this._breakpoints.medium + 1) + "px) and (max-width: " + this._breakpointTabletLandscape + "px)", {
                match: function() {
                    a._breakpointTabletLandscapeActive = !0
                },
                unmatch: function() {
                    a._breakpointTabletLandscapeActive = !1
                }
            }), enquire.register("screen and (min-width: " + (this._breakpoints.small + 1) + "px) and (max-width: " + (this._breakpoints.medium - 1) + "px)", {
                match: function() {
                    a._convert("medium")
                }
            }), enquire.register("screen and (max-width: " + this._breakpoints.small + "px)", {
                match: function() {
                    a._convert("small")
                }
            })
        },
        _convert: function(b) {
            this._mode = b;
            var c = a(".carouselNavigation", this.element),
                d = a(".royalSlider", this.element),
                e = a(".rsSlide .left", d),
                f = a(".rsSlide .right", d),
                g = a(".left > div > div > div", d);
            "large" === b && (c.removeAttr("style"),
                e.removeAttr("style"), g.removeAttr("style"), a(".top", f).removeAttr("style"))
        },
        _onResize: function(c) {
            function d() {
                m.each(function(b, c) {
                    var d = a(c).height();
                    d > r && (r = d)
                })
            }
            var e = c ? c.data.that : this,
                f = a(b).width(),
                g = a(b).height();
            if (f !== e._windowWidth || g !== e._windowHeight || "large" !== e._mode) {
                e._windowWidth = f, e._windowHeight = g;
                var h = a(".carouselNavigation", e.element),
                    i = h.height(),
                    j = a(".royalSlider", e.element),
                    k = a(".left", j),
                    l = a(".right", j),
                    m = a("> div > div > div", k),
                    n = a("> .title", l),
                    o = e._mode,
                    p = .5625,
                    q = 0,
                    r = 0,
                    s = a('head [name="accordionOnMobile"]').length > 0,
                    t = 0,
                    u = j.data("royalSlider");
                if (u) {
                    var v = u.currSlide.content;
                    t = a(".right .title", v).length
                }
                if ("medium" === o || "small" === o) {
                    var w = f * p;
                    a(".top", j).height(w);
                    var x = w;
                    if ("small" === e._mode) s || (1 === t && (x += n.outerHeight()), a(".heading", l).equalHeights()), m.removeAttr("style");
                    else {
                        var y = 500,
                            z = a("html").width(),
                            A = 2 * parseInt(k.css("padding-left"), 10),
                            B = (z - A - y) / 2;
                        m.css("padding", "0 " + B + "px")
                    }
                    d();
                    var C = e.$element.hasClass("singleSlide");
                    r += C ? "small" === e._mode ? 150 : 135 : "small" === e._mode ? 30 : 95, h.css("top", x), q = x + i + r
                } else {
                    d(), r += 264;
                    var D = e._calculateHeaderSize(e.$element.offset().top),
                        E = g - D,
                        F = f / 1.45;
                    E = F > E ? E : F, e._breakpointTabletLandscapeActive && (r -= 35), q = k.height();
                    var G = f / g;
                    G > 2.3 ? (a(".bottomLeft", j).hide(), a(".bottomRight", j).hide(), a(".triple .top", j).css("height", "100%")) : (a(".bottomLeft", j).show(), a(".bottomRight", j).show(), a(".triple .top", j).removeAttr("style")), f > 1 && (q = r > E ? r : E)
                }
                a(".rsOverflow", j).height(q), j.height(q), e._slider || a(".overflow", j).height(q), e._previousSlideHeight = q
            }
        },
        _calculateHeaderSize: function(b) {
            var c = void 0,
                d = a(".dxnav-header"),
                e = a(".InPageNavigation");
            if (c = site.utils.getStickyNavHeight(b), d.length > 0 && e.length <= 0) {
                var f = d.hasClass("dxnav-hasBreadcrumbs");
                f && b > site.stickyNavigationTransitionPoint && (c = 44)
            }
            return c
        },
        _onPrev: function(a) {
            a.preventDefault();
            var b = a.data.that;
            b._slider.prev(), b._updateSlideContent()
        },
        _onNext: function(a) {
            a.preventDefault();
            var b = a.data.that;
            b._slider.next(), b._updateSlideContent()
        },
        _updatePagination: function(b) {
            var c = b ? b.data.that : this,
                d = c._slider,
                e = d.currSlideId + 1;
            "slideFromLeft" === c._direction && (e = d.numSlides - e + 1), a(".numbers", c.$element).html('<span class="number">' + e + '</span><span class="divide">/</span><span class="number"> ' + d.numSlides + "</span>"), a(".TargetLinks", c.$element).TargetLinks("setupListener")
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = this._slider,
                d = a(".royalSlider", this.$element),
                e = a(".carouselNavigation", this.$element);
            d.attr("tabindex", "0"), d.keydown(function(a) {
                39 === a.keyCode ? (c.next(), d.focus(), b._updateSlideContent()) : 37 === a.keyCode && (c.prev(), d.focus(), b._updateSlideContent())
            }), e.find("a").keydown(function(c) {
                39 === c.keyCode ? a(".next", b.$element).focus() : 37 === c.keyCode && a(".prev", b.$element).focus()
            }), this._updateSlideContent()
        },
        _updateSlideContent: function() {
            var b = this._slider,
                c = a(".royalSlider", this.$element),
                d = a(".rsSlide > div", this.$element),
                e = b.currSlide.content;
            a("a", d).attr("tabindex", "-1"), a("a", e).attr("tabindex", ""), a(".rsSlide", c).show(), void 0 !== this.hideSlidesTimeout && clearTimeout(this.hideSlidesTimeout), this.hideSlidesTimeout = setTimeout(function() {
                a(".rsSlide", c).hide(), a(b.currSlide.content).closest(".rsSlide").show()
            }, 600), a(".ResponsiveLink").ResponsiveLink(), a(".headingLinear", e).Headings("linearLines"), "large" === this._mode && this._convert(this._mode)
        }
    };
    jQuery.createComponent("DualFrameCarousel", c)
}(jQuery, window),
function(a, b) {
    var c = {
        _breakpoints: {
            medium: 901,
            small: 740
        },
        _slider: null,
        _sliderClone: null,
        _mode: null,
        _dragging: !1,
        _slidePosition: !1,
        _windowWidth: 0,
        _windowHeight: 0,
        _previousSlideHeight: 0,
        _direction: "slideFromRight",
        _breakpointTabletLandscape: 1024,
        _breakpointTabletLandscapeActive: !1,
        init_rtl: function() {
            this._direction = "slideFromLeft"
        },
        init: function() {
            this._initSlideClone(), a(".royalSlider > div", this.element).length > 1 ? this._initSlider() : (this.$element.addClass("singleSlide"), a(".royalSlider", this.element).wrapInner('<div class="overflow"><div class="rsContainer"><div class="rsSlide"></div></div></div>'), a(".carouselNavigation", this.element).remove(), b.richsponsiveImage()), a(".TargetLinks", this.$element).each(function(b, c) {
                "video" === a(c).attr("data-type") && a(c).append('<div class="playButton"></div>')
            });
            var c = a(".carouselNavigation > div a.prev", this.element);
            c.on("click.dfc tap", {
                that: this
            }, this._onPrev);
            var d = a(".carouselNavigation > div a.next", this.element);
            d.on("click.dfc tap", {
                that: this
            }, this._onNext), this._initEnquire(), a(this.element).css({
                visibility: "visible",
                display: "block"
            }), a(b).on("resize", {
                that: this
            }, this._onResize), setTimeout(function() {
                a(b).trigger("resize")
            }, 100)
        },
        _initSlider: function() {
            var c = this,
                d = 0;
            "slideFromLeft" === this._direction && (d = a(".royalSlider > div", this.$element).length - 1);
            var e = a(".royalSlider", this.$element).royalSlider({
                arrowsNav: !1,
                controlNavigation: "none",
                loop: !0,
                startSlideId: d,
                keyboardNavEnabled: !1,
                navigateByClick: !1,
                controlsInside: !1,
                imageScaleMode: "none",
                arrowsNavAutoHide: !1,
                thumbsFitInViewport: !1,
                numImagesToPreload: 100,
                slidesSpacing: 0
            });
            this._slider = e.data("royalSlider");
            var f = this._slider;
            a(".rsOverflow", e).width("100%"), setTimeout(function() {
                b.richsponsiveImage()
            }, 50), setTimeout(function() {
                b.richsponsiveImage()
            }, 500), f.ev.on("rsBeforeAnimStart", {
                that: this
            }, this._updatePagination), f.ev.on("rsDragStart", {
                that: this
            }, this._onDragStart), f.ev.on("rsDragRelease", {
                that: this
            }, this._onDragStop), f.ev.on("rsAfterSlideChange", function() {
                b.richsponsiveImage(), c._onResize(), c._updateSlideContent()
            }), this._updatePagination(), this._addKeyboardNavigation()
        },
        _initSlideClone: function() {
            var b = a("<div/>");
            b.attr("class", this.$element.attr("class")), b.addClass("carouselSizer"), a("body").append(b), a.each(this.$element.find(".Slider__left"), function(c, d) {
                var e = a('<div class="Slider__left left" />');
                b.append(e), e.html(a(d).html())
            }), this._sliderClone = b
        },
        _onDragStart: function(b) {
            var c = b ? b.data.that : this;
            c._slidePosition = a(".rsContainer", c.$element).position().left
        },
        _onDragStop: function(b) {
            var c = b ? b.data.that : this,
                d = c._slidePosition,
                e = a(".rsContainer", c.$element).position().left;
            d === e ? c._dragging = !1 : c._dragging = !0
        },
        getDragging: function() {
            return this._dragging
        },
        _initEnquire: function() {
            this._convert()
        },
        _convert: function() {
            var b = this;
            enquire.register("screen and (min-width: " + this._breakpoints.medium + "px)", {
                match: function() {
                    b._mode = "large"
                }
            }), enquire.register("screen and (min-width: " + (this._breakpoints.small + 1) + "px) and (max-width: " + (this._breakpoints.medium - 1) + "px)", {
                match: function() {
                    b._mode = "medium"
                }
            }), enquire.register("screen and (max-width: " + this._breakpoints.small + "px)", {
                match: function() {
                    b._mode = "small"
                }
            });
            var c = a(".carouselNavigation", this.element),
                d = a(".royalSlider", this.element),
                e = a(".rsSlide .left", d),
                f = a(".rsSlide .right", d),
                g = a(".left > div > div > div", d);
            "large" === this._mode && (c.removeAttr("style"), e.removeAttr("style"), g.removeAttr("style"), a(".top", f).removeAttr("style"))
        },
        _onResize: function(c) {
            function d(b) {
                null !== b && null !== e._sliderClone ? e._sliderClone.find(".Slider__left").each(function(b, c) {
                    var d = a(c).outerHeight();
                    q = d > q ? d : q
                }) : q = j.outerHeight()
            }
            var e = c ? c.data.that : this,
                f = a(b).width(),
                g = a(b).height();
            if (e._convert(), f !== e._windowWidth || g !== e._windowHeight || "large" !== e._mode) {
                e._windowWidth = f, e._windowHeight = g;
                var h = a(".carouselNavigation", e.element),
                    i = a(".royalSlider", e.element),
                    j = a(".left", i),
                    k = a(".right", i),
                    l = a("> div > div > div", j),
                    m = a("> .title", k),
                    n = e._mode,
                    o = .5625,
                    p = 0,
                    q = 0,
                    r = a('head [name="accordionOnMobile"]').length > 0,
                    s = i.parent().find(".carouselNavigation").length;
                if ("medium" === n || "small" === n) {
                    var t = f * o;
                    t = Math.ceil(t), a(".top", i).height(t);
                    var u = t;
                    if ("small" === e._mode) s && (u += 32), r || (u += m.outerHeight(), a(".heading", k).equalHeights()), l.removeAttr("style");
                    else {
                        var v = 500,
                            w = a("html").width(),
                            x = 2 * parseInt(j.css("padding-left"), 10),
                            y = (w - x - v) / 2;
                        l.css("padding", "0 " + y + "px")
                    }
                    d(e._slider), h.css("top", u), p = t + q
                } else {
                    d(e._slider), s && (q += 80);
                    var z = e._calculateHeaderSize(e.$element.offset().top),
                        A = g - z,
                        B = f / 1.45;
                    A = B > A ? A : B, e._breakpointTabletLandscapeActive && (q -= 35), p = j.height();
                    var C = f / g;
                    C > 2.3 ? (a(".bottomLeft", i).hide(), a(".bottomRight", i).hide(), a(".triple .top", i).css("height", "100%")) : (a(".bottomLeft", i).show(), a(".bottomRight", i).show(), a(".triple .top", i).removeAttr("style")), f > 1 && (p = q > A ? q : A)
                }
                a(".rsOverflow", i).height(p), i.height(p), e._slider || a(".overflow", i).height(p), e._previousSlideHeight = p
            }
        },
        _calculateHeaderSize: function(b) {
            var c = void 0,
                d = a(".dxnav-header"),
                e = a(".InPageNavigation");
            if (c = site.utils.getStickyNavHeight(b), d.length > 0 && e.length <= 0) {
                var f = d.hasClass("dxnav-hasBreadcrumbs");
                f && b > site.stickyNavigationTransitionPoint && (c = 44)
            }
            return c
        },
        _onPrev: function(a) {
            a.preventDefault();
            var b = a.data.that;
            b._slider.prev(), b._updateSlideContent()
        },
        _onNext: function(a) {
            a.preventDefault();
            var b = a.data.that;
            b._slider.next(), b._updateSlideContent()
        },
        _updatePagination: function(b) {
            var c = b ? b.data.that : this,
                d = c._slider,
                e = d.currSlideId + 1;
            "slideFromLeft" === c._direction && (e = d.numSlides - e + 1), a(".numbers", c.$element).html('<span class="number">' + e + '</span><span class="divide">/</span><span class="number">' + d.numSlides + "</span>"), a(".TargetLinks", c.$element).TargetLinks("setupListener")
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = this._slider,
                d = a(".royalSlider", this.$element),
                e = a(".carouselNavigation", this.$element);
            d.attr("tabindex", "0"), d.keydown(function(a) {
                39 === a.keyCode ? (c.next(), d.focus(), b._updateSlideContent()) : 37 === a.keyCode && (c.prev(), d.focus(), b._updateSlideContent())
            }), e.find("a").keydown(function(c) {
                39 === c.keyCode ? a(".next", b.$element).focus() : 37 === c.keyCode && a(".prev", b.$element).focus()
            }), this._updateSlideContent()
        },
        _updateSlideContent: function() {
            var b = this._slider,
                c = a(".rsSlide > div", this.$element),
                d = b.currSlide.content;
            a("a", c).attr("tabindex", "-1"), a("a", d).attr("tabindex", ""), a(".ResponsiveLink").ResponsiveLink(), a(".headingLinear", d).Headings("linearLines"), this._convert()
        }
    };
    jQuery.createComponent("DualFrameCarousel2", c)
}(jQuery, window);
var DxTwoColumnContainer = function b(a, c) {
    _classCallCheck(this, b), this.element = a, this.defaults = {}, this.options = Object.assign({}, this.defaults, c)
};
! function(a, b, c, d) {
    var e = {
        _$window: a(b),
        uiSelectors: {
            ec_submit: ".ec_submit",
            ec_form: "form",
            ec_checkBox: ".ec_checkBox",
            ec_custom_checkBox: ".custom_checkbox label",
            ec_email: ".ec_email",
            ec_error: ".ec_error",
            ec_error_container: ".ec_error_container"
        },
        init: function() {
            var a = this;
            a._$window.smartresize(a._onresize.bind(a)).on("stickyNavigationChange", function() {
                b.setTimeout(function() {
                    a._handleBackgroundHeight(0)
                }, 450)
            }), a._handleBackgroundHeight(0), this._initEvents()
        },
        _onresize: function(a) {
            this._handleBackgroundHeight(0)
        },
        _handleBackgroundHeight: function(b, c, d) {
            var e = (site.breakpoints.current, this);
            if (site.utils.isBreakpointSmall()) {
                var f = e._$window.width() / (16 / 9),
                    g = f + a(".EmailCaptureContainer").outerHeight(!0) + b;
                a(".backgroundContainer").css({
                    height: f
                }), a(".EmailCapture").height(g)
            } else site.utils.isBreakpointMedium() ? a(".EmailCapture").height(400) : a(".EmailCapture").height(480), a(".backgroundContainer").css("height", "100%");
            c && c instanceof jQuery && site.utils.scrollIfNotInViewport(c, d)
        },
        _initEvents: function() {
            var b = this;
            this.ui("ec_checkBox").on("click", function() {
                b.ui("ec_custom_checkBox").removeClass("error")
            }), this.ui("ec_email").on("change paste keyup focus", function() {
                b.ui("ec_email").removeClass("error")
            }), this.ui("ec_form").submit(function(c) {
                c.preventDefault();
                var d = "",
                    e = b.ui("ec_checkBox").is(":checked"),
                    f = b._validateEmailAddress(b.ui("ec_email").val());
                e || f ? e ? f || (d = a(".ec_wrong_email").text(), b.ui("ec_email").addClass("error")) : (d = a(".ec_disclaimer_not_ticked").text() + "<br>", b.ui("ec_custom_checkBox").addClass("error")) : (d = a(".ec_disclaimed_not_ticked_wrong_email").text(), b.ui("ec_custom_checkBox").addClass("error"), b.ui("ec_email").addClass("error")), b.ui("ec_error").html(d);
                a(this);
                if ("" === d) b.ui("ec_error_container").hide(function() {
                    b._handleBackgroundHeight(0)
                }), interactLRDX.ryiBatchRequest(b.ui("ec_email").val(), b);
                else {
                    var g = parseInt(a(".ec_error_container").css("margin-top").replace("px", "")) + parseInt(a(".ec_error_container").css("margin-bottom").replace("px", ""));
                    b._handleBackgroundHeight(b.ui("ec_error_container").height() + g), b.ui("ec_error_container").show(function() {
                        b._handleBackgroundHeight(0, a(".ec-bottom-page"), !0)
                    })
                }
            })
        },
        submitCallback: function(b) {
            var c = this;
            b ? a(".EmailCaptureContainer .ec_copy_form").fadeOut("slow", function() {
                a(".ec_feedback_success").fadeIn("slow", function() {}), c._handleBackgroundHeight(0, a(".backgroundContainer"), !1)
            }) : a(".EmailCaptureContainer .ec_copy_form").fadeOut("slow", function() {
                a(".ec_feedback_error_server").fadeIn("slow"), c._handleBackgroundHeight(0, a(".backgroundContainer"), !1)
            })
        },
        _validateEmailAddress: function(a) {
            var b = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
            return b.test(a)
        }
    };
    jQuery.createComponent("EmailCapture", e)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _defaults: {},
        events: {
            "blur .textfield": "_validateField",
            "submit .eu_emissions_form": "_validateForm",
            "click tap .openAll": "_toggleAll",
            "click tap .searchAgainButton": "_scrollToSearch"
        },
        uiSelectors: {
            emissionsForm: ".eu_emissions_form",
            errorFields: ".error-message",
            resultsContainer: ".results",
            noResultsContainer: ".no-results",
            specDetails: ".specDetails",
            specAccordion: ".specDetails ul",
            openAll: ".openAll",
            continueButton: ".continueButton",
            searchAgain: ".searchAgainButton",
            labels: ".eu_emissions_form label",
            noResultsText: ".no-results .errorHeading"
        },
        _map: {
            family: ["test_date_label", "pems_test_family", "ta_code", "manufacturer_code", "emission_type_approval_no", "remarks"],
            technical_criteria: ["test_date_label", "propulsion_type", "fuel_type", "combustion_process", "number_of_cylinder", "configuration_of_cylinder_block", "max_engine_volume", "method_of_fuel_injection", "cooling_system", "aspiration_charger_type_number", "exhaust_aftertreatment", "egr_type"],
            results: {
                em1_heading: ["test_date_label", "em1-mw-nox-d", "em1-mw-co-d", "em1-mw-pn-d", "em1-mw-nox-d-u", "em1-mw-co-d-u", "em1-mw-pn-d-u"],
                em2_heading: ["test_date_label", "em2-mw-nox-d", "em2-mw-co-d", "em2-mpn-d-t", "em2-mw-nox-d-u", "em2-mw-co-d-u", "em2-mw-pn-d-u"]
            },
            test_criteria: ["test_date_label", "each_combination_of_fuels", "highest_lowest_power_to_mass_ratio", "each_transmission_type", "awd_if_included", "each_engine_volume", "each_type_and_sequence_of_after_treatment", "number_n_of_vehicle_emission_types"],
            "50percent": ["test_date_label", "labelResult"],
            justification: ["test_date_label", "fuel", "pmrh", "pmrl", "transm", "xwd", "eng_vol", "exhaust_aftertreatment", "no_of_et", "no_of_tests", "ts_test_share", "deviation_of_max_engine_volume"]
        },
        _fieldLabels: null,
        _validations: null,
        _validationMessages: null,
        _errors: null,
        _allOpen: !1,
        _animatingAll: !1,
        _isComplete: !1,
        _replacements: {
            "Mw,NOx,d": "mw-nox-d",
            "Mw,NOx,d,U": "mw-nox-d-u",
            "Mw,CO,d,U": "mw-co-d-u",
            "Mw,PN,d,U": "mw-pn-d-u",
            "Mw,PN,d": "mw-pn-d",
            "Mw,CO,d": "mw-co-d",
            "MPN,d,t": "mpn-d-t",
            Xwd: "xwd",
            N_number_of_et: "no_of_et",
            Fuel: "fuel",
            Xwd_engine_volume: "eng_vol",
            NT_Number_of_tests: "no_of_tests",
            awd: "awd_if_included",
            "50_percent_tests_to_be_driven_by_tech_service": "labelResult",
            "highest_lowest_power_to_mass_ratio_kW/t": "highest_lowest_power_to_mass_ratio",
            each_type_sequence_of_aftertreatment: "each_type_and_sequence_of_after_treatment",
            transmission: "transm",
            deviation_of_maximum_engine_volume: "deviation_of_max_engine_volume",
            exhaust_aftertreatment_type_sequence: "exhaust_aftertreatment",
            egr_type: "egr-type"
        },
        init: function() {
            var c = this;
            if (this._getFormMetaData(), this._updateOpenAllText(), this._translate(), this._matchLabelHeights(), this.$element.on("click tap", ".specDetails li > a", function(b) {
                    b.preventDefault(), c._toggleHeader(a(b.currentTarget).parent())
                }), this.$element.find(".textfield").on("input", function(a) {
                    return c._validateField(a)
                }), navigator.userAgent.toLowerCase().indexOf("android") > -1) {
                var d = a('input[type="text"]', this.$element);
                d.on("keydown", function(b) {
                    this.value.length >= b.currentTarget.maxLength && a(this).val(a(this).val().substr(0, b.currentTarget.maxLength))
                })
            }
            a(b).smartresize(function() {
                c._matchLabelHeights()
            })
        },
        _matchLabelHeights: function() {
            var b = 0;
            this.ui("labels").each(function(c, d) {
                var e = a(d).height();
                e > b && (b = e)
            }), this.ui("labels").each(function(c, d) {
                var e = a(d).height();
                b > e ? a(d).css({
                    marginTop: b - e
                }) : a(d).css({
                    marginTop: 0
                })
            })
        },
        _translate: function() {
            var b = this;
            this._translations = this.$element.data("translations");
            var c = {
                ".specs-results-header h1 span": {
                    text: "results_title_label"
                },
                ".specs-results-header p": {
                    text: "results_summary_label"
                },
                ".openAll .open": {
                    text: "open_all_label",
                    ariaLabel: "open_all_accessible_label"
                },
                ".openAll .close": {
                    text: "close_all_label",
                    ariaLabel: "close_all_accessible_label"
                },
                ".continueButton": {
                    text: "search_label",
                    ariaLabel: "search_accessible_label"
                },
                ".searchAgainButton": {
                    text: "search_again_label",
                    ariaLabel: "search_again_accessible_label"
                }
            };
            a.each(c, function(c, d) {
                var e = b._translations[d.text].trim(),
                    f = d.ariaLabel ? b._translations[d.ariaLabel].trim() : null;
                "results_summary_label" === d && "" === e ? a(c).remove() : ("INPUT" !== a(c)[0].tagName ? a(c).html(e) : a(c).val(e), null !== f && a(c).attr("aria-label", f))
            })
        },
        _flattenAndParse: function(b) {
            var c = this,
                d = Array.isArray(b) ? b : [b],
                e = [];
            return a.each(d, function(b, d) {
                var f = {};
                a.each(d, function(b, d) {
                    if ("string" == typeof d) "undefined" != typeof c._replacements[b] ? f[c._replacements[b]] = d : f[b] = d;
                    else if (null !== d) {
                        var e = void 0;
                        "evaluation_method_1" === b ? e = "em1" : "evaluation_method_2" === b && (e = "em2"), a.each(d, function(a, b) {
                            f[e + "-" + c._replacements[a]] = b
                        })
                    }
                }), e.push(f)
            }), e
        },
        _getFormMetaData: function() {
            var b = this,
                c = this.ui("emissionsForm").find(":input").not("[type=submit]"),
                d = void 0,
                e = void 0,
                f = void 0;
            this._fieldLabels = {}, this._validations = {}, this._validationMessages = {}, c.each(function(c, g) {
                d = a(g).attr("name"), e = a("label[for=" + d + "]", b.$element).text(), f = a(g).data(), b._fieldLabels[d] = e, b._validations[d] = {
                    required: f.required,
                    format: f.format
                }, b._validationMessages[d] = {
                    required: f.requiredMessage,
                    format: f.formatMessage
                }
            })
        },
        _validateField: function(b) {
            !site.utils.hasPlaceholderSupport() && Placeholders && Placeholders.disable(a(b.currentTarget)[0]);
            var c = a(b.currentTarget).attr("name"),
                d = a(b.currentTarget).val(),
                e = {
                    name: c,
                    value: d
                };
            this._errors ? this._errors = this._errors.filter(function(a) {
                return a.fieldName !== c
            }) : this._errors = [], this._validate(e), this._errors.length ? this._displayErrors() : this._hideErrors(), this._checkFormComplete(), !site.utils.hasPlaceholderSupport() && Placeholders && Placeholders.enable(a(b.currentTarget)[0])
        },
        _validateForm: function(a) {
            var b = this;
            a && a.preventDefault(), this._hideResults();
            var c = this._getFormData();
            this._errors = [], c.forEach(function(a) {
                b._validate(a)
            }), this._errors.length ? this._displayErrors() : this._getData(this._reformatFormData(c))
        },
        _checkFormComplete: function() {
            var b = this;
            this._isComplete = !1, this._errors.length || (this._isComplete = !0, this.$element.find("input[type=text]").each(function(c, d) {
                a(d).val().length || (b._isComplete = !1)
            })), this.ui("continueButton").prop("disabled", !this._isComplete)
        },
        _validate: function(a) {
            if (this._validations[a.name].required && (a.value || this._errors.push({
                    fieldName: a.name,
                    message: this._validationMessages[a.name].required
                })), a.value && this._validations[a.name].format) {
                var b = new RegExp(this._validations[a.name].format);
                b.test(a.value) || this._errors.push({
                    fieldName: a.name,
                    message: this._validationMessages[a.name].format
                })
            }
        },
        _displayErrors: function() {
            var a = this;
            this._hideErrors(), this._errors.forEach(function(b) {
                a.$element.find("[name=" + b.fieldName + "]").addClass("error"), a.ui("errorFields").filter("[data-for=" + b.fieldName + "]").text(b.message).addClass("visible")
            })
        },
        _hideErrors: function() {
            this.$element.find("input[type=text]").removeClass("error").removeClass("valid"), this.ui("errorFields").removeClass("visible")
        },
        _getFormData: function() {
            return this.ui("emissionsForm").serializeArray()
        },
        _reformatFormData: function(a) {
            return a.reduce(function(a, b) {
                var c = a;
                return c[b.name] = b.value, c
            }, {})
        },
        _createTable: function(b) {
            var c = this,
                d = "";
            return "results" !== b ? d += this._getTable(this._map[b]) : a.each(this._map[b], function(a, b) {
                d += '<h2 class="secondaryHeading">' + c._translations[a] + "</h2>", d += c._getTable(b)
            }), d
        },
        _getTable: function(b) {
            var c = this,
                d = "<table><tr>";
            return a.each(b, function(a, b) {
                d += c._getRow(b, c._translations[b])
            }), d += "</tr>", a.each(this._data, function(e, f) {
                d += "<tr>", a.each(b, function(a, b) {
                    d += c._getRow(b, f[b], e + 1)
                }), d += "</tr>"
            }), d += "</table>"
        },
        _getRow: function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
                c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
            return "test_date_label" === a ? "<th>" + c + "</th>" : "<td>" + b + "</td>"
        },
        _createAccordion: function(a) {
            return '<li>\n              <a href="#">\n                ' + this._translations.headings[a + "_heading"] + '\n              </a>\n              <div style="overflow-y: hidden; height: 0px;">\n                <div class="EmissionsTable light">\n                  ' + this._createTable(a) + "\n                </div>\n              </div>\n            </li>"
        },
        _getData: function(b) {
            var c = this,
                d = "/euemissions",
                e = a("html").attr("lang").substring(0, 2);
            "en" !== e && (d = "/" + e + d), a.ajax({
                url: d,
                dataType: "json",
                data: b,
                cache: !1,
                success: function(a) {
                    c._data = c._flattenAndParse(a), c._displayResults()
                },
                error: function(a) {
                    if (a && a.responseJSON) c._displayErrorResults(a.responseJSON.message);
                    else if (a && a.responseText) try {
                        var b = JSON.parse(a.responseText);
                        c._displayErrorResults(b.message)
                    } catch (d) {
                        c._displayErrorResults("")
                    } else c._displayErrorResults("")
                }
            })
        },
        _displayResults: function() {
            var b = this;
            if (this._data && this._data.length) {
                var c = "";
                a.each(this._map, function(a) {
                    c += b._createAccordion(a)
                }), this.ui("specAccordion").empty().append(c), this.ui("specAccordion").find("> li > div").css({
                    "overflow-y": "hidden",
                    height: "0"
                }), this.ui("resultsContainer").show(), this._scrollToResults(), this.ui("specAccordion").find(".EmissionsTable > table:not(.nonResponsive)").ResponsiveTable()
            }
            this._allOpen = !1, this._updateOpenAllText()
        },
        _displayErrorResults: function(a) {
            this.ui("noResultsText").text(a), this.ui("noResultsContainer").show(), this._scrollToNoResults(), this._allOpen = !1, this._updateOpenAllText()
        },
        _hideResults: function() {
            this.ui("resultsContainer").hide(), this.ui("noResultsContainer").hide(), this._allOpen = !1, this._updateOpenAllText()
        },
        _scrollToSearch: function(a) {
            a && a.preventDefault(), site.utils.scrollTo(this.$element)
        },
        _scrollToResults: function(a) {
            a && a.preventDefault(), site.utils.scrollTo(this.ui("resultsContainer"))
        },
        _scrollToNoResults: function(a) {
            a && a.preventDefault(), site.utils.scrollTo(this.ui("noResultsContainer"))
        },
        _toggleHeader: function(c) {
            var d = this;
            if (!c.hasClass("animating"))
                if (a(b).width() < site.breakpoints.small && this.ui("specAccordion").find("li.active").each(function(b, d) {
                        a(d).index() !== c.index() && a(d).find("a").trigger("click")
                    }), c.hasClass("active")) c.addClass("animating"), a("> div", c).css({
                    height: a("> div", c).outerHeight()
                }).transition({
                    duration: 400,
                    height: 0,
                    easing: "ease"
                }, function() {
                    c.removeClass("active animating"), d.ui("specAccordion").find("li.active > a").length || (d._allOpen = !1, d._updateOpenAllText())
                });
                else {
                    c.addClass("active animating"), a("> div", c).clone().removeAttr("style").css({
                        position: "absolute",
                        visibility: "hidden",
                        width: this.ui("specDetails").width()
                    }).addClass("slideClone").appendTo(c);
                    var e = a(".slideClone").outerHeight();
                    a(".slideClone").remove(), a("> div", c).transition({
                        duration: 400,
                        height: e,
                        easing: "ease"
                    }, function() {
                        a("> div", c).css({
                            height: "auto"
                        }), c.removeClass("animating"), d.ui("specAccordion").find("li:not(.active) > a").length || (d._allOpen = !0, d._updateOpenAllText()), a(b).width() < site.breakpoints.small && site.utils.scrollTo(c)
                    })
                }
        },
        _toggleAll: function(a) {
            var b = this;
            a.preventDefault(), this._animatingAll || (this._animatingAll = !0, setTimeout(function() {
                b._animatingAll = !1
            }, 500), this._allOpen ? (this._allOpen = !1, this.ui("specAccordion").find("li.active > a").trigger("click")) : (this._allOpen = !0, this.ui("specAccordion").find("li:not(.active) > a").trigger("click")), this._updateOpenAllText())
        },
        _updateOpenAllText: function() {
            this._allOpen ? (this.ui("openAll").find(".open").hide(), this.ui("openAll").find(".close").show()) : (this.ui("openAll").find(".close").hide(), this.ui("openAll").find(".open").show())
        }
    };
    jQuery.createComponent("EUEmissions", c)
}(jQuery, window, document),
function(a, b, c, d) {
    "use strict";
    var e = {
        init: function() {
            var a = this;
            this.elements = {
                disambiguation: this.element.querySelector(".ExperienceDrives__disambiguation"),
                filters: this.element.querySelector(".ExperienceDrives__filters"),
                key: this.element.querySelector(".ExperienceDrives__key"),
                mapContainer: this.element.querySelector(".ExperienceDrives__map-container"),
                map: this.element.querySelector(".ExperienceDrives__map"),
                search: this.element.querySelector(".ExperienceDrives__search"),
                locate: this.element.querySelector(".locate"),
                zoomInButton: this.element.querySelector(".plus"),
                zoomOutButton: this.element.querySelector(".minus")
            }, this.disambiguation = new ExperienceDrivesDisambiguation(this.elements.disambiguation), this.filters = new MapFilters(this.elements.filters, "ExperienceDrives__", !0), this.key = new ExperienceDrivesKey(this.elements.key), this.map = new ExperienceDrivesGoogleMap(this.elements.map), this.search = new ExperienceDrivesSearch(this.elements.search);
            var b = c.getElementsByClassName("ExperienceDrives__search")[0],
                d = b.getAttribute("data-target-map-url");
            if (d) this.search.dumbSearch();
            else {
                var e = site.utils.getUrlParameter("filter"),
                    f = null;
                null !== e && (f = e.split(",")), this.data = JSON.parse(this.$element.attr("data-json")), this.filters.buildMenu(this.data.filters, f), null !== this.elements.filters && this.elements.filters.addEventListener("filterClicked", function(b) {
                    a.onFilterClicked(b)
                })
            }
            this.map.initialiseMap().then(function() {
                a.location = site.utils.getUrlParameter("location");
                var b = site.utils.getUrlParameter("criteria"),
                    c = site.utils.getUrlParameter("filter"),
                    d = null;
                null !== c && (d = c.split(",")), a._attachEvents(), a._checkGeolocation(), a._drawPins(a.data.markers, d), a.search.hideLoading(), a.search.showForm(), b && a.disambiguation.getSearchTerm(), (null !== d || null !== a.location) && (null === a.location && (a.location = a.$element.data("location")), a.map.centerOnLocation(a.location, a.elements.mapContainer, a.key, a.filters, a._scrollToMap))
            })["catch"](function(a) {
                console.log(a)
            })
        },
        onLocationSearch: function(a) {
            var b = this;
            a.preventDefault(),
                function(c) {
                    return c.coordinates ? Promise.resolve(c.coordinates) : b.map.getLocationCoordinates(c.placeId).then(function(b) {
                        return a.target.data.coordinates = b, b
                    })["catch"](function(a) {
                        console.log(a)
                    })
                }(a.target.data).then(function(a) {
                    b.showMap(a), b.disambiguation.hide(), b._scrollToMap()
                })["catch"](function(a) {
                    console.error("Experience Drives - Could not load coordinates for location: " + a)
                })
        },
        showMap: function(a) {
            var b = a.lat,
                c = a.lng;
            this.elements.mapContainer.classList.remove("hide"), this.map.goToLocation(b, c), this.key.show(), this.filters.show()
        },
        searchOneResult: function(a) {
            var b = this;
            this.map.getLocationCoordinates(a.placeId).then(function(a) {
                b.showMap(a)
            })["catch"](function(a) {
                console.error("Experience Drives - Could not load coordinates for location: " + a)
            })
        },
        onSearch: function(b) {
            var c = this;
            b.preventDefault(), this.map.closeAllInfoboxes();
            var d = this.search.elements.input.value;
            d.length && (this.search.hideError(), this.disambiguation.hide(), this.search.showLoading(), this.map.getSearchResults(d).then(function(b) {
                b.length > 1 ? (c.disambiguation.update(d, b), c.disambiguation.show(), site.utils.scrollTo(a(c.elements.disambiguation), 800, null, "easeOutSine")) : c.searchOneResult(b[0])
            })["catch"](function(a) {
                "ZERO_RESULTS" !== a && console.log("Error performing experience drives search: " + a), c.search.showError()
            })["finally"](function() {
                c.search.hideLoading()
            }))
        },
        onFilterClicked: function(a) {
            this.map.filterMarkers(a.detail.filters)
        },
        onMapPinClicked: function(a) {
            console.log(a)
        },
        _checkGeolocation: function() {
            var a = this;
            navigator.geolocation ? navigator.geolocation.getCurrentPosition(function(b) {
                a.key.showYourLocation(), a.map.drawPin(b.coords.latitude, b.coords.longitude, "your-location", -1)
            }, function(b) {
                console.log("Geolocation error: " + b.message), a.key.hideYourLocation()
            }) : (console.log("geolocation not available or disabled"), this.key.hideYourLocation())
        },
        _attachEvents: function() {
            var a = this;
            this.search.elements.submit.addEventListener("click", function(b) {
                return a.onSearch(b)
            }), this.search.elements.form.addEventListener("submit", function(b) {
                return a.onSearch(b)
            }), this.elements.zoomInButton.addEventListener("click", function() {
                return a.map.zoom(1)
            }), this.elements.zoomOutButton.addEventListener("click", function() {
                return a.map.zoom(-1)
            }), this.disambiguation.elements.links.addEventListener("click", function(b) {
                b.target && "A" === b.target.nodeName && a.onLocationSearch(b)
            })
        },
        _drawPins: function(a, b) {
            var c = this,
                e = !0,
                f = !1,
                g = d;
            try {
                for (var h, i = a[Symbol.iterator](); !(e = (h = i.next()).done); e = !0) {
                    var j = h.value,
                        k = j.lat,
                        l = j.lng,
                        m = j.iconType,
                        n = j.filter,
                        o = j.card,
                        p = !0;
                    if (null !== b) {
                        p = !1;
                        var q = !0,
                            r = !1,
                            s = d;
                        try {
                            for (var t, u = n[Symbol.iterator](); !(q = (t = u.next()).done); q = !0) {
                                var v = t.value,
                                    w = !0,
                                    x = !1,
                                    y = d;
                                try {
                                    for (var z, A = b[Symbol.iterator](); !(w = (z = A.next()).done); w = !0) {
                                        var B = z.value;
                                        B === v && (p = !0)
                                    }
                                } catch (C) {
                                    x = !0, y = C
                                } finally {
                                    try {
                                        !w && A["return"] && A["return"]()
                                    } finally {
                                        if (x) throw y
                                    }
                                }
                            }
                        } catch (C) {
                            r = !0, s = C
                        } finally {
                            try {
                                !q && u["return"] && u["return"]()
                            } finally {
                                if (r) throw s
                            }
                        }
                    }
                    this.map.drawPin(k, l, m, n, p, o)
                }
            } catch (C) {
                f = !0, g = C
            } finally {
                try {
                    !e && i["return"] && i["return"]()
                } finally {
                    if (f) throw g
                }
            }
            this.map.createMarkersClusterer(), this.map.closeInfobox(), this.filters.elements.filtersContainer.addEventListener("click", function(a) {
                var b = c.filters.elements.applyFilters.querySelector("span");
                (a.target === c.filters.elements.applyFilters || a.target === b) && c.map.closeAllInfoboxes()
            })
        },
        _scrollToMap: function() {
            var c = a(".dxnav-header"),
                d = a(".ExperienceDrives__top-bar"),
                e = a(".ExperienceDrives__map-container"),
                f = 0,
                g = a("#header");
            d.height() + e.height() > b.innerHeight && (f = 80), c.length && (g = c.hasClass("dxnav-hasBreadcrumbs") ? a(".dxnav__breadcrumbs") : c);
            var h = d.hasClass("block-header-nav") === !0 ? 0 : g.height(),
                i = h - f;
            site.utils.scrollToElement(d, {
                adjustment: i
            })
        }
    };
    jQuery.createComponent("ExperienceDriveMapAndLocator", e)
}(jQuery, window, document);
var ExperienceDrivesDisambiguation = function() {
        function a(b) {
            _classCallCheck(this, a), this.element = b;
            var c = document.querySelector(".ExperienceDrives__disambiguation__title__criteria-placeholder");
            return null !== c && (this.elements = {
                criteriaPlaceholder: this.element.querySelector(".ExperienceDrives__disambiguation__title__criteria-placeholder"),
                links: this.element.querySelector(".ExperienceDrives__disambiguation__links"),
                linkItemClone: this.element.querySelector(".ExperienceDrives__disambiguation__links-item").cloneNode(!0),
                linksToggle: this.element.querySelector(".ExperienceDrives__disambiguation__links-toggle")
            }), {
                elements: this.elements,
                hide: this.hide.bind(this),
                hideExtraLinks: this.hideExtraLinks.bind(this),
                hideLinksToggle: this.hideLinksToggle.bind(this),
                show: this.show.bind(this),
                showExtraLinks: this.showExtraLinks.bind(this),
                showLinksToggle: this.showLinksToggle.bind(this),
                getSearchTerm: this.getSearchTerm.bind(this),
                update: this.update.bind(this)
            }
        }
        return _createClass(a, [{
            key: "getSearchTerm",
            value: function() {
                var a = site.utils.getUrlParameter("criteria"),
                    b = document.getElementsByClassName("ExperienceDrives__search__input")[0];
                setTimeout(function() {
                    document.getElementsByClassName("ExperienceDrives__search__submit")[0].click()
                }, 250), b.value = a
            }
        }, {
            key: "hide",
            value: function() {
                this.element.classList.add("hide")
            }
        }, {
            key: "hideExtraLinks",
            value: function() {
                var a = this.elements.links.querySelectorAll(".extra"),
                    b = !0,
                    c = !1,
                    d = void 0;
                try {
                    for (var e, f = a[Symbol.iterator](); !(b = (e = f.next()).done); b = !0) {
                        var g = e.value;
                        g.classList.add("hide")
                    }
                } catch (h) {
                    c = !0, d = h
                } finally {
                    try {
                        !b && f["return"] && f["return"]()
                    } finally {
                        if (c) throw d
                    }
                }
            }
        }, {
            key: "hideLinksToggle",
            value: function() {
                this.elements.linksToggle.classList.add("hide")
            }
        }, {
            key: "show",
            value: function() {
                this.element.classList.remove("hide")
            }
        }, {
            key: "showExtraLinks",
            value: function() {
                var a = this.elements.links.querySelectorAll(".extra"),
                    b = !0,
                    c = !1,
                    d = void 0;
                try {
                    for (var e, f = a[Symbol.iterator](); !(b = (e = f.next()).done); b = !0) {
                        var g = e.value;
                        g.classList.remove("hide")
                    }
                } catch (h) {
                    c = !0, d = h
                } finally {
                    try {
                        !b && f["return"] && f["return"]()
                    } finally {
                        if (c) throw d
                    }
                }
            }
        }, {
            key: "showLinksToggle",
            value: function() {
                this.elements.linksToggle.classList.remove("hide");
            }
        }, {
            key: "update",
            value: function(a, b) {
                this.elements.criteriaPlaceholder.textContent = "'" + a + "'";
                var c = document.createRange();
                c.selectNodeContents(this.elements.links), c.deleteContents();
                for (var d = 0; d < b.length; d++) {
                    var e = this.elements.linkItemClone.cloneNode(!0),
                        f = e.querySelector(".ExperienceDrives__disambiguation__link"),
                        g = b[d];
                    f.data = g, f.textContent = g.description, d > 5 && e.classList.add("extra", "hide"), this.elements.links.appendChild(e)
                }
                this.hideExtraLinks(), b.length > 5 ? this.showLinksToggle() : this.hideLinksToggle()
            }
        }]), a
    }(),
    ExperienceDrivesGoogleMap = function() {
        function a(b, c) {
            return _classCallCheck(this, a), this.element = b, this.mapInitPromise = null, this.map = null, this.services = {}, this.markers = [], this.clusterer = null, this.options = Object.assign({
                key: site.googleMapsAPIKey,
                disableDefaultUI: !0,
                minZoom: 2,
                filter: null,
                callback: "site.gmapsLoaded",
                libraries: "places,geometry"
            }, this._getOptionsFromAttributes(), c || {}), {
                drawPin: this.drawPin.bind(this),
                drawRoute: this.drawRoute.bind(this),
                getLocationCoordinates: this.getLocationCoordinates.bind(this),
                getSearchResults: this.getSearchResults.bind(this),
                goToLocation: this.goToLocation.bind(this),
                hide: this.hide.bind(this),
                initialiseMap: this.initialiseMap.bind(this),
                show: this.show.bind(this),
                waitForScriptToLoad: this.waitForScriptToLoad.bind(this),
                filterMarkers: this.filterMarkers.bind(this),
                createMarkersClusterer: this.createMarkersClusterer.bind(this),
                zoom: this.zoom.bind(this),
                createContentCards: this.createContentCards.bind(this),
                centerOnLocation: this.centerOnLocation.bind(this),
                closeInfobox: this.closeInfobox.bind(this),
                closeAllInfoboxes: this.closeAllInfoboxes.bind(this)
            }
        }
        return _createClass(a, [{
            key: "closeInfobox",
            value: function() {
                var a = this;
                google.maps.event.addListener(this.map, "click", function() {
                    var b = document.getElementsByClassName("ExperienceDrives__filters__container")[0],
                        c = document.getElementsByClassName("ExperienceDrives__filters")[0];
                    c.classList.contains("active") && (c.classList.remove("active"), c.classList.add("inactive"), b.classList.add("hide"));
                    for (var d = 0; d < a.markers.length; d++) a.markers[d].infobox.close()
                })
            }
        }, {
            key: "closeAllInfoboxes",
            value: function() {
                for (var a = 0; a < this.markers.length; a++) this.markers[a].infobox.close()
            }
        }, {
            key: "drawPin",
            value: function(a, b, c, d, e, f) {
                this.infoBox = window.loadInfoBox();
                var g = "your-location" === c ? new google.maps.Size(22, 22) : new google.maps.Size(54, 54),
                    h = {
                        url: "/resources/public/images/ExperienceDriveMapAndLocator/map-pin-" + c + ".png",
                        scaledSize: g
                    },
                    i = new google.maps.LatLng(a, b),
                    j = new google.maps.Marker({
                        position: i,
                        map: this.map,
                        icon: h,
                        filter: d,
                        card: f
                    });
                if ("your-location" !== h ? j.setVisible(e) : j.setVisible(!0), -1 !== d) {
                    var k = f.title,
                        l = f.location,
                        m = f.desc,
                        n = f.cta,
                        o = f.image,
                        p = f.imageAlt,
                        q = "new" === n.action ? "_blank" : "",
                        r = '<div class="event-infobox">\n                                <span class="infoboxImage" aria-label="' + p + '" style="background-image: url(\'' + o + '\')"></span>\n                                <span class="infoboxClose"></span>\n                                <div class="infoContainer">\n                                <h3 class="infoboxName">' + k + '</h3>\n                                <h4 class="infoboxLocation">' + l + '</h4>\n                                <h5 class="infoboxSubheader">' + m.header + '</h5>\n                                <p class="shortDesc">' + m.text + '</span>\n                                <div class="linkContainer FindOutMore">\n                                <span class="primaryLinkContainer"><a target="' + q + '" href="' + n.url + '" aria-label="' + n.accessibleText + '" class="' + n.style + '"><span>' + n.text + "</span></a></div></div>\n                                </div>\n                              </div>";
                    this.createContentCards(j, r, this.markers), this.markers.push(j)
                }
            }
        }, {
            key: "createContentCards",
            value: function(a, b, c) {
                var d = this,
                    e = void 0,
                    f = void 0,
                    g = void 0;
                g = new google.maps.Size(10, 10), $(window).width() < 740 ? (e = "280px", f = new google.maps.Size(-140, -19)) : (e = "350px", f = new google.maps.Size(-175, -25)), window.innerHeight <= 414 && (e = "350px", f = new google.maps.Size(-175, -19)), window.innerWidth >= 330 && window.innerWidth <= 375 && (g = !1);
                var h = {
                    content: b,
                    disableAutoPan: !0,
                    maxWidth: 0,
                    pixelOffset: f,
                    zIndex: null,
                    boxStyle: {
                        background: "transparent",
                        width: e
                    },
                    closeBoxURL: "",
                    infoBoxClearance: g,
                    isHidden: !1,
                    pane: "floatPane",
                    alignBottom: !0,
                    enableEventPropagation: !1
                };
                a.infobox = new this.infoBox(h), a.infobox.addListener("domready", function() {
                    var a = this;
                    d.closeCTA = $(".infoboxClose"), d.closeCTA.on("click", function() {
                        $(a).closest(".infoBox").addClass("closing"), a._currentMarker = !1, $(".infoBox").hide()
                    })
                }), google.maps.event.addListener(a, "click", function(a) {
                    return function() {
                        for (var b = 0; b < d.markers.length; b++) d.markers[b].infobox.close();
                        d.map.panTo(a.getPosition()), d.map.getZoom() <= 3 && d.map.setZoom(4), window.innerHeight <= 414 ? d.map.panBy(0, -130) : window.innerWidth <= 359 ? d.map.panBy(0, -235) : window.innerWidth <= 420 ? d.map.panBy(0, -250) : window.innerHeight < 900 ? d.map.panBy(0, -240) : d.map.panBy(0, -175);
                        var c = $(".dxnav-header"),
                            e = $(".ExperienceDrives__top-bar"),
                            f = $(".ExperienceDrives__map-container"),
                            g = 0,
                            h = $("#header");
                        e.height() + f.height() > window.innerHeight && (g = 80), c.length && (h = c.hasClass("dxnav-hasBreadcrumbs") ? $(".dxnav__breadcrumbs") : c);
                        var i = e.hasClass("block-header-nav") === !0 ? 0 : h.height(),
                            j = i - g;
                        site.utils.scrollToElement(e, {
                            adjustment: j
                        }), a.infobox.open(d.map, this)
                    }
                }(a))
            }
        }, {
            key: "createMarkersClusterer",
            value: function() {
                var a = [{
                        textColor: "white",
                        url: "/resources/public/images/ExperienceDriveMapAndLocator/m1.png",
                        backgroundPosition: "center",
                        height: 36,
                        width: 36
                    }, {
                        textColor: "white",
                        url: "/resources/public/images/ExperienceDriveMapAndLocator/m1.png",
                        backgroundPosition: "center",
                        height: 36,
                        width: 36
                    }, {
                        textColor: "white",
                        url: "/resources/public/images/ExperienceDriveMapAndLocator/m1.png",
                        backgroundPosition: "center",
                        height: 36,
                        width: 36
                    }],
                    b = {
                        imagePath: "/resources/public/images/ExperienceDriveMapAndLocator/m",
                        styles: a
                    };
                null !== this.clusterer && this.clusterer.clearMarkers(), this.clusterer = new MarkerClustererV3(this.map, this.markers, b);
                var c = !0,
                    d = !1,
                    e = void 0;
                try {
                    for (var f, g = this.markers[Symbol.iterator](); !(c = (f = g.next()).done); c = !0) {
                        var h = f.value;
                        h.visible || this.clusterer.removeMarker(h)
                    }
                } catch (i) {
                    d = !0, e = i
                } finally {
                    try {
                        !c && g["return"] && g["return"]()
                    } finally {
                        if (d) throw e
                    }
                }
            }
        }, {
            key: "filterMarkers",
            value: function(a) {
                var b = !0,
                    c = !0,
                    d = !1,
                    e = void 0;
                try {
                    for (var f, g = a[Symbol.iterator](); !(c = (f = g.next()).done); c = !0) {
                        var h = f.value;
                        "on" === h.filterState && (b = !1)
                    }
                } catch (i) {
                    d = !0, e = i
                } finally {
                    try {
                        !c && g["return"] && g["return"]()
                    } finally {
                        if (d) throw e
                    }
                }
                var j = !0,
                    k = !1,
                    l = void 0;
                try {
                    for (var m, n = this.markers[Symbol.iterator](); !(j = (m = n.next()).done); j = !0) {
                        var o = m.value,
                            p = !1,
                            q = !0,
                            r = !1,
                            s = void 0;
                        try {
                            for (var t, u = a[Symbol.iterator](); !(q = (t = u.next()).done); q = !0) {
                                var v = t.value,
                                    w = !0,
                                    x = !1,
                                    y = void 0;
                                try {
                                    for (var z, A = o.filter[Symbol.iterator](); !(w = (z = A.next()).done); w = !0) {
                                        var B = z.value;
                                        B === v.filterValue && "on" === v.filterState && (p = !0)
                                    }
                                } catch (i) {
                                    x = !0, y = i
                                } finally {
                                    try {
                                        !w && A["return"] && A["return"]()
                                    } finally {
                                        if (x) throw y
                                    }
                                }
                            }
                        } catch (i) {
                            r = !0, s = i
                        } finally {
                            try {
                                !q && u["return"] && u["return"]()
                            } finally {
                                if (r) throw s
                            }
                        }
                        b || p ? (o.setVisible(!0), this.clusterer.addMarker(o)) : (o.setVisible(!1), this.clusterer.removeMarker(o))
                    }
                } catch (i) {
                    k = !0, l = i
                } finally {
                    try {
                        !j && n["return"] && n["return"]()
                    } finally {
                        if (k) throw l
                    }
                }
                this.panToMarkers(), this.createMarkersClusterer()
            }
        }, {
            key: "drawRoute",
            value: function() {}
        }, {
            key: "getLocationCoordinates",
            value: function(a) {
                var b = this;
                return "object" === ("undefined" == typeof a ? "undefined" : _typeof(a)) ? "undefined" != typeof a.place_id ? this.getLocationCoordinates(a.place_id) : Promise.reject("Invalid parameter") : new Promise(function(c, d) {
                    b.services.places || (b.services.places = new google.maps.places.PlacesService(b.map)), b.services.places.getDetails({
                        placeId: a
                    }, function(a, b) {
                        "OK" === b ? c({
                            lat: a.geometry.location.lat(),
                            lng: a.geometry.location.lng()
                        }) : d(b, a)
                    })
                })
            }
        }, {
            key: "getSearchResults",
            value: function(a) {
                var b = this;
                return new Promise(function(c, d) {
                    b.services.autocomplete || (b.services.autocomplete = new google.maps.places.AutocompleteService), b.services.autocomplete.getPlacePredictions({
                        input: a,
                        types: ["(regions)"]
                    }, function(a, b) {
                        "OK" === b ? c(a.map(function(a) {
                            return {
                                description: a.description,
                                placeId: a.place_id
                            }
                        })) : d(b, a)
                    })
                })
            }
        }, {
            key: "goToLocation",
            value: function(a, b) {
                var c = new google.maps.LatLng(a, b),
                    d = this._findClosestMarkerFromLocation(c, 5),
                    e = new google.maps.LatLngBounds,
                    f = !0,
                    g = !1,
                    h = void 0;
                try {
                    for (var i, j = d[Symbol.iterator](); !(f = (i = j.next()).done); f = !0) {
                        var k = i.value;
                        e.extend(k.getPosition())
                    }
                } catch (l) {
                    g = !0, h = l
                } finally {
                    try {
                        !f && j["return"] && j["return"]()
                    } finally {
                        if (g) throw h
                    }
                }
                e.extend(c), this.map.fitBounds(e)
            }
        }, {
            key: "hide",
            value: function() {
                this.element.classList.add("hide")
            }
        }, {
            key: "initialiseMap",
            value: function() {
                var a = this;
                return this.mapInitPromise || (this.mapInitPromise = this.waitForScriptToLoad().then(function() {
                    a.map = new google.maps.Map(a.element, a.options), a.map.setOptions({
                        styles: site.utils.googleMapStyles
                    }), a.infoBox = window.loadInfoBox()
                })["catch"](function(a) {
                    console.log(a)
                })), this.mapInitPromise
            }
        }, {
            key: "centerOnLocation",
            value: function(a, b, c, d, e) {
                var f = this,
                    g = new google.maps.Geocoder;
                g.geocode({
                    address: a
                }, function(a) {
                    void 0 !== a[0].geometry && (f.userLocation = a[0].geometry.location, b.classList.remove("hide"), f.map.setCenter(a[0].geometry.location), f.map.fitBounds(a[0].geometry.viewport), f.goToLocation(a[0].geometry.location.lat(), a[0].geometry.location.lng()), c.show(), d.show(), setTimeout(function() {
                        e()
                    }, 2e3))
                })
            }
        }, {
            key: "panToMarkers",
            value: function() {
                var a = this,
                    b = new google.maps.LatLngBounds;
                this.userLocation || console.error("User Location is not set");
                var c = this.markers.filter(function(b) {
                        var c = b.getVisible();
                        return c === !0 && (b.distanceFromUser = google.maps.geometry.spherical.computeDistanceBetween(a.userLocation, b.position)), c
                    }),
                    d = !0,
                    e = !1,
                    f = void 0;
                try {
                    for (var g, h = c[Symbol.iterator](); !(d = (g = h.next()).done); d = !0) {
                        var i = g.value;
                        b.extend(i.position)
                    }
                } catch (j) {
                    e = !0, f = j
                } finally {
                    try {
                        !d && h["return"] && h["return"]()
                    } finally {
                        if (e) throw f
                    }
                }
                this.map.fitBounds(b), this.map.panToBounds(b), this.map.getZoom() > 10 && this.map.setZoom(10)
            }
        }, {
            key: "panToLocation",
            value: function(a, b, c) {
                b.geocode({
                    address: a
                }, function(a) {
                    c.panTo(a[0].geometry.location)
                })
            }
        }, {
            key: "show",
            value: function() {
                this.element.classList.remove("hide")
            }
        }, {
            key: "waitForScriptToLoad",
            value: function() {
                return this._loadGoogleMapsApiScript(), window.site.googleMapsLoadedPromise
            }
        }, {
            key: "zoom",
            value: function(a) {
                this.map.setZoom(this.map.zoom + a), this.closeAllInfoboxes()
            }
        }, {
            key: "_getOptionsFromAttributes",
            value: function() {
                var a = this,
                    b = ["key", "clientid", "controls", "doubleclickzoom", "libraries", "position", "scrollwheel", "type", "zoom"],
                    c = {};
                return b.forEach(function(b) {
                    null !== a.element && a.element.hasAttribute("data-" + b) && (c[b] = a.element.getAttribute("data-" + b))
                }), c
            }
        }, {
            key: "_objectToUri",
            value: function(a) {
                return Object.keys(a).map(function(b) {
                    return encodeURI(b) + "=" + encodeURI(a[b])
                }).join("&")
            }
        }, {
            key: "_loadGoogleMapsApiScript",
            value: function() {
                if (!(window.google && window.google.maps && window.google.maps.Map || null !== document.getElementById("GoogleMapsApiScript"))) {
                    var a = this.options,
                        b = a.key,
                        c = a.callback,
                        d = a.libraries,
                        e = this._objectToUri({
                            key: b,
                            callback: c,
                            libraries: d
                        }),
                        f = document.createElement("script");
                    f.src = "https://maps.googleapis.com/maps/api/js?" + e, f.type = "text/javascript", f.id = "GoogleMapsApiScript", f.onerror = site.gmapsLoadFailed, document.body.appendChild(f)
                }
            }
        }, {
            key: "_findClosestMarkerFromLocation",
            value: function(a, b) {
                var c = [],
                    d = !0,
                    e = !1,
                    f = void 0;
                try {
                    for (var g, h = this.markers[Symbol.iterator](); !(d = (g = h.next()).done); d = !0) {
                        var i = g.value;
                        i.getVisible() === !0 && (i.distance = google.maps.geometry.spherical.computeDistanceBetween(a, i.getPosition()), c.push(i))
                    }
                } catch (j) {
                    e = !0, f = j
                } finally {
                    try {
                        !d && h["return"] && h["return"]()
                    } finally {
                        if (e) throw f
                    }
                }
                return c.sort(function(a, b) {
                    return a.distance - b.distance
                }), c.splice(0, b)
            }
        }]), a
    }(),
    ExperienceDrivesKey = function() {
        function a(b) {
            _classCallCheck(this, a), this.element = b;
            var c = document.querySelector(".ExperienceDrives__key__list__item.your-location");
            return null !== c && (this.elements = {
                yourLocation: this.element.querySelector(".ExperienceDrives__key__list__item.your-location")
            }), {
                elements: this.elements,
                hide: this.hide.bind(this),
                hideYourLocation: this.hideYourLocation.bind(this),
                show: this.show.bind(this),
                showYourLocation: this.showYourLocation.bind(this)
            }
        }
        return _createClass(a, [{
            key: "hide",
            value: function() {
                this.element.classList.add("hide")
            }
        }, {
            key: "hideYourLocation",
            value: function() {
                this.elements.yourLocation.classList.add("hide")
            }
        }, {
            key: "show",
            value: function() {
                this.element.classList.remove("hide")
            }
        }, {
            key: "showYourLocation",
            value: function() {
                this.elements.yourLocation.classList.remove("hide")
            }
        }]), a
    }(),
    ExperienceDrivesSearch = function() {
        function a(b) {
            return _classCallCheck(this, a), this.element = b, this.elements = {
                error: this.element.querySelector(".ExperienceDrives__search__error-message"),
                form: this.element.querySelector(".ExperienceDrives__search__form"),
                loading: this.element.querySelector(".ExperienceDrives__search__loading-message"),
                input: this.element.querySelector(".ExperienceDrives__search__input"),
                submit: this.element.querySelector(".ExperienceDrives__search__submit")
            }, {
                elements: this.elements,
                disableSubmitButton: this.disableSubmitButton.bind(this),
                enableSubmitButton: this.enableSubmitButton.bind(this),
                hide: this.hide.bind(this),
                hideError: this.hideError.bind(this),
                hideForm: this.hideForm.bind(this),
                hideLoading: this.hideLoading.bind(this),
                show: this.show.bind(this),
                showError: this.showError.bind(this),
                showForm: this.showForm.bind(this),
                dumbSearch: this.dumbSearch.bind(this),
                showLoading: this.showLoading.bind(this)
            }
        }
        return _createClass(a, [{
            key: "disableSubmitButton",
            value: function() {
                this.elements.submit.setAttribute("disabled", "disabled")
            }
        }, {
            key: "enableSubmitButton",
            value: function() {
                this.elements.submit.removeAttribute("disabled")
            }
        }, {
            key: "dumbSearch",
            value: function() {
                var a = this;
                this.showForm(), this.hideLoading();
                var b = document.getElementsByClassName("ExperienceDrives__search")[0];
                b.classList.add("dumb___search");
                var c = b.getAttribute("data-target-map-url"),
                    d = document.getElementsByClassName("ExperienceDrives__search__submit")[0];
                d.addEventListener("click", function(b) {
                    b.preventDefault(), a.submitDumbSearch(c)
                }), b.addEventListener("submit", function(b) {
                    b.preventDefault(), a.submitDumbSearch(c)
                })
            }
        }, {
            key: "submitDumbSearch",
            value: function(a) {
                var b = document.getElementsByClassName("ExperienceDrives__search__input")[0];
                return 0 === b.value.trim().length ? void this.showError() : void(document.location = "" + document.location.origin + a + "?criteria=" + b.value)
            }
        }, {
            key: "hide",
            value: function() {
                this.element.classList.add("hide")
            }
        }, {
            key: "hideError",
            value: function() {
                this.elements.error.classList.add("hide")
            }
        }, {
            key: "hideForm",
            value: function() {
                this.elements.form.classList.add("hide")
            }
        }, {
            key: "hideLoading",
            value: function() {
                this.elements.loading.classList.add("hide")
            }
        }, {
            key: "show",
            value: function() {
                this.element.classList.remove("hide")
            }
        }, {
            key: "showError",
            value: function() {
                this.elements.error.classList.remove("hide")
            }
        }, {
            key: "showForm",
            value: function() {
                this.elements.form.classList.remove("hide")
            }
        }, {
            key: "showLoading",
            value: function() {
                this.elements.loading.classList.remove("hide")
            }
        }]), a
    }();
! function(a, b) {
    var c = {
        delay: 0,
        thankYou: "",
        campaignId: "",
        questions: [],
        dataPushed: !1,
        init: function() {
            this.delay = this.$element.data("show-delay"), this.thankYou = this.$element.data("thankyou"), this.campaignId = this.$element.data("campaignid"), this.questions = this.$element.data("questions"), this.widget = a(".FeedbackWidget__container", this.$element), this.questionsContainer = a(".FeedbackWidget__questions__container", this.$element), this.widgetOverlay = a(".FeedbackWidget__overlay", this.$element), this.widgetHeader = a(".FeedbackWidget__header", this.$element), this.ariaNotifications = a(".aria-live-notifications", this.$element), this.scrollPos = 0, this._hasUserAlreadyInteracted(), this._buildQuestion(this.questions[0]), this._initEvents(), a.easing.def = "easeOutCubic"
        },
        _initEvents: function() {
            var c = this,
                d = function() {
                    c.widgetHeader.off(), a(b).off("scroll.fw"), a(b).on("scroll.fw", function() {
                        a(b).scrollTop() + 200 < c.scrollPos && "small" !== site.utils.getBreakpointSize() && b.matchMedia("(min-width: 600px)").matches ? c.widget.hasClass("FeedbackWidget--opened") && 0 === c.widget.find(":focus").length && c._toggleTooltip() : a(b).scrollTop() > c.scrollPos && (c.scrollPos = a(b).scrollTop())
                    }), c.widgetHeader.on("blur, focusout", function() {
                        c.widget.hasClass("FeedbackWidget--opened") && c.widgetHeader.removeAttr("tabindex")
                    }), c.widgetHeader.on("click tap keydown", function(a) {
                        c.widget.hasClass("FeedbackWidget--opened") || ("keydown" !== a.type || 13 === a.keyCode || 32 === a.keyCode) && c._toggleTooltip()
                    })
                };
            a(".FeedbackWidget__header__close", this.$element).on("click tap", function(b) {
                a("body").off(".fw-body-focus"), c._hideWidget(), b.stopPropagation()
            }), d(), a(b).smartresize(function() {
                d(), c._setQuestionContainerHeight()
            })
        },
        _hideWidget: function() {
            var b = this;
            this.widget.removeClass("FeedbackWidget--opened FeedbackWidget--show"), this.widget.addClass("FeedbackWidget--closed"), site.utils.cookieManager.createCookie("fw_interacted", !0), this.widget.one("transitionend webkitTransitionEnd oTransitionEnd", function() {
                b.widget.css("display", "none")
            }), this.$element.off("touchmove.overlay"), this.widgetOverlay.css("display", "none"), a("html").removeClass("noScroll")
        },
        _toggleTooltip: function() {
            var c = this;
            if (this.widget.hasClass("FeedbackWidget--opened")) {
                var d = this.questionsContainer.outerHeight();
                this.widget.data("questionContainerHeight", d)
            }
            this.widget.toggleClass("FeedbackWidget--opened"), this.widget.toggleClass("FeedbackWidget--minimized"), this.widget.attr("aria-expanded", this.widget.hasClass("FeedbackWidget--opened")), this.widget.hasClass("FeedbackWidget--minimized") ? (this.widgetHeader.attr("role", "button"), this.widgetHeader.attr("tabindex", 0), this.questionsContainer.find(".question").css({
                opacity: 0
            }), this.questionsContainer.css({
                height: 0
            }), setTimeout(function() {
                c.questionsContainer.css({
                    visibility: "hidden"
                })
            }, 300)) : (this.scrollPos = a(b).scrollTop(), this.widgetHeader.removeAttr("role"), this.widgetHeader.removeAttr("tabindex"), "small" === site.utils.getBreakpointSize() && b.matchMedia("(max-width: 599px)").matches && this.widget.find(".FeedbackWidget__header__close").focus(), this.questionsContainer.css({
                visibility: "visible"
            }), this.questionsContainer.find(".question").css({
                opacity: 1
            }), this.questionsContainer.css("height", this.widget.data("questionContainerHeight")), a(b).trigger("resize")), this._setOverlay()
        },
        _setOverlay: function() {
            a(".FeedbackWidget--minimized").length || (this.widgetOverlay.css("display", "block"), a("html").addClass("small" === site.utils.getBreakpointSize() && b.matchMedia("(max-width: 599px)").matches ? "noScroll" : ""), this.$element.on("touchmove.overlay", function(a) {
                a.preventDefault()
            }))
        },
        _setQuestionContainerHeight: function() {
            var a = parseInt(this.questionsContainer.css("padding-top"), 10),
                c = parseInt(this.questionsContainer.css("padding-bottom"), 10);
            this.questionsContainer.find(".question__primary").length || (this.question = this.questionsContainer.find(".question"), this.question.css({
                width: this.widget.width() - (a + c)
            })), void 0 === this.widget.data("questionContainerHeight") && "small" === site.utils.getBreakpointSize() && b.matchMedia("(max-width: 599px)").matches && this.widget.data("questionContainerHeight", this.questionsContainer.find(".question").outerHeight() + 40), this.questionsContainer.css("height", this.questionsContainer.find(".question").outerHeight() + (a + c))
        },
        _animateQuestion: function(b) {
            var c = this;
            b.addClass("no-transition");
            var d = this.questionsContainer.css("padding-left");
            if (b.css({
                    display: "block",
                    opacity: 0
                }).animate({
                    opacity: 1,
                    left: d
                }, {
                    complete: function() {
                        c.questionsContainer.find("label").css("pointer-events", "all")
                    }
                }, 500), site.utils.isMobileDevice()) {
                var e = this.questionsContainer.find(".question__header");
                e.focus(), e.one("blur", function() {
                    e.css("outline", "initial")
                }), a(":focus").css("outline", "none")
            }
        },
        _preventBodyFocus: function(b) {
            var c = this;
            b ? a("body").on("focusin.fw-body-focus focus.fw-body-focus blur.fw-body-focus", function(b) {
                0 === a(document.activeElement).closest(".fw__container").length && (b.preventDefault(), c.widget.find(".FeedbackWidget__header__close").focus())
            }) : a("body").off(".fw-body-focus")
        },
        _buildQuestion: function(b) {
            var c = this,
                d = void 0,
                e = void 0,
                f = void 0,
                g = void 0;
            if (this.questionsContainer.empty(), null === b) return this.questionsContainer.attr("question-type", "thank-you"), g = a(".question__templates .thank-you-message", this.$element).clone().appendTo(".FeedbackWidget__questions__container"), g.find(".question__header").html(this.thankYou), this._setAriaNotifications(this.thankYou), this._setQuestionContainerHeight(), this._animateQuestion(g), void setTimeout(function() {
                c._hideWidget()
            }, 6e3);
            switch (b.answerFormat) {
                case "primary":
                    var h = {};
                    a(".FeedbackWidget__privacy-policy a").addClass("lastFocus"), this.questionsContainer.attr("question-type", "primary"), g = a(".question__templates .question__primary", this.$element).clone().appendTo(".FeedbackWidget__questions__container");
                    var i = g.find(".question__button--yes"),
                        j = g.find(".question__button--no");
                    g.find(".question__header").text(b.feedbackQuestion), h.eventLabel = b.feedbackQuestion, i.text(b.answers[0].answerOption), j.text(b.answers[1].answerOption), i.data("followOn", b.answers[0].followOn), j.data("followOn", b.answers[1].followOn), i.on("click tap", function() {
                        h.eventAction = b.answers[0].answerOption, c._pushToGoogleAnalytics(h), c._buildQuestion(i.data("followOn"))
                    }), j.on("click tap", function() {
                        h.eventAction = b.answers[1].answerOption, c._pushToGoogleAnalytics(h), c._buildQuestion(j.data("followOn"))
                    }), this._setQuestionContainerHeight();
                    break;
                case "single":
                    var k = {};
                    this.questionsContainer.attr("question-type", "single"), g = a(".question__templates .question__single", this.$element).clone().appendTo(".FeedbackWidget__questions__container"), g.find(".question__header").text(b.feedbackQuestion), k.eventLabel = b.feedbackQuestion, this._setAriaNotifications(b.feedbackQuestion), e = g.find("label"), e.css("pointer-events", "none"), g.find("label").remove(), b.answers.map(function(a, b) {
                        var c = e.clone().appendTo(".FeedbackWidget__questions__container .question__container");
                        return c.data("followOn", a.followOn), c.find("input").val(a.answerOption), c.find(".radio__label").text(a.answerOption).attr("id", "fw-rd" + b), c.on("keypress", function(a) {
                            if (13 === a.keyCode || 32 === a.keyCode) {
                                a.preventDefault();
                                var b = c.find("input");
                                b.prop("checked", !b.prop("checked")).trigger("change"), c.attr("aria-checked", b.prop("checked"))
                            }
                        }), !0
                    }), d = a(".FeedbackWidget__questions__container .question__container input", this.$element), d.on("change", function(b) {
                        d.each(function(b, d) {
                            a(d).attr("aria-checked", a(d).prop("checked")), a(d).prop("checked") === !0 && (k.eventAction = a(d).parent().find(".radio__label").text(), c._pushToGoogleAnalytics(k))
                        }), c._buildQuestion(a(b.currentTarget).parent().data("followOn"))
                    }), g.css({
                        display: "none",
                        opacity: 0,
                        left: 60
                    }), this._setQuestionContainerHeight(), setTimeout(function() {
                        c._animateQuestion(g)
                    }, 250);
                    break;
                case "multiple":
                    var l = {};
                    this.questionsContainer.attr("question-type", "multiple"), g = a(".question__templates .question__multiple", this.$element).clone().appendTo(".FeedbackWidget__questions__container"), g.find(".question__header").text(b.feedbackQuestion), l.eventLabel = b.feedbackQuestion, this._setAriaNotifications(b.feedbackQuestion), e = g.find("label"), e.css("pointer-events", "none"), g.find("label").remove(), b.answers.map(function(a, b) {
                        var c = e.clone().appendTo(".FeedbackWidget__questions__container .question__container");
                        return c.data("followOn", a.followOn), c.find("input").val(a.answerOption), c.find(".checkbox__label").text(a.answerOption).attr("id", "fw-cb" + b), c.on("keypress", function(a) {
                            if (13 === a.keyCode || 32 === a.keyCode) {
                                a.preventDefault();
                                var b = c.find("input");
                                b.prop("checked", !b.prop("checked")).trigger("change"), c.attr("aria-checked", b.prop("checked"))
                            }
                        }), !0
                    }), d = a(".FeedbackWidget__questions__container .question__container input", this.$element), f = a(".FeedbackWidget__questions__container .question .submit-feedback", this.$element), f.addClass("disabled");
                    var m = void 0;
                    d.on("change", function() {
                        m = [], f.addClass("disabled"), d.each(function(b, c) {
                            a(c).attr("aria-checked", a(c).prop("checked")), a(c).prop("checked") === !0 && (m.push(a(c).parent().find(".checkbox__label").text()), f.removeClass("disabled"))
                        })
                    }), f.on("click tap", function(a) {
                        a.preventDefault(), f.hasClass("disabled") || (l.eventAction = m.toString(), c._pushToGoogleAnalytics(l), c._buildQuestion(null))
                    }), g.css({
                        opacity: 0,
                        left: 60
                    }), this._setQuestionContainerHeight(), setTimeout(function() {
                        c._animateQuestion(g)
                    }, 250)
            }
        },
        _setAriaNotifications: function(a) {
            var b = /<!--.*?-->/g,
                c = a.replace(b, "");
            this.ariaNotifications.text(c)
        },
        _pushToGoogleAnalytics: function(a) {
            var b = {
                    event: "pushedEvent",
                    campaignId: this.campaignId,
                    eventCategory: "feedback submitted"
                },
                c = Object.assign(a, b);
            dataLayer.push(c)
        },
        _hasUserAlreadyInteracted: function() {
            var a = this;
            site.utils.cookieManager.checkForCookie("fw_interacted") || setTimeout(function() {
                a._show()
            }, 1e3 * this.delay)
        },
        _show: function() {
            this.$element.css("display", "block"), this.widget.addClass("FeedbackWidget--show"), "small" !== site.utils.getBreakpointSize() && b.matchMedia("(min-width: 600px)").matches ? (this.widgetHeader.removeAttr("tabindex"), this.widget.addClass("FeedbackWidget--opened")) : this._setMinimized(), this._toggleWidgetFocusTrap(!0)
        },
        _setMinimized: function() {
            var a = this;
            this.widget.addClass("FeedbackWidget--minimized"), this.widgetHeader.attr("role", "button"), this.widgetHeader.attr("tabindex", 0), this.widget.attr("aria-expanded", "false"), setTimeout(function() {
                a.questionsContainer.css({
                    visibility: "hidden"
                })
            }, 300)
        },
        _matchMedia: function(a) {
            return b.matchMedia(a)
        },
        _toggleWidgetFocusTrap: function(c) {
            var d = this,
                e = void 0;
            c ? (this.widget.on("focus.fw blur.fw", function(c) {
                e = a(document.activeElement), "small" === site.utils.getBreakpointSize() && b.matchMedia("(max-width: 599px)").matches && 0 === e.closest(".FeedbackWidget__container").length && (c.preventDefault(), d.widget.find(".FeedbackWidget__header__close").focus())
            }), this.widget.on("keydown.fw tap.fw", function(c) {
                d.widget.hasClass("FeedbackWidget--minimized") || (e = a(document.activeElement), c.shiftKey && "Tab" === c.key && e.hasClass("FeedbackWidget__header__close") && (!d.questionsContainer.find(".question__primary").length || "small" === site.utils.getBreakpointSize() && b.matchMedia("(max-width: 599px)").matches) && (c.preventDefault(), d.widget.find(".lastFocus:visible").focus()), "Tab" !== c.key || c.shiftKey || e.hasClass("lastFocus") && (d.questionsContainer.find(".question__primary").length && "small" !== site.utils.getBreakpointSize() && b.matchMedia("(min-width: 600px)").matches ? d._preventBodyFocus(!1) : (c.preventDefault(), d.widget.find(".FeedbackWidget__header__close").focus())))
            })) : this.widget.off(".fw")
        }
    };
    jQuery.createComponent("FeedbackWidget", c)
}(jQuery, window, document),
function(a) {
    var b = {
        init: function() {
            var b = this,
                c = a("body"),
                d = site.utils.aria.KeyCode;
            c.on("keydown", function(a) {
                (a.keyCode === d.TAB || a.keyCode === d.ESC || a.keyCode === d.LEFT || a.keyCode === d.UP || a.keyCode === d.RIGHT || a.keyCode === d.DOWN) && b.addFocusClass()
            }), c.on("mouseup mousedown", function() {
                return b.removeFocusClass()
            })
        },
        addFocusClass: function() {
            a("body").addClass("focusStylesOn")
        },
        removeFocusClass: function() {
            a("body").removeClass("focusStylesOn")
        }
    };
    jQuery.createComponent("FocusSwitcher", b)
}(jQuery),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            frameSliderItems: ".frameSliderItem"
        },
        _frameSliderItemDefaults: {
            $element: !1,
            $spriteSpinElement: !1,
            spriteSpinApi: !1,
            spriteSpinData: !1,
            dragControl: !1,
            frameCount: 0,
            framesSource: [],
            frameState: {
                position: 0,
                direction: "forward"
            }
        },
        multiSliderThreshold: 34,
        currentState: "desktop",
        touchState: "touch",
        sliderElementRef: ".sliderControls",
        sliderProgressRef: ".sliderProgress",
        slider: !1,
        desktopFramesRef: ".desktopSliderFrame",
        mobileFramesRef: ".mobileSliderFrame",
        spritespinFramesRef: ".spritespin-instance",
        spriteContainerContextRef: ".spriteContainerContext",
        spriteSpinApi: {},
        spriteSpinData: {},
        $spriteContainer: a(".spriteContainer", this.$element),
        $markerElement: a(".sliderMarker", this.$element),
        $markerContainer: a(".sliderMarkers", this.$element),
        $sliderTitles: a(".sliderTitle", this.$element),
        init: function() {
            var a = this;
            a.$element.offset();
            this.activeframeSliderItem = {}, this.activatedFrameSliderItems = [], this._setCurrentState(), this._setTouchState(), this._configSpriteSpin(), this._initframeSliderItem(this.ui("frameSliderItems").first()), this.$element.data("total") > 1 ? this._initRoyalSlider() : b.richsponsiveImage(), this._initEvents()
        },
        init_rtl: function() {
            this._frameSliderItemDefaults.frameState.direction = "backward"
        },
        _initframeSliderItem: function(b) {
            var c = this;
            this.activeframeSliderItem = !1;
            var d = this.ui("frameSliderItems").index(b);
            if (d in this.activatedFrameSliderItems) {
                this.activeframeSliderItem = this.activatedFrameSliderItems[d];
                var e = this.activeframeSliderItem.dragControl.getValue(),
                    f = this.activeframeSliderItem.frameCount > this.multiSliderThreshold ? 2 : 1;
                e[0] >= .75 ? f = 3 : e[0] <= .25 && (f = 1), this.activeframeSliderItem.dragControl.setStep(f, 1, !0)
            } else this.activeframeSliderItem = a.extend(!0, {}, c._frameSliderItemDefaults), this.activeframeSliderItem.$element = b, this.activatedFrameSliderItems[d] = this.activeframeSliderItem, this._initSpriteSpin(), this._initDragDealer(), this._initBackgroundOverlay(c.activeframeSliderItem);
            a(".headingLinear", b).Headings("linearLines"), this.activeframeSliderItem.$element.addClass("active")
        },
        _uninitframeSliderItem: function(a) {
            this.activeframeSliderItem.$element.removeClass("backgroundOverlayActive"), clearTimeout(this.activeframeSliderItem.dragControl.activePauseTimout)
        },
        _configSpriteSpin: function() {
            this._checkIndexOf(), SpriteSpin.mods.noBehavior || SpriteSpin.registerModule("noBehavior", {})
        },
        _initSpriteSpin: function() {
            var b = this,
                c = 0;
            this._getFramesData(), site.rtl && (c = this.activeframeSliderItem.frameCount, this.activeframeSliderItem.frameState.position = this.activeframeSliderItemframeCount), this.activeframeSliderItem.$spriteSpinElement.spritespin({
                source: b.activeframeSliderItem.framesSource,
                frame: c,
                width: a(this.spriteContainerContextRef, b.activeframeSliderItem.$element).width(),
                height: a(this.spriteContainerContextRef, b.activeframeSliderItem.$element).height(),
                animate: !1,
                frameTime: 40,
                behavior: "noBehavior",
                renderer: "touch" !== b.touchState || site.utils.isWindowsPhone() ? "canvas" : "image",
                preloadCount: b.activeframeSliderItem.frameCount,
                onLoad: function() {
                    b.activeframeSliderItem.$element.addClass("frames-loaded")
                }
            }), this.activeframeSliderItem.spriteSpinApi = this.activeframeSliderItem.$spriteSpinElement.spritespin("api"), this.activeframeSliderItem.spriteSpinData = this.activeframeSliderItem.$spriteSpinElement.data("spritespin")
        },
        _initDragDealer: function() {
            var c = this,
                d = 0,
                e = a(this.sliderElementRef, this.activeframeSliderItem.$element).get(0),
                f = a(this.sliderProgressRef, this.activeframeSliderItem.$element);
            site.rtl && (d = 1);
            var g = new b.Dragdealer(e, {
                steps: c.activeframeSliderItem.frameCount > c.multiSliderThreshold ? 3 : 2,
                x: d,
                dragStartCallback: function(b, d) {
                    a(this.handle).addClass("active"), c.activeframeSliderItem.$element.trigger("backgroundOverlay.on")
                },
                dragStopCallback: function(b, c) {
                    a(this.handle).removeClass("active")
                },
                animationCallback: function(a, b) {
                    var d = Math.ceil(c.activeframeSliderItem.frameCount * a);
                    c.activeframeSliderItem.$element.hasClass("frames-loaded") !== !1 && (c.activeframeSliderItem.spriteSpinApi.updateFrame(d), c.activeframeSliderItem.frameState.position = d, c._titleDisplay(d), site.rtl ? f.width(100 - 100 * a + "%") : f.width(100 * a + "%"))
                }
            });
            a(e).on("mousedown touchstart pointerdown MSPointerDown", function(a) {
                a.stopPropagation()
            }), this.activeframeSliderItem.dragControl = g
        },
        _initBackgroundOverlay: function(b) {
            var c = this,
                d = b.$element,
                e = a(c.sliderElementRef, d);
            d.hasClass("backgroundOverlay") && (d.prepend(a('<div class="backgroundOverlayElement"/>')), e.on("mouseenter touchstart", function() {
                d.trigger("backgroundOverlay.on")
            }), d.on("backgroundOverlay.on", function(a) {
                c._backgroundOverlayToggle(a)
            }), d.on("backgroundOverlay.off", function(a) {
                c._backgroundOverlayToggle(a)
            }))
        },
        _backgroundOverlayToggle: function(b) {
            var c = this,
                d = a(b.target),
                e = "on" === b.namespace,
                f = "backgroundOverlayActive";
            e ? (d.addClass(f), c._backgroundOverlayScroll.add(d)) : (d.removeClass(f), c._backgroundOverlayScroll.remove(d))
        },
        _backgroundOverlayScroll: {
            $element: null,
            elementHeight: 0,
            added: !1,
            add: function(c) {
                var d = this;
                d.added || (d.$element = c, d.elementHeight = c.height(), a(b).on("throttledScroll", a.proxy(d.check, this)), d.added = !0)
            },
            remove: function() {
                var c = this;
                a(b).off("throttledScroll", c.check), c.added = !1
            },
            check: function(c) {
                var d = this,
                    e = d.$element,
                    f = d.elementHeight,
                    g = e.offset(),
                    h = a(b).scrollTop(),
                    i = a(".SubNavigation").height() + a(".headerWrapper").height(),
                    j = h + a(b).height() <= g.top,
                    k = h + i >= f + g.top;
                (j || k) && e.trigger("backgroundOverlay.off")
            }
        },
        _initEvents: function() {
            var c = this;
            a(b).smartresize(function() {
                c._sliderResize(c)
            })
        },
        _initRoyalSlider: function() {
            var c = this,
                d = a(".royalSlider", this.$element).royalSlider({
                    arrowsNav: !0,
                    loop: !0,
                    keyboardNavEnabled: !1,
                    controlsInside: !1,
                    imageScaleMode: "none",
                    arrowsNavAutoHide: !1,
                    autoHeight: !0,
                    autoScaleSlider: !0,
                    autoScaleSliderWidth: 0,
                    autoScaleSliderHeight: 0,
                    slidesSpacing: 0,
                    imgWidth: "100%",
                    imgHeight: "100%",
                    sliderDrag: !0,
                    controlNavigation: "none",
                    thumbsFitInViewport: !1,
                    navigateByClick: !1,
                    autoPlay: {
                        enabled: !1
                    },
                    numImagesToPreload: 1,
                    transitionType: "move"
                });
            d = a(".royalSlider", this.$element).data("royalSlider"), d.ev.on("rsBeforeAnimStart", function() {
                c._uninitframeSliderItem(a(this.currSlide.content))
            }), d.ev.on("rsAfterSlideChange", function() {
                c._initframeSliderItem(a(this.currSlide.content)), b.richsponsiveImage(), c._sliderResize(c)
            }), b.richsponsiveImage()
        },
        _sliderResize: function(b) {
            var c, d = a(b.spritespinFramesRef, b.activeframeSliderItem.$element);
            if (b._setCurrentState(), c = b._getTargetFrames(), d.get(0) !== c.get(0)) d.spritespin("destroy").empty().removeClass(b.spritespinFramesRef.replace(".", "")), b._initSpriteSpin();
            else {
                var e = a(this.spriteContainerContextRef, b.activeframeSliderItem.$element).width(),
                    f = c.width();
                e !== f && c.spritespin({
                    width: e,
                    height: a(this.spriteContainerContextRef, b.activeframeSliderItem.$element).height()
                })
            }
        },
        _setCurrentState: function() {
            this.currentState = a(b).width() > 740 ? "desktop" : "mobile"
        },
        _setTouchState: function() {
            this.touchState = a("html").hasClass("touchCapability") ? "touch" : "notouch"
        },
        _titleDisplay: function(a) {
            var b = this.activeframeSliderItem.frameCount,
                c = Math.round(b / 8),
                d = "x";
            1 * c >= a ? d = 0 : a >= 3 * c && 5 * c > a ? d = 1 : a >= 7 * c && (d = 2), this._showtitle(d)
        },
        _showtitle: function(a) {
            this.activeframeSliderItem.$element.find(this.$sliderTitles).not('[data-item-position="' + a + '"]').removeClass("current"), this.activeframeSliderItem.$element.find(this.$sliderTitles).filter('[data-item-position="' + a + '"]').addClass("current")
        },
        _getFramesData: function() {
            this.activeframeSliderItem.$spriteSpinElement = this._getTargetFrames(), this.activeframeSliderItem.framesSource = this.activeframeSliderItem.$spriteSpinElement.data("frames"), this.activeframeSliderItem.frameCount = this.activeframeSliderItem.framesSource.length - 1
        },
        _getTargetFrames: function() {
            return "mobile" === this.currentState ? a(this.mobileFramesRef, this.activeframeSliderItem.$element) : a(this.desktopFramesRef, this.activeframeSliderItem.$element)
        },
        _checkIndexOf: function() {
            Array.prototype.indexOf || (Array.prototype.indexOf = function(a) {
                var b = this.length >>> 0,
                    c = Number(arguments[1]) || 0;
                for (c = 0 > c ? Math.ceil(c) : Math.floor(c), 0 > c && (c += b); b > c; c++)
                    if (c in this && this[c] === a) return c;
                return -1
            })
        },
        _isDeviceLandscape: function() {
            return "undefined" != typeof b.matchMedia && b.matchMedia("(orientation: landscape)").matches
        },
        _destroy: function() {}
    };
    jQuery.createComponent("FrameSlider", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        init: function() {
            var b = a(".autoIframe", this.$element),
                c = b.attr("data-src");
            b.attr("src", c), site.utils.isIOS() || b.iframeHeight({
                uuid: this.$element.attr("id")
            })
        }
    };
    jQuery.createComponent("FramedContent", e)
}(jQuery, window, document),
function(a) {
    var b = {
        _defaults: {},
        uiSelectors: {
            form: "#formDiv"
        },
        jqueryMigrate: "/resources/public/js/libs/jquery-migrate-1.2.1.js",
        init: function() {
            this.dataMode = "manual" === this.ui("form").data("mode"), this.loadJqueryMigrate()
        },
        loadJqueryMigrate: function() {
            a.getScript(this.jqueryMigrate).done(this.loadAvoka.bind(this))
        },
        loadAvoka: function() {
            a.getScript(this.ui("form").data("src")).done(this.initAvoka.bind(this))
        },
        initAvoka: function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.dataMode;
            if (a !== !0) {
                var b = this.ui("form").attr("id") || null,
                    c = this.ui("form").data("code") || null,
                    d = this.ui("form").data("attribute") || null;
                Avoka.SmartForm.WebPlugin.showEmbeddedForm({
                    id: b,
                    formCode: c,
                    prefillData: d
                })
            }
        }
    };
    jQuery.createComponent("FramedForm", b)
}(jQuery),
function(a, b, c, d) {
    var e = {
        _context: null,
        _canvas: null,
        _video: null,
        _dragger: null,
        _progressBar: null,
        _dragElement: null,
        _endHandleEl: null,
        _handleEl: null,
        _endHandleInner: null,
        _handleOuter: null,
        _infoSlides: null,
        _dragDealer: !1,
        _imageWidth: 1920,
        _imageHeight: 1080,
        _videoInitialised: !1,
        _videoPlaying: !1,
        _currentInteraction: !1,
        _videoExtension: null,
        _rotations: {
            Up: "bottom-to-top",
            Down: "top-to-bottom",
            Right: "left-to-right",
            Left: "right-to-left"
        },
        _resizeTimeout: !1,
        _element: {
            offsetX: 0,
            offsetY: 0,
            width: 0,
            height: 0
        },
        _assetLoader: {
            isLoading: !1,
            assetsLoaded: 0,
            assetsToLoad: 0,
            downloadsStarted: 0
        },
        _endHandle: {
            left: 0,
            centre: 0,
            centreDifference: 0,
            transforms: {
                scale: 1.14
            }
        },
        _handle: {
            position: 0,
            centre: 0,
            right: 0,
            height: 0,
            width: 0,
            draggerHeight: 0,
            draggerWidth: 0
        },
        _isFlyThrough: !1,
        interactions: !1,
        _currentWidth: 0,
        _currentHeight: 0,
        _videoSpeed: 1,
        _isInsideTabbedContainer: !1,
        _uniqId: null,
        _componentInitialized: !1,
        _cleanup: function() {
            a(".no-click", this._videoContainer).remove(), a("video", this._videoContainer).remove(), a(".dragdealer", this._videoContainer).remove(), a("canvas", this._videoContainer).remove(), a(".data-slides", this.$element).removeClass("gone")
        },
        _checkIfInsideTabbedContainer: function() {
            this._isInsideTabbedContainer = !!this.$element.parents(".TabbedContainer").not('[data-total="1"]').length, this._isInsideTabbedContainer && (this._tabbedContainer = this.$element.parents(".TabbedContainer"), a(".GesturedVideoSequence", this.$element).addClass("insideTabs")), this._checkTouch()
        },
        _checkTouch: function() {
            a("html").hasClass("touchCapability") && (this._isInsideTabbedContainer ? a(".GesturedVideoSequence", this.$element).addClass("touch") : this.$element.addClass("touch"))
        },
        _getInteractions: function() {
            this.interactions = [], a(".interaction-item", this.$element).each(function(b, c) {
                this.interactions.push(a(c).data("interaction"))
            }.bind(this))
        },
        init: function() {
            this._uniqId = Math.floor(100 * Math.random()), this._checkIfInsideTabbedContainer(), this._getFullscreenFunctionName(), this._getInteractions(), this._setImageSize(), this._getElements(), this._isInsideTabbedContainer && this._cleanup(), this._noClick = this._appendElement("div", "no-click", this._videoContainer), this._setElementSize(), this._getVideoExtension(), this._createVideo(), this._bindVideoEvents(), this._isFlyThrough || this._createCanvas(), a(".canvas", this.$element).css({
                opacity: 0
            }), this._clickToInteractOverlay = a(".click-to-interact-overlay", this.$element), site.utils.isBreakpointSmall() && this._clickToInteractOverlay.height(.5625 * a(b).width()), this._clickToInteract = a(".click-to-interact", this.$element), this._clickToInteract.click(function() {
                this._clickToInteract.hide(), this._loadingOverlay(), this._rId = b.requestAnimationFrame(this._drawLoader.bind(this)), this._delayedInit()
            }.bind(this)), a(b).on("resize.gesturedvideo-" + this._uniqId, this._onResize.bind(this)), this._setInitialState()
        },
        _setInitialState: function() {
            this._calculatePositions(), this._setVideoCss(), this._infoSlides.hide(), a(this._infoSlides[0]).show(), this.interactions[0].images[this._imageSize].length ? this._loadImage(this.interactions[0].images[this._imageSize][0]) : this._isFlyThrough ? this._videoEl.poster = this.interactions[0].video + "-poster.jpg" : (this._videoEl.poster = this.interactions[0].poster ? this.interactions[0].poster : "", site.utils.isIOS() && a("<div />", {
                "class": "fake-poster",
                css: {
                    "background-image": "url(" + this._videoEl.poster + ")"
                }
            }).appendTo(this._videoContainer)), site.utils.isBreakpointSmall() ? this._clickToInteract.css({
                top: .5625 * this.$element.width() / 2 - this._clickToInteract.height() / 2,
                left: this.$element.width() / 2 - this._clickToInteract.width() / 2
            }) : (this._clickToInteract.css({
                left: this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width() + ((this.$element.width() - (this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width())) / 2 - this._clickToInteract.width() / 2)
            }), this._centerInfoSlide())
        },
        _delayedInit: function() {
            this._currentInteraction = 0, this._setVideo(), this._loadFiles(), this._isFlyThrough || this._loadImage(this.interactions[this._currentInteraction].images[this._imageSize][0], !0), this._dragDealer && this._dragDealer.reflow(), this._isFlyThrough && this._setupPrevNext(), this._checkMobileTablet(), this._setupInfoSlides()
        },
        _loadingOverlay: function() {
            this._overlay = a("<div class='loadingOverlay'/>"), this._overlay.appendTo(this.$element), this._loadingCanvas = c.createElement("canvas"), this._loadingCtx = this._loadingCanvas.getContext("2d"), this._loadingCtx.mozImageSmoothingEnabled = this._imageSmoothing, this._loadingCtx.webkitImageSmoothingEnabled = this._imageSmoothing, this._loadingCtx.msImageSmoothingEnabled = this._imageSmoothing, this._loadingCtx.imageSmoothingEnabled = this._imageSmoothing, this._loadingCanvas.width = 100, this._loadingCanvas.height = 100, a(this._loadingCanvas).addClass("loading-canvas").appendTo(this._overlay), site.utils.isBreakpointSmall() || a(this._loadingCanvas).css({
                left: this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width() + ((this.$element.width() - (this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width())) / 2 - a(this._loadingCanvas).width() / 2)
            }), this._loader = new Loader(this._loadingCtx, this._loadingCanvas, 50, 50, 44, "#fff", 30, !1, "fadeOut", 1, this, this._spinnerComplete)
        },
        _drawLoader: function() {
            this._rId && this._loadingCtx.clearRect(0, 0, this._loadingCanvas.width, this._loadingCanvas.height), this._loader && this._loader.draw(), this._rId && (this._rId = b.requestAnimationFrame(this._drawLoader.bind(this)))
        },
        _fadeLoader: function() {
            this._removeLoader(), this._isFlyThrough || (this._setupDrag(), this.interactions[0].images[this._imageSize].length && (this._positionInitialDrag(), this._createDrag(), this._getEndHandleCoords(), this._positionDragdealer())), this.interactions[0].images[this._imageSize].length && setTimeout(function() {
                this._handleEl.css({
                    opacity: 1
                }), this._handleClone.remove()
            }.bind(this), 1e3)
        },
        _removeLoader: function(b) {
            site.utils.isIOS() && this._videoContainer.find(".fake-poster").hide(), this._clickToInteractOverlay.transition({
                opacity: 0
            }, 500, function() {
                this._clickToInteractOverlay.hide()
            }.bind(this)), a(this._loadingCanvas).transition({
                opacity: 0
            }, 1e3, function() {
                a(this._overlay).remove(), this._componentInitialized = !0
            }.bind(this))
        },
        _spinnerComplete: function() {
            this._rId = null, setTimeout(function() {
                this._loader = null, this._fadeLoader()
            }.bind(this), 250)
        },
        _onResize: function() {
            clearTimeout(this._resizeTimeout), this._resizeTimeout = setTimeout(function() {
                this._currentWidth !== b.innerWidth && (this._setElementSize(), this._calculatePositions(), this._clickToInteractOverlay && (site.utils.isBreakpointSmall() ? this._clickToInteractOverlay.height(.5625 * a(b).width()) : this._clickToInteractOverlay.height("")), this._isFlyThrough || this._loadImage(this.interactions[this._currentInteraction || 0].images[this._imageSize][0], !0), this._dragDealer && (this._dragDealer.reflow(), this._getEndHandleCoords()), this._dragger && this._positionNoClick(), site.utils.isBreakpointSmall() ? (this._clickToInteract.css({
                    left: ""
                }), this._clickToInteract.css({
                    left: (this.$element.width() - this._clickToInteract.width()) / 2,
                    top: .5625 * this.$element.width() / 2 - this._clickToInteract.height() / 2
                })) : this._clickToInteract.css({
                    left: this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width() + ((this.$element.width() - (this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width())) / 2 - this._clickToInteract.width() / 2),
                    top: ""
                }), this._setVideoCss(), this._centerInfoSlide(), this._positionDragdealer())
            }.bind(this), 500)
        },
        _positionDragdealer: function() {
            if (this._dragger) {
                var a = this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width() + ((this.$element.width() - (this._infoSlidesContainer.offset().left + this._infoSlidesContainer.width())) / 2 - this._dragger.width() / 2);
                site.utils.isBreakpointSmall() ? this._dragger.css({
                    left: ""
                }) : this._dragger.css({
                    left: a
                }), this._positionNoClick(), this._videoPlaying || this._dragger.css({
                    opacity: 1
                })
            }
        },
        _setImageSize: function() {
            this._imageSize = "desktop", b.innerWidth < 600 && (this._imageSize = "mobile")
        },
        _getFullscreenFunctionName: function() {
            var a = c.createElement("video");
            a.exitFullscreen ? this._exitFullscreenFunc = "exitFullscreen" : a.msExitFullscreen ? this._exitFullscreenFunc = "msExitFullscreen" : a.mozCancelFullScreen ? this._exitFullscreenFunc = "mozCancelFullScreen" : a.webkitExitFullscreen ? this._exitFullscreenFunc = "webkitExitFullscreen" : this._exitFullscreenFunc = !1
        },
        _setElementSize: function() {
            var c;
            c = site.utils.isBreakpointSmall() ? Math.floor(9 / (16 / a(b).width())) : site.stickyNavigationEnabled ? a(b).height() - site.utils.getStickyNavHeight(this.$element.offset().top) : a(b).height() - a("#header").height(), this._videoContainer.height(Math.round(c))
        },
        _checkMobileTablet: function() {
            !site.utils.isIOS() && "undefined" == typeof site.utils.getAndroidVersion() || this._videoInitialised || this._videoFirst ? this._videoInitialised = !0 : (this._videoInitialised = !1, this._videoEl.play(), this._videoEl.pause(), this._videoEl.currentTime = 0, this._dragger && (this._handleEl.on("touchstart", this._addHoverClass.bind(this)), this._handleEl.on("touchend", this._removeHoverClass.bind(this))))
        },
        _addHoverClass: function() {
            this._handleEl.addClass("hovered")
        },
        _removeHoverClass: function() {
            this._handleEl.removeClass("hovered")
        },
        _setupInfoSlides: function() {
            this._isFlyThrough || this._infoSlidesContainer.addClass("noPagination"), this._updateInfoSlide()
        },
        _centerInfoSlide: function() {
            var a = (this._videoContainer.height() - this._infoSlidesContainer.outerHeight()) / 2;
            this._infoSlidesContainer.css({
                top: a
            })
        },
        _setupPrevNext: function() {
            this._isFlyThrough && (this._nextButton.on("click", function(a) {
                a.preventDefault(), this._nextButton.hasClass("inactive") || this._videoEl.play()
            }.bind(this)), this._prevButton.on("click", function(a) {
                a.preventDefault(), this._prevButton.hasClass("inactive") || this._reverseVideoEl.play()
            }.bind(this)), this._prevButton.addClass("inactive"))
        },
        _initFlyThrough: function() {
            a(".dragdealer", this.$element).remove()
        },
        _getAsset: function() {
            var a = new XMLHttpRequest,
                b = this.interactions[this._currentInteraction].images[this._imageSize][this._assetLoader.downloadsStarted];
            a.addEventListener("load", function(a) {
                this._assetLoader.assetsLoaded++, this._assetLoader.assetsLoaded === this._assetLoader.assetsToLoad && (this._assetLoader.isLoading = !1, this.$element.removeClass("loading"), this._loader && this._loader.loaded())
            }.bind(this)), a.open("GET", b), a.send()
        },
        _loadFiles: function() {
            var a;
            for (this._assetLoader.downloadsStarted = 0, this._assetLoader.assetsLoaded = 0, this._assetLoader.assetsToLoad = 0, !this._assetLoader.isLoading && !this._isFlyThrough && this.interactions[this._currentInteraction].images[this._imageSize].length > 0 ? (this._assetLoader.assetsToLoad = this.interactions[this._currentInteraction].images[this._imageSize].length, this._assetLoader.isLoading = !0, this.$element.addClass("loading"), this._currentInteraction > 0 && (a = new XMLHttpRequest, a.open("GET", this.interactions[this._currentInteraction].video[this._videoExtension]), a.send())) : this._currentInteraction > 0 && (a = new XMLHttpRequest, a.open("GET", this.interactions[this._currentInteraction].video[this._videoExtension]), a.send()), !this._assetLoader.assetsToLoad && this._loader && this._loader.loaded(); this._assetLoader.downloadsStarted < this._assetLoader.assetsToLoad;) this._getAsset(), this._assetLoader.downloadsStarted++
        },
        _getEndHandleCoords: function() {
            this._dragger && (this._verticalDrag ? (this._endHandle.top = parseInt(this._endHandleEl.offset().top - this._dragger.offset().top, 10), this._endHandle.centre = parseInt(this._endHandle.top + this._endHandleEl.outerHeight() / 2, 10), this._endHandle.centreDifference = parseInt(this._endHandleEl.outerHeight() / 2 + this._handleEl.height() / 2, 10), this._endHandle.initialWidth = this._endHandleEl.outerWidth()) : (this._endHandle.left = parseInt(this._endHandleEl.offset().left - this._dragger.offset().left, 10), this._endHandle.centre = parseInt(this._endHandle.left + this._endHandleEl.outerWidth() / 2, 10), this._endHandle.centreDifference = parseInt(this._endHandleEl.outerWidth() / 2 + this._handleEl.width() / 2, 10), this._endHandle.initialHeight = this._endHandleEl.outerHeight()), this._handle.height = this._handleEl.height(), this._handle.width = this._handleEl.width(), this._handle.draggerHeight = this._dragger.height(), this._handle.draggerWidth = this._dragger.width(), this._rightIndicator = a(".right-indicator", this._dragger))
        },
        _updateHandleCoords: function() {
            this._verticalDrag ? (this._handle.centre = this._handle.position + this._handle.height / 2, this._handle.bottom = this._handle.position + this._handle.height) : (this._handle.centre = this._handle.position + this._handle.width / 2, this._handle.right = this._handle.position + this._handle.width)
        },
        _setProgressLineSize: function() {
            this._verticalDrag && this._reverseDrag ? this._rightIndicator.css({
                bottom: Math.round(this._handle.draggerHeight - this._handle.position)
            }) : this._verticalDrag ? this._rightIndicator.css({
                top: Math.round(this._handle.bottom)
            }) : this._reverseDrag ? this._rightIndicator.css({
                right: Math.round(this._handle.draggerWidth - this._handle.position)
            }) : this._rightIndicator.css({
                left: Math.round(this._handle.right)
            })
        },
        _doHandleTransition: function(b) {
            var c, d = 100 / this._endHandle.centreDifference,
                e = (this._endHandle.centreDifference - b) * d;
            c = this._verticalDrag ? this._endHandle.initialWidth / (this._handle.width / 1.25) : this._endHandle.initialHeight / (this._handle.height / 1.25);
            var f = (c - 1) / 100 * e + 1,
                g = 1 - .01 * e,
                h = 1 - .02 * e;
            this._endHandleEl.css({
                transform: "scale(" + f + ")"
            }), a(".smaller", this._endHandleEl).css({
                opacity: h
            }), this._handleOuter.css({
                opacity: g
            })
        },
        _resetHandleTransition: function() {
            this._endHandleEl.css({
                transform: "scale(1)"
            }), a(".smaller", this._endHandleEl).css({
                opacity: 1
            }), this._handleOuter.css({
                opacity: 1
            })
        },
        _checkHandlePosition: function() {
            var a;
            a = this._reverseDrag ? this._handle.centre - this._endHandle.centre : this._endHandle.centre - this._handle.centre, a <= this._endHandle.centreDifference ? this._doHandleTransition(a) : this._resetHandleTransition()
        },
        _dragChange: function() {
            this._updateHandleCoords(), this._setProgressLineSize(), this._checkHandlePosition()
        },
        _addNoTransitionClass: function() {
            this._infoSlidesContainer.hasClass("noTransition") || this._infoSlidesContainer.addClass("noTransition")
        },
        _getInfoSlideOpacity: function(a) {
            return this._reverseDrag ? 1 - 2 * (1 - a) : 1 - 2 * a
        },
        _setInfoSlideOpacity: function(a) {
            site.utils.isBreakpointSmall() || this._infoSlidesContainer.css({
                opacity: this._getInfoSlideOpacity(a)
            })
        },
        _loadFrame: function(a) {
            var b, c = this.interactions[this._currentInteraction].images[this._imageSize],
                d = 1 / (c.length - 1);
            b = this._reverseDrag ? Math.round(c.length - a / d) : Math.round(a / d), this._loadImage(c[b])
        },
        _checkPlay: function(a) {
            (1 === a && !this._reverseDrag || 0 === a && this._reverseDrag) && this._videoEl.play()
        },
        _getFrame: function(a, b) {
            this._dragger.haveElementDimensions || (this._getEndHandleCoords(), this._dragger.haveElementDimensions = !0);
            var c, d = this._verticalDrag ? b : a,
                e = 100 * d;
            c = this._verticalDrag ? (this._handle.draggerHeight - this._handle.height) / 100 : (this._handle.draggerWidth - this._handle.width) / 100, this._handle.position = c * e, this._addNoTransitionClass(), this._dragChange(), this._setInfoSlideOpacity(d), this._loadFrame(d), this._checkPlay(d)
        },
        _dragStopCallback: function() {
            this._verticalDrag && this._reverseDrag ? this._dragDealer.setValue(0, 1, !1) : this._verticalDrag ? this._dragDealer.setValue(0, 0, !1) : this._reverseDrag ? this._dragDealer.setValue(1, 0) : this._dragDealer.setValue(0, 0)
        },
        _animationCallback: function(a, b) {
            !this._videoPlaying && this._componentInitialized && this._getFrame(a, b)
        },
        _getExtraDragdealerOptions: function(a) {
            return this._dragger.hasClass("bottom-to-top") ? (a.y = 1, a.vertical = !0, this._reverseDrag = !0, this._verticalDrag = !0) : this._dragger.hasClass("top-to-bottom") ? (a.vertical = !0, this._verticalDrag = !0, this._reverseDrag = !1) : this._dragger.hasClass("left-to-right") ? (this._verticalDrag = !1, this._reverseDrag = !1) : this._dragger.hasClass("right-to-left") && (a.x = 1, this._reverseDrag = !0, this._verticalDrag = !1), a
        },
        _getDragdealerOptions: function() {
            var a = {
                animationCallback: this._animationCallback.bind(this),
                dragStopCallback: this._dragStopCallback.bind(this),
                snap: !1,
                slide: !1,
                steps: 2,
                speed: .1,
                tapPauseTimeout: 0,
                animationDuration: 0
            };
            return a = this._getExtraDragdealerOptions(a)
        },
        _resetDragDealer: function() {
            this._dragDealer && this._dragDealer.unbindEventListeners(), this._dragger && this._dragger.remove(), a(".dragdealer", this._videoContainer) && a(".dragdealer", this._videoContainer).remove()
        },
        _getDragElements: function() {
            this._dragger = a(".dragdealer", this._videoContainer), this._handleEl = a(".handle", this._dragger), this._endHandleInner = a(".handle-end .handle-end-inner", this._dragger), this._handleOuter = a(".handle .handle-outer", this._dragger), this._endHandleEl = a(".handle-end", this._dragger)
        },
        _setupDrag: function() {
            if (this._resetDragDealer(), 0 === this.interactions[this._currentInteraction].images[this._imageSize].length) return this._videoEl.play(), this._noClick.css({
                zIndex: -1
            }), this._canvas.addClass("gone"), this._dragger = !1, this._videoFirst = !0, !1;
            var a = this._dragDealerTemplate.clone(),
                b = this._rotations[this.interactions[this._currentInteraction].rotation];
            a.addClass(b), (this._currentInteraction > 0 || this._lastPlayed) && a.addClass("gone"), this._videoContainer.prepend(a), this._getDragElements()
        },
        _positionInitialDrag: function() {
            var a = {
                    Up: "top",
                    Down: "bottom",
                    Right: "right",
                    Left: "left"
                },
                b = {
                    opacity: 1,
                    position: "absolute"
                };
            this._handleClone = this._handleEl.clone(), this._handleClone.addClass("handleClone"), site.utils.isBreakpointSmall() ? b[a[this.interactions[0].rotation]] = "calc(50% - 30px)" : b[a[this.interactions[0].rotation]] = "calc(50% - 42px)", this._handleClone.css(b), this._handleClone.appendTo(this._dragger), this._handleEl.css({
                opacity: 0
            }), b = {}, b[a[this.interactions[0].rotation]] = "calc(50% - 44px)", this._endHandleEl.css(b), b[a[this.interactions[0].rotation]] = "", this._endHandleEl.transition(b, 800), b = {}, ("Right" === this.interactions[0].rotation || "Left" === this.interactions[0].rotation) && (b.top = 0), site.utils.isBreakpointSmall() ? b[a[this.interactions[0].rotation]] = "calc(50% + 21px)" : b[a[this.interactions[0].rotation]] = "calc(50% + 60px)", this._handleClone.transition(b, 800)
        },
        _createDrag: function() {
            this._dragDealer = new Dragdealer(this._dragger[0], this._getDragdealerOptions()), this._positionNoClick()
        },
        _positionNoClick: function() {
            var a, b, c, d, e = this._dragger.offset(),
                f = this.$element.offset(),
                g = e.left - f.left,
                h = e.top - f.top,
                i = this._dragger.width(),
                j = this._dragger.height(),
                k = this._handleEl.width(),
                l = this._handleEl.height();
            this._verticalDrag ? (a = h + l, b = g, d = i, c = j - l) : (a = h, b = g + k, d = i - k, c = j), this._reverseDrag && this._verticalDrag ? a = h : this._reverseDrag && (b = g), this._noClick.css({
                top: a,
                left: b,
                width: d,
                height: c,
                zIndex: 3
            })
        },
        _hideElements: function() {
            this._canvas.addClass("gone"), this._dragger && this._dragger.addClass("gone")
        },
        _updateInfoSlide: function() {
            this._infoSlides.hide(), a(this._infoSlides[this._currentInteraction]).show(), site.utils.isBreakpointSmall() || this._centerInfoSlide()
        },
        _showInfoSlide: function() {
            a(this._infoSlidesContainer).removeClass("gone")
        },
        _showReverseElements: function() {
            this._reverseVideo.addClass("gone"), this._video.removeClass("gone"), this._updateInfoSlide()
        },
        _showForwardElements: function() {
            var a = 0;
            this._lastPlayed && (a = 200), setTimeout(function() {
                this._dragger && (this._canvas.removeClass("gone"), this._dragger.removeClass("gone"))
            }.bind(this), a)
        },
        _showElements: function() {
            this._showForwardElements()
        },
        _startVideo: function() {
            this._videoPlaying = !0, this._hideElements(), site.utils.isBreakpointSmall() || this._infoSlidesContainer.addClass("gone").removeClass("noTransition").css("opacity", ""), this._currentInteraction < this.interactions.length - 1 ? (this._nextInteraction(), this._setupDrag(), this._createDrag(), this._loadImage(this.interactions[this._currentInteraction].images[this._imageSize][0]), site.utils.isBreakpointSmall() || this._updateInfoSlide(), this._loadFiles()) : (this._currentInteraction = 0, this._lastPlayed = !0, this._setupDrag(), this.interactions[this._currentInteraction].images[this._imageSize].length && (this._createDrag(), this._loadImage(this.interactions[this._currentInteraction].images[this._imageSize][0])), site.utils.isBreakpointSmall() || this._updateInfoSlide())
        },
        _videoPlay: function() {
            a(".next, .prev", this.$element).removeClass("inactive"), this._videoInitialised ? this._startVideo() : (this._videoEl.pause(), this._videoEl.currentTime = 0, this._videoInitialised = !0, this.$element.addClass("videoInitialised"))
        },
        _checkLastPlayed: function() {
            return this._lastPlayed && (this._videoContainer.addClass("gone"), setTimeout(function() {
                this._videoContainer.removeClass("gone"), this._lastPlayed = !1, this._clickToInteractOverlay.css({
                    opacity: ""
                }).show(), this._clickToInteract.show()
            }.bind(this), 1e3), this._isInsideTabbedContainer) ? (this.$element.parents(".TabbedContainer").TabbedContainer("nextTab"), !0) : !1
        },
        _videoEnded: function() {
            if (this._exitFullscreenFunc && this._videoEl[this._exitFullscreenFunc](), !this._checkLastPlayed()) {
                site.utils.isBreakpointSmall() && this._updateInfoSlide(), this._videoPlaying = !1;
                var a = 0;
                this._lastPlayed && (a = 1e3), setTimeout(function() {
                    this._showInfoSlide()
                }.bind(this), a), setTimeout(function() {
                    this._showElements()
                }.bind(this), a - 150), 0 === a && (a = 200), setTimeout(function() {
                    this._setVideo()
                }.bind(this), a), this._dragger && !this._lastPlayed && (this._setupDrag(), this._positionDragdealer(), this._createDrag(), this._dragger.css({
                    opacity: 1
                }))
            }
        },
        _canPlay: function() {
            this._video.removeClass("gone"), this._videoEl.removeEventListener("canplay", this._canPlay)
        },
        _bindVideoEvents: function() {
            this._isFlyThrough ? (this._videoEl.addEventListener("play", this._startFlythrough.bind(this)), this._videoEl.addEventListener("ended", this._endFlythrough.bind(this)), this._reverseVideoEl.addEventListener("play", this._startReverseFlythrough.bind(this)), this._reverseVideoEl.addEventListener("ended", this._endReverseFlythrough.bind(this))) : (this._videoEl.addEventListener("play", this._videoPlay.bind(this)), this._videoEl.addEventListener("ended", this._videoEnded.bind(this)), this._videoEl.addEventListener("canplay", this._canPlay.bind(this)), this._videoEl.addEventListener("pause", function() {
                this._videoEl.currentTime !== this._videoEl.duration && site.utils.isIOS() && 0 !== this._videoEl.currentTime && this._videoEnded()
            }.bind(this)))
        },
        _previousInteraction: function() {
            this._currentInteraction > 0 && this._currentInteraction--
        },
        _nextInteraction: function() {
            this._currentInteraction || 0 === this._currentInteraction ? this._currentInteraction++ : this._currentInteraction = 0, 0 === this._currentInteraction && (this._setVideo(), this._loadFiles())
        },
        _setVideo: function() {
            this._videoEl.src = this._getVideo(), "" !== this.interactions[this._currentInteraction].poster && "undefined" != typeof this.interactions[this._currentInteraction].poster ? (this._videoEl.poster = this.interactions[this._currentInteraction].poster, site.utils.isIOS() && 0 === this._currentInteraction && this._videoContainer.find(".fake-poster").show()) : this._videoEl.removeAttribute("poster"), this._isFlyThrough && (this._videoEl.poster = this._getPoster()), this._videoEl.playbackRate = this._videoSpeed
        },
        _getPoster: function() {
            return this._isFlyThrough ? this.interactions[this._currentInteraction].video + "-poster.jpg" : this.interactions[this._currentInteraction].images[this._imageSize][this.interactions[this._currentInteraction].images[this._imageSize].length - 1]
        },
        _getVideo: function() {
            return this.interactions[this._currentInteraction].video[this._videoExtension]
        },
        _resetElements: function() {
            this._element.width = 0, this._element.height = 0, this._element.offsetX = 0, this._element.offsetY = 0
        },
        _getPositions: function(a) {
            this._element.width = Math.round(a.elementWidth), this._element.height = Math.round(a.elementHeight), this._element.offsetX = 0, this._element.offsetY = 0, a.elementWidth / a.ratio > a.elementHeight ? (this._element.width = Math.round(a.elementWidth), this._element.height = Math.round(a.elementWidth / a.ratio), this._element.offsetY = Math.round((a.elementHeight - a.elementWidth / a.ratio) / 2), this._element.offsetX = 0) : a.elementWidth / a.ratio < a.elementHeight && (this._element.height = Math.round(a.elementHeight), this._element.width = Math.round(a.elementHeight * a.ratio), this._element.offsetX = Math.round((a.elementWidth - a.elementHeight * a.ratio) / 2), this._element.offsetY = 0)
        },
        _setVideoCss: function() {
            this._video.css({
                height: this._element.height,
                width: this._element.width,
                top: this._element.offsetY,
                left: this._element.offsetX
            }), this._isFlyThrough && this._reverseVideo.css({
                height: this._element.height,
                width: this._element.width,
                top: this._element.offsetY,
                left: this._element.offsetX
            })
        },
        _calculatePositions: function() {
            this._currentWidth = b.innerWidth, this._currentHeight = b.innerHeight;
            var a = this._imageWidth / this._imageHeight,
                c = this._videoContainer.height(),
                d = this._videoContainer.width();
            this._isFlyThrough || (this._canvasEl.height = c, this._canvasEl.width = d), this._getPositions({
                elementWidth: d,
                elementHeight: c,
                ratio: a
            })
        },
        _getElements: function() {
            this._videoContainer = a(".video-container", this.$element), this._infoSlides = a(".info-slide", this.$element), this._infoSlidesContainer = a(".data-slides", this.$element), this._isFlyThrough ? (this._prevButton = a(".prev", this._infoSlidesContainer), this._nextButton = a(".next", this._infoSlidesContainer)) : this._dragDealerTemplate = a(".ddtemplate .dragdealer", this.$element)
        },
        _getVideoExtension: function() {
            var a = c.createElement("video"),
                d = {
                    webm: a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, ""),
                    mp4: a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, "")
                },
                e = "1080";
            b.innerWidth <= 360 ? e = "360" : b.innerWidth <= 480 ? e = "480" : b.innerWidth <= 720 && (e = "720");
            for (var f in d) "" !== d[f] && (this._videoExtension = "url" + e + f)
        },
        _appendElement: function(b, d, e, f) {
            var g = c.createElement(b);
            if (null !== f && "undefined" != typeof f)
                for (var h in f) g[h] = f[h];
            return "undefined" != typeof d && null !== d && (g.className = d), e.append(g), a(g)
        },
        _createVideo: function() {
            this._video = this._appendElement("video", "forward", this._videoContainer), this._videoEl = this._video[0], this._isFlyThrough && (this._reverseVideo = this._appendElement("video", "reverse gone", this._videoContainer), this._reverseVideoEl = this._reverseVideo[0])
        },
        _createCanvas: function() {
            this._canvas = this._appendElement("canvas", null, this._videoContainer), this._canvasEl = this._canvas[0], this._context = this._canvasEl.getContext("2d")
        },
        _drawImage: function(a) {
            this._context.clearRect(this._element.offsetX, this._element.offsetY, this._element.width, this._element.height), this._context.drawImage(a, this._element.offsetX, this._element.offsetY, this._element.width, this._element.height)
        },
        _loadImage: function(a, b) {
            if ("undefined" == typeof a) return !1;
            var c;
            ("undefined" != typeof b && b === !0 || this._loadedImage !== a) && (c = new Image, c.onload = function() {
                this._loadedImage = a, this._drawImage(c)
            }.bind(this), c.src = a)
        },
        _destroy: function() {
            a(b).off("resize.gesturedvideo-" + this._uniqId), this._videoPlaying && (this._videoEl.pause(), this._videoEl.currentTime = 0), this._videoPlaying = !1, this._videoInitialised = !1, this._currentInteraction = !1, this._clickToInteract.off(), this._cleanup(), this._componentInitialized = !1
        }
    };
    jQuery.createComponent("GesturedVideoSequence", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _googleMapsJsUrl: "//maps.googleapis.com/maps/api/js?callback=site.gmapsLoaded",
        mapObject: !1,
        zoom: 6,
        position: {
            lat: 52.4480957,
            lng: -1.7214052
        },
        controls: !0,
        init: function() {
            return this._initEvents(), this._setData(), "object" === ("undefined" == typeof google ? "undefined" : _typeof(google)) && "object" === _typeof(google.maps) ? void this._initMap() : void this.loadGoogleMaps()
        },
        _setData: function() {
            var a = ["zoom", "position", "libraries", "type", "controls", "scrollwheel", "doubleclickzoom", "clientid", "apikey"];
            for (var b in a) {
                var c = a[b],
                    d = this.$element.data(c);
                "undefined" != typeof d ? this[c] = d : this[c] = null
            }
        },
        _initMap: function() {
            var a = {
                center: this.position,
                zoom: this.zoom
            };
            null !== this.controls && (a.disableDefaultUI = !this.controls), null !== this.doubleclickzoom && (a.disableDoubleClickZoom = !this.doubleClickZoom), this.type && (a.mapTypeId = google.maps.MapTypeId[this.type.toUpperCase()]), this.scrollwheel || (a.scrollwheel = !1), this.mapObject = new google.maps.Map(this.$element.get(0), a)
        },
        _initEvents: function() {
            this.$element.on("api:ready", this._initMap.bind(this))
        },
        loadGoogleMaps: function() {
            var a = c.createElement("script");
            this.libraries && (this._googleMapsJsUrl += "&libraries=" + this.libraries), this.clientid ? this._googleMapsJsUrl += "&client=" + this.clientid : this.apikey ? this._googleMapsJsUrl += "&key=" + this.apikey : "" !== site.googleMapsClientId ? this._googleMapsJsUrl += "&client=" + site.googleMapsClientId : "" !== site.googleMapsAPIKey && (this._googleMapsJsUrl += "&key=" + site.googleMapsAPIKey), a.type = "text/javascript", a.src = this._googleMapsJsUrl, c.body.appendChild(a)
        },
        _drawRoutes: function() {},
        getMapObject: function() {
            return this.mapObject
        },
        _destroy: function() {}
    };
    jQuery.createComponent("GoogleMap", e)
}(jQuery, window, document),
function(a, b) {
    var c = {
        stickyNavigationActive: !1,
        fieldInFocus: !1,
        _$window: null,
        _$inPageNav: null,
        _reducedLayout: !1,
        _isNaaS: !1,
        init: function() {
            var c = this;
            this._isNaaS = this.$element.hasClass("dxnav-header"), this._$window = a(b), this._$inPageNav = a(".InPageNavigation"), this._setNavType(), this._setBodyPadding(), this._setNavHeight(!0), this._setNavPosition(), this._adjustHeaderOnSearchActiveForIOS(), this._$window.smartresize(function() {
                c.fieldInFocus || (c._setNavType(), c._setNavHeight(), c._setNavPosition(), c._setBodyPadding())
            }), this._$window.scroll(function() {
                c._setNavHeight(), c._setNavPosition(), c._currentBodyPadding = parseInt(a("body").css("padding-top"), 10), c._isNaaS && c._currentBodyPadding !== site.utils.getStickyNavHeight() && c._setBodyPadding()
            }), a("input, textarea").on("focus", function() {
                var a = site.utils.getBreakpointSize();
                "large" === a && site.utils.isMobileDevice() && "landscape" === site.utils.getDeviceOrientation() && (c.$element.removeClass("stickyNavigation"), c.stickyNavigationActive = !1, c._setNavHeight(!1), c._setNavPosition(), c._setBodyPadding(), c.fieldInFocus = !0)
            }).on("blur", function(b) {
                var d = site.utils.getBreakpointSize();
                "large" === d && site.utils.isMobileDevice() && "landscape" === site.utils.getDeviceOrientation() && (c.$element.addClass("stickyNavigation"), c.stickyNavigationActive = !0, c._setNavHeight(!1), c._setNavPosition(), c._setBodyPadding(), c.fieldInFocus = !1, site.utils.scrollTo(a(b.target).offset().top - 5))
            }), this._$window.on("MCQ:slideChanging", function() {
                c._setBodyPadding()
            })
        },
        _setNavType: function() {
            var a = site.utils.getBreakpointSize();
            this.$element.hasClass("dxnav-header") ? this.$element.addClass("stickyNavigation") : "large" === a && site.stickyNavigationEnabled ? (this.$element.addClass("stickyNavigation"), this.stickyNavigationActive = !0) : (this.$element.removeClass("stickyNavigation"), this.stickyNavigationActive = !1)
        },
        _setNavHeight: function(a) {
            var b = this._$window.scrollTop(),
                c = this.$element,
                d = b > site.stickyNavigationTransitionPoint,
                e = "boolean" != typeof a ? !1 : a;
            d && !this._reducedLayout ? (c.addClass("reducedStickyNavigation"), this._$window.trigger("stickyNavigationChange"), this._reducedLayout = !0) : !d && this._reducedLayout && (c.removeClass("reducedStickyNavigation"), this._$window.trigger("stickyNavigationChange"), this._reducedLayout = !1), 0 === b || e ? c.addClass("notransition") : c.removeClass("notransition")
        },
        _setNavPosition: function() {
            if (this._$inPageNav.length > 0 && this._isFixedHeader()) {
                var a = "";
                if (this._$inPageNav.first().is(":visible")) {
                    var b = this._$window.scrollTop(),
                        c = this.$element.offset().top - b,
                        d = c + this.$element.outerHeight(),
                        e = this._$inPageNav.first().offset().top - b;
                    a = c + (e - d), a = a > 0 ? 0 : a, a += "px"
                }
                this.$element.css("top", a)
            } else(this._isFixedHeader() || this._isNaaS || this.$element.hasClass("scrollingDown")) && this._setNavToElementBlocker()
        },
        _setNavToElementBlocker: function() {
            var b = a(".block-header-nav");
            if (b.length) {
                var c = void 0,
                    d = void 0,
                    e = b.offset().top;
                if (this._isNaaS) {
                    var f = this.$element.find(".dxnav__breadcrumbs"),
                        g = this.$element.find(".dxnav-unique-nav"),
                        h = g.height(),
                        i = f.length ? f.height() : h;
                    d = e - h, c = e - i
                } else {
                    var j = this.$element.height();
                    d = e - j, c = d
                }
                var k = this._$window.scrollTop();
                k >= c ? (this.$element.addClass("scrollingDown"), 0 >= d ? (this.$element.css("top", ""), k <= a(".dxnav-unique-nav").height() && this.$element.removeClass("scrollingDown")) : this.$element.css("top", d)) : d > k && (this.$element.removeClass("scrollingDown"), this.$element.css("top", ""))
            }
        },
        _setBodyPadding: function() {
            var b = 0;
            this._isFixedHeader() && (b = site.utils.getStickyNavHeight()), a("body").css("padding-top", b)
        },
        _adjustHeaderOnSearchActiveForIOS: function() {
            if (site.utils.isIOS() && site.stickyNavigationEnabled) {
                var b = this.$element,
                    c = a(".searchText", b);
                c.on("focus", function() {
                    b.addClass("searchActive")
                }), c.on("blur", function() {
                    b.removeClass("searchActive")
                })
            }
        },
        _isFixedHeader: function() {
            return "fixed" === this.$element.css("position")
        }
    };
    jQuery.createComponent("Header", c)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _defaults: {
            onAtSmallBreakpoint: !1
        },
        uiSelectors: {
            headerBoxContent: ".headerBoxContent",
            headerBoxWidthElements: ".headerBox__tcoPrice, .headingTextMain, .headingTextSub .subtitle, .headingTextSub, .price, .primaryLinkWithStyle, .secondaryLinkContainer, .caveat, .bodyText, .totalCost, .bodyText, .headerBox__slug, .headerBox__heroTitle, .headerBox__title, .headerBox__heroCopy, .headerBox__copy, .headerBox__price",
            headingTextMain: ".headingTextMain, headerBox__content",
            totalCostElement: ".totalCost"
        },
        _widestElementWidth: 0,
        _resizeBound: null,
        init: function() {
            var c = this;
            this._checkTotalCostPriceWidth(), this._checkOnlyHasPrimaryHeading(), this._initRetailerPage(), a(b).on("load", function() {
                c._resizeHeaderBox()
            }), this._resizeBound = this._resizeHeaderBox.bind(this), a(b).on("resize", this._resizeBound), this._tcoOrientationCheck(), a(b).on("orientationchange", this._tcoOrientationCheck)
        },
        _initRetailerPage: function() {
            var c = a(".headerBox__heroCopy .tel", this.$element);
            c.length && b.matchMedia("(min-width: 740px)").matches && c.contents().unwrap().wrap("<span/>")
        },
        _tcoOrientationCheck: function() {
            var c = a(".headerBox__totalCost"),
                d = site.utils.isBreakpointMedium() || site.utils.isBreakpointSmall();
            c.removeClass("landscape"), d && b.matchMedia("(orientation: landscape)") && c.addClass("landscape")
        },
        _checkOnlyHasPrimaryHeading: function() {
            1 === this.$element.children().length && this.$element.find(".primaryHeading") && this.$element.addClass("onlyHasPrimaryHeading")
        },
        _onResize: function() {
            b.requestAnimationFrame(this._resizeHeaderBoxes.bind(this))
        },
        _resizeHeaderBox: function() {
            this._tcoOrientationCheck();
            var a = "small" !== site.utils.getBreakpointSize();
            if (this.$element.css("width", "auto").removeClass("maxWidthOff"), this.options.onAtSmallBreakpoint || a) {
                var b = 2 * parseInt(this.ui("headerBoxContent").css("padding-left"), 10);
                this._widestElementWidth = 0, this.ui("headerBoxWidthElements").each(this._getWidestElementWidth.bind(this)), this.$element.css("width", this._widestElementWidth + b), (this.ui("headingTextMain").width() + b) / 2 > this.$element.width() && this.$element.addClass("maxWidthOff")
            }
        },
        _getWidestElementWidth: function(b, c) {
            var d = a(c),
                e = d.hasClass("primaryLinkWithStyle") || d.hasClass("headerBoxDontInline");
            e || d.css("display", "inline");
            var f = d.outerWidth() + 1;
            e || d.css("display", ""), this._widestElementWidth = f > this._widestElementWidth ? f : this._widestElementWidth
        },
        _checkTotalCostPriceWidth: function() {
            var a = this.ui("totalCostElement");
            if (0 !== a.length) {
                var b = this.$element.find(".number")[0] || {},
                    c = b.innerHTML || "",
                    d = this.$element.find(".currency")[0] || {},
                    e = d.innerHTML || "",
                    f = site.utils.measureTextWidth(c + e, b);
                f > 160 && a.removeClass("headerBoxDontInline").addClass("stacked")
            }
        },
        removeEvents: function() {
            a(b).off("resize", this._resizeBound)
        }
    };
    jQuery.createComponent("HeaderBox", c)
}(jQuery, window),
function(a, b, c, d) {
    var e = {
        _initiated: !1,
        uiSelectors: {
            headingWrapper: ".headingWrapper",
            headingTextMain: ".headingTextMain"
        },
        init: function() {
            this._initiated || (this._layout(), this.linearLines(), a(b).smartresize(this.linearLines.bind(this)), this._initiated = !0)
        },
        _layout: function() {
            if (!this.ui("headingTextMain").length) {
                var b = a('<span class="headingTextMain"/>');
                this.ui("headingWrapper").wrapInner(b), this.uiElements.headingTextMain = a(".headingTextMain", this.$element)
            }
            this.$element.parents(".FullWidthImage").length || this.ui("headingTextMain").css("display", "inline")
        },
        linearLines: function() {
            this.ui("headingWrapper").css("width", "auto"), "small" !== site.breakpoints.current && "" !== a.trim(this.ui("headingWrapper").text()) && this.ui("headingWrapper").width(this.ui("headingTextMain").width() + 1)
        }
    };
    jQuery.createComponent("Headings", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaultHotspotWidth: 50,
        _defaultHotspotHeight: 50,
        _defaults: {},
        uiSelectors: {
            backgroundImage: "> span",
            hotspotGrid: ".hotspot-grid",
            hotspots: ".hotspot"
        },
        init: function() {
            var c = this.$element.data();
            c.grid ? this._isGrid = !0 : this._isGrid = !1, this._columns = c.columns, this._rows = c.rows, this._aspectRatio = c.aspectHeight / c.aspectWidth, this.ui("backgroundImage").css("padding-bottom", 100 * this._aspectRatio + "%"), this._isGrid ? (this._updateHotspotGrid(), this._updateHotspots()) : this._drawHotspots(), this._bindHotspotEvents(), this.ui("hotspots").show(), c.debug === !0 && this._showGrid(), a(b).smartresize(function() {
                this._isGrid ? (this._updateHotspotGrid(), this._updateHotspots()) : this._drawHotspots(), c.debug === !0 && this._showGrid()
            }.bind(this))
        },
        _bindHotspotEvents: function() {
            a(".hotspot-overlay").click(function(b) {
                a(this).css({
                    opacity: 0
                }), setTimeout(function() {
                    a(this).css({
                        zIndex: 0
                    }), a(".selected").removeClass("selected")
                }.bind(this), 400)
            }), this.ui("hotspots").each(function(b, c) {
                a(c).click(function(b) {
                    a(this).hasClass("selected") || (b.stopPropagation(), b.preventDefault(), a(".hotspot-overlay").css({
                        zIndex: 3,
                        opacity: 1
                    }), a(this).addClass("selected"))
                })
            })
        },
        _drawHotspots: function() {
            this.ui("hotspots").each(function(b, c) {
                var d = a(c),
                    e = parseInt(d.data("y"), 10),
                    f = parseInt(d.data("x"), 10),
                    g = d.data("height") || this._defaultHotspotHeight,
                    h = d.data("width") || this._defaultHotspotWidth,
                    i = {
                        h: 1125,
                        w: 2e3
                    },
                    j = this.$element.height() / i.h,
                    k = this.$element.width() / i.w;
                console.log(j, k), console.log(e - g / 2 * j, f - h / 2 * k), d.css({
                    height: g,
                    width: h,
                    top: e * j - g / 2,
                    left: f * k - h / 2
                })
            }.bind(this))
        },
        _updateHotspots: function() {
            this.ui("hotspots").each(function(b, c) {
                var d = a(c),
                    e = parseInt(d.data("row"), 10) - 1,
                    f = parseInt(d.data("column"), 10) - 1,
                    g = d.data("height") || this._defaultHotspotHeight,
                    h = d.data("width") || this._defaultHotspotWidth;
                e >= 0 && e < this._rows && f >= 0 && f < this._columns ? d.css({
                    height: g,
                    width: h,
                    top: this._oneCellHeight * e + (this._oneCellHeight / 2 - g / 2),
                    left: this._oneCellWidth * f + (this._oneCellWidth / 2 - h / 2)
                }) : d.remove()
            }.bind(this))
        },
        _updateHotspotGrid: function() {
            this._windowWidth = this.$element.width(), this._elementHeight = this._windowWidth * this._aspectRatio, this._oneCellWidth = this._windowWidth / this._columns, this._oneCellHeight = this._elementHeight / this._rows
        },
        _showGrid: function() {
            if (this._isGrid) {
                this.$element.find(".grid").remove(), this.ui("hotspotGrid").append('<div class="grid"></div>');
                for (var b = 0; b < this._rows; b++)
                    for (var c = 0; c < this._columns; c++) {
                        var d = a("<div>Col: " + (c + 1) + "<br/>Row: " + (b + 1) + "</div>");
                        d.css({
                            width: this._oneCellWidth,
                            height: this._oneCellHeight,
                            "z-index": 2,
                            position: "absolute",
                            left: this._oneCellWidth * c,
                            top: this._oneCellHeight * b
                        }), this.$element.find(".grid").append(d)
                    }
            } else this.$element.addClass("debug"), 0 === a(".coords").length && this.ui("hotspotGrid").append('<div class="coords"></div>'), this.ui("hotspotGrid").mousemove(function(b) {
                a(".coords").html(b.offsetX + "," + b.offsetY)
            }.bind(this))
        },
        _destroy: function() {}
    };
    jQuery.createComponent("Hotspots", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            this.$element.HubLayout().HubFiltersController()
        }
    };
    jQuery.createComponent("Hub", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            listOptions: {
                valueNames: ["itemCategory", "itemNameplate", {
                    data: ["tag"]
                }]
            }
        },
        uiSelectors: {
            hubItemsWrapper: ".hubItemsWrapper",
            hubItemsList: ".hubItemsList"
        },
        _filterState: null,
        list: null,
        model: null,
        view: null,
        filterParams: {},
        init: function() {
            var b = a.Deferred();
            this.clearStorage(), this.filterParams = this.setFilterParams(["itemCategory", "itemNameplate", "itemTag"]), this.$element.HubFiltersModel(), this.model = this.$element.HubFiltersModel.bind(this.$element), this._filterState = this.model("buildFilterState", this.$element, this.filterParams), this.view = this.$element.HubFiltersView.bind(this.$element), this.initList(b), this.$element.HubFiltersView({
                controller: this
            }), b.done(this._attachEvents.bind(this))
        },
        initList: function(b) {
            var c;
            a.ajax({
                url: "?ajax=true"
            }).done(function(d) {
                c = a(d).find(".hubItem"), this.ui("hubItemsList").append(c), this.list = new List(this.ui("hubItemsWrapper").get(0), this.options.listOptions), b.resolve(), this.$element.HubInfinite(), this.view("updateCounter", this.view("getHubItemsOnPage"), "hubHeaderCounter"), this.$element.HubLayout("onResize"), this.$element.HubLayout("loadImages"), a.isEmptyObject(this.filterParams) === !1 && (this.filterOrCount(null, null, !1, this._filterState), this.view("setIntialUIState", this._filterState), this.view("scrollToHub"))
            }.bind(this))
        },
        setFilterParams: function(a) {
            var b = {};
            return a.length > 0 && a.map(function(a) {
                site.utils.getUrlParameter(a) && (b[a] = site.utils.getUrlParameter(a), this.setSession(a, b[a]))
            }.bind(this)), b
        },
        _attachEvents: function() {
            this.list.on("filterComplete", this._filterComplete.bind(this)), b.onpopstate = this.historyPopState.bind(this)
        },
        historyPopState: function(a) {
            this._filterState = this.model("buildFilterState", this.$element, this.filterParams), this.filterOrCount(null, null, !1, this._filterState)
        },
        filterOrCount: function(a, b, c, d) {
            var e, f;
            if (a && (this._filterState = this.model("updateFilterState", a, b, this._filterState)), e = this.model("getActiveFilters", this._filterState), f = this.model("filterOrCount", c, e, this.list), this.view("updateCounter", f, "hubResultsCounter"), c) JSON.stringify(d) === JSON.stringify(this._filterState) || 0 === f ? this.view("inactivateFilter") : this.view("activateFilter");
            else {
                if (JSON.stringify(d) !== JSON.stringify(this._filterState)) {
                    var g = this.buildFilterQueryString(this._filterState);
                    this.addQueryString(g)
                }
                this.$element.HubInfinite("initEnquire"), this.view("updateCounter", f, "hubHeaderTotalCounter"), this.view("updateCounter", this.view("getHubItemsOnPage"), "hubHeaderCounter"), this.$element.HubLayout("onResize"), this.$element.HubLayout("loadImages")
            }
        },
        _filterComplete: function() {
            this.view("filterComplete"), this.$element.trigger("HubFiltersController:filter_change", {
                filterState: this._filterState
            })
        },
        getFilterState: function() {
            return JSON.parse(JSON.stringify(this._filterState))
        },
        buildFilterQueryString: function(a) {
            var b = "";
            if (this.clearStorage(), "object" !== ("undefined" == typeof a ? "undefined" : _typeof(a))) return b;
            for (var c in a) {
                var d = "",
                    e = "";
                for (var f in a[c]) a[c][f] === !0 && (d += d ? "," + f : c + "=" + f, e += e ? "," + f : f);
                d && (b += b ? "&" + d : d, this.setSession(c, e)), d = "", e = ""
            }
            return b
        },
        addQueryString: function(a) {
            var d = c.location.href.split("?")[0];
            return d = site.utils.addParameterToURL(d, a), b.history.pushState && b.history.pushState({
                path: d
            }, "", d), d
        },
        setSession: function(a, b) {
            sessionStorage.setItem(a, b)
        },
        clearStorage: function() {
            sessionStorage.removeItem("itemNameplate"), sessionStorage.removeItem("itemTag"), sessionStorage.removeItem("itemCategory")
        }
    };
    jQuery.createComponent("HubFiltersController", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {},
        buildFilterState: function(b, c) {
            var e = {
                    itemCategory: {},
                    itemNameplate: {},
                    itemTag: {}
                },
                f = c.itemCategory === d ? null : c.itemCategory,
                g = c.itemTag === d ? null : c.itemTag,
                h = c.itemNameplate === d ? null : c.itemNameplate,
                i = h ? h.split(",") : h,
                j = g ? g.split(",") : g;
            return b.find(".hubCategoryButton:not(.buttonReset)").each(function(b, c) {
                var d = a(c).text();
                e.itemCategory[d] = f === d ? !0 : !1
            }), b.find(".hubFilterButton").each(function(b, c) {
                var d = a(c),
                    f = d.text(),
                    g = !1;
                (a.inArray(f, i) > -1 || a.inArray(f, j) > -1) && (g = !0), e[d.data("filter-type")][f] = g
            }), e
        },
        filterOrCount: function(b, c, d) {
            var e;
            if (b) {
                var f = a.grep(d.items, this._filterMethod.bind(this, c));
                e = f.length
            } else d.filter(this._filterMethod.bind(this, c)), e = d.matchingItems.length;
            return e
        },
        updateFilterState: function(b, c, d) {
            return "itemCategory" === b && a.each(d, function(b, c) {
                a.each(c, function(a, b) {
                    c[a] = !1
                }.bind(this))
            }.bind(this)), b && c && (d[b][c] = !d[b][c]), "itemCategory" === b || c || a.each(d[b], function(a, c) {
                d[b][a] = !1
            }.bind(this)), d
        },
        getActiveFilters: function(a) {
            var b = {};
            for (var c in a.itemCategory)
                if (a.itemCategory[c] === !0) {
                    b.itemCategory = c;
                    break
                } for (var d in a.itemNameplate) a.itemNameplate[d] === !0 && (b.itemNameplate = b.itemNameplate || [], b.itemNameplate.push(d));
            for (var e in a.itemTag) a.itemTag[e] === !0 && (b.itemTag = b.itemTag || [], b.itemTag.push(e));
            return b
        },
        _filterMethod: function(a, b) {
            var c = "undefined" != typeof a.itemCategory,
                d = "undefined" != typeof a.itemNameplate,
                e = "undefined" != typeof a.itemTag,
                f = !c,
                g = !d,
                h = !e;
            if (c && a.itemCategory === b.values().itemCategory && (f = !0), d)
                for (var i = 0, j = a.itemNameplate.length; j > i; i++)
                    if (a.itemNameplate[i] === b.values().itemNameplate) {
                        g = !0;
                        break
                    } if (e)
                for (var k = 0, l = a.itemTag.length; l > k; k++)
                    if ("string" == typeof b.values().tag && b.values().tag.indexOf(a.itemTag[k]) >= 0) {
                        h = !0;
                        break
                    } return f && g && h
        }
    };
    jQuery.createComponent("HubFiltersModel", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            filterTransitionDuration: 600,
            controller: null
        },
        _$html: a("html"),
        _$window: a(b),
        _$body: a("html, body"),
        uiSelectors: {
            hubItem: ".hubItem",
            hubFilterButton: ".hubFilterButton",
            hubCategoryButton: ".hubCategoryButton",
            hubCategoryButtonReset: ".hubCategoryButton.buttonReset",
            hubCategoryButtonCategory: ".hubCategoryButton.buttonCategory",
            hubResults: ".hubResults",
            hubResultsCounter: ".hubResultsCounter",
            hubResultsButton: ".hubResultsButton",
            hubShowFilter: ".hubTogggleFilter",
            hubResetButton: ".hubResetButton",
            hubHeader: ".hubHeader",
            hubHeaderCounter: ".hubHeaderCounter",
            hubHeaderTotalCounter: ".hubHeaderTotalCounter",
            hubCategories: ".hubCategories",
            hubCategoriesList: ".hubCategoriesList",
            hubFilters: ".hubFilters",
            hubFilter: ".hubFilter.hubFiltersSection",
            hubFiltersWrapper: ".hubFiltersWrapper",
            hubFiltersHeader: ".hubFiltersHeader",
            hubFilterTitle: ".hubFiltersWrapper .hubFilterTitle",
            shelfComponent: ".shelfComponent",
            primaryLinkContainer: ".primaryLinkContainer",
            touchDropdown: ".DropdownNav",
            hubItemLink: ".hubItemLink",
            hubFilterTitleWrapper: ".hubFilterTitleWrapper"
        },
        breakpointSize: "large",
        _origFilterState: null,
        _dropInit: !1,
        mobileStickyPoint: 380,
        scrollPositon: 0,
        init: function() {
            this._attachEvents(), this._initEnquire()
        },
        _initEnquire: function() {
            var c = this;
            a(b).width();
            enquire.register("screen and (min-width: " + b.site.breakpoints.medium + "px)", {
                match: function() {
                    return c.breakpointSize = "large", c._$html.hasClass("touch") ? void c._initCateogryDrop() : void c._disableCateogryDrop()
                }
            }), enquire.register("screen and (max-width: " + (b.site.breakpoints.medium - 1) + "px)", {
                match: function() {
                    c.breakpointSize = "medium", c._initCateogryDrop()
                }
            }), enquire.register("screen and (max-width: " + b.site.breakpoints.small + "px)", {
                match: function() {
                    c.breakpointSize = "small", a(".js-nav-icon").removeClass("open")
                }
            })
        },
        _initCateogryDrop: function() {
            this.$element.find(".hubCategoryButton.filterOn");
            if (this._dropInit === !1) {
                this.ui("hubCategories").wrapInner('<div class="DropdownNav" data-dropdownnav-close-on-tap-outside="true" data-dropdownnav-stay-on-page="true"></div>');
                var a = this.$element.find(".DropdownNav");
                a.DropdownNav(), a.on("open", this._dropDownOpen.bind(this)), a.on("close", this._dropDownClose.bind(this)), this._dropInit = !0
            } else this.$element.find(".DropdownNav-disabled").toggleClass("DropdownNav DropdownNav-disabled")
        },
        _disableCateogryDrop: function() {
            var a = this.$element.find(".DropdownNav");
            0 !== a.length && (a.toggleClass("DropdownNav-disabled DropdownNav").removeClass("active"), this.ui("hubCategoriesList").removeAttr("style"))
        },
        _attachEvents: function() {
            this.ui("hubCategoryButtonReset").on("click", this._categoryResetButtonClick.bind(this)), this.ui("hubCategoryButtonCategory").on("click", this._categoryFilterButtonClick.bind(this)), this.ui("hubFilterButton").on("click", this._categoryFilterButtonClick.bind(this)), this.ui("hubResultsButton").on("click", this._hubResultsButtonClick.bind(this)), this.ui("hubFilterButton").on("mouseleave", this._removeFilterOff.bind(this)), this.ui("hubShowFilter").on("click", this._hubShowFilterButtonClick.bind(this)), this.ui("hubResetButton").on("click", this._hubResetButtonClick.bind(this)), this.ui("hubFiltersWrapper").on("scroll", this._filterScroll.bind(this)), this.ui("hubFilterTitleWrapper").on("click", this.filterScrollTo.bind(this)), this.$element.on("hubHeader:sticky", this._stickyBehaviours.bind(this)), this.$element.on("hubHeader:unsticky", this._unstickyBehaviours.bind(this)), this.$element.on("hubNavBackToTop", this._backToTopEvent.bind(this)), a(b).smartresize(this.viewResize.bind(this))
        },
        setIntialUIState: function(b) {
            a.merge(this.ui("hubCategoryButton"), this.ui("hubFilterButton")).each(function(c, e) {
                var f = a(e),
                    g = f.text(),
                    h = f.attr("data-filter-type");
                h !== d && b[h][g] === !0 && (this._highlightButton(f), "itemCategory" === h && this._checkFilterStatus())
            }.bind(this))
        },
        _categoryFilterButtonClick: function(b) {
            var c = a(b.currentTarget),
                d = c.text(),
                e = c.attr("data-filter-type");
            c.hasClass("noResults") || (this._highlightButton(c), "itemCategory" === e ? (this._transitionThenFilter(e, d), this.ui("hubFilterButton").removeClass("filterOn noResults"), this._checkFilterStatus()) : this.options.controller.filterOrCount(e, d, !0, this._origFilterState), this.$element.removeClass("categoryOpen"))
        },
        _hubResultsButtonClick: function(a) {
            a.preventDefault(), this._toggleFilterPanel(!1), this.$element.addClass("filtersLongClosing"), b.setTimeout(this._transitionThenFilter.bind(this, null, null), this.options.filterTransitionDuration), this.inactivateFilter()
        },
        _categoryResetButtonClick: function(b) {
            var c = a(b.currentTarget),
                d = c.attr("data-filter-type");
            this._highlightButton(c), this._transitionThenFilter(d, null), this.ui("hubFilterButton").removeClass("filterOn noResults"), this.$element.removeClass("categoryOpen")
        },
        _highlightButton: function(a) {
            a.hasClass("hubCategoryButton") ? (this.ui("hubCategoryButton").removeClass("filterOn"), a.addClass("filterOn")) : (a.hasClass("filterOn") && a.addClass("filterOff"), a.toggleClass("filterOn"))
        },
        _transitionThenFilter: function(a, b) {
            return "itemCategory" === a && this.$element.hasClass("filtersOpen") ? void this._closeFilterPanel(!1).done(function() {
                this._hubScrollTopAnimation(a, b)
            }.bind(this)) : void this._hubScrollTopAnimation(a, b)
        },
        _hubScrollTopAnimation: function(a, c) {
            var d = !1,
                e = this.options.controller,
                f = e.filterOrCount.bind(e, a, c, d, null);
            this.ui("hubHeader").addClass("transitioning"), this.$element.addClass("itemsFadeOut"), this.$element.hasClass("stickyMode") && (this.uiElements.hubItem = this.$element.find(this.uiSelectors.hubItem), site.utils.scrollTo(this.$element.offset().top + 2, 1.5 * this.options.filterTransitionDuration, function() {
                this.ui("hubHeader").removeClass("transitioning")
            }.bind(this), "hubSlowFadeInOut", !0)), b.setTimeout(function() {
                f()
            }.bind(this), Math.round(.666666 * this.options.filterTransitionDuration))
        },
        filterComplete: function() {
            this.$element.HubLayout("onResize"), this.$element.HubLayout("loadImages"), this.$element.removeClass("filtersOpenFadeOutItems itemsFadeOut filtersLongClosing")
        },
        updateCounter: function(a, b) {
            this.ui(b).text(a)
        },
        _hubShowFilterButtonClick: function(a) {
            this.ui("hubFilters").hasClass("active") ? this._hubResultsButtonClick(a) : this._toggleFilterPanel(!0)
        },
        _toggleFilterPanel: function(a) {
            var b = (this._$window.width(), this._$window.scrollTop());
            if (this.$element.hasClass("filtersOpen")) this.$element.removeClass("filtersAnimationComplete"), this._closeFilterPanel(a);
            else {
                if (this.ui("hubHeader").addClass("transitioning"), this.$element.hasClass("stickyMode") === !1 && ("small" === this.breakpointSize || "medium" === this.breakpointSize) || "large" === this.breakpointSize && this._$html.hasClass("touch") && this.ui("hubHeader").hasClass("sticky") === !1) {
                    var c = this.$element.offset().top + site.utils.getStickyNavHeight(this.$element.offset().top);
                    return this.$element.addClass("stickyMode"), "small" === this.breakpointSize ? void this._openFilterPanel(a, function() {
                        site.utils.scrollTo(c, 0)
                    }) : void site.utils.scrollTo(c, 400, this._openFilterPanel.bind(this, a))
                }
                var d = this.$element.height() + this.$element.offset().top - this._$window.height();
                if (b >= d) {
                    var e = d;
                    return this.ui("hubHeader").addClass("transitioning"), e < this.$element.offset().top + site.utils.getStickyNavHeight(b) && (e = this.$element.offset().top + site.utils.getStickyNavHeight(b)), void site.utils.scrollTo(e, 400, this._openFilterPanel.bind(this, a))
                }
                this._openFilterPanel(a, !1)
            }
        },
        _openFilterPanel: function(c, d) {
            this.$element.addClass("filtersOpen").removeClass("filtersClosing filtersAnimationComplete"), this._origFilterState = this.options.controller.getFilterState(), c && this.$element.addClass("filtersOpenFadeOutItems"), this._$html.hasClass("noScroll") === !1 && this._lockScroll(), this.ui("hubHeader").HubNavigation("resetHeaderPosition"), this._$html.hasClass("touch") && this.ui("hubHeader").HubNavigation("touchStickyPositioning"), this.scrollPositon = a(b).scrollTop(), this.ui("hubFiltersWrapper").scrollTop(0), b.setTimeout(function() {
                "function" == typeof d && d(), this.$element.addClass("filtersAnimationComplete")
            }.bind(this), this.options.filterTransitionDuration)
        },
        _closeFilterPanel: function(c) {
            var d = (this._$window.width(), a.Deferred());
            return this.ui("hubFilters").css("top", ""), this.$element.addClass("filtersClosing").removeClass("filtersOpen filtersAnimationComplete"), "large" !== this.breakpointSize && this._$window.scrollTop(this.scrollPositon), b.setTimeout(function() {
                this.$element.removeClass((c ? "filtersOpenFadeOutItems " : "") + "filtersClosing "), d.resolve(), this._unlockScroll()
            }.bind(this), this.options.filterTransitionDuration), this.ui("hubHeader").removeClass("transitioning"), d
        },
        _hubResetButtonClick: function(b) {
            var c = a(b.currentTarget),
                d = c.attr("data-filter-type");
            b.stopPropagation();
            var e = this.ui("hubFilterButton").filter(function() {
                return a(this).data("filter-type") === d
            });
            e.removeClass("filterOn"), this.options.controller.filterOrCount(d, !1, !0, this._origFilterState)
        },
        activateFilter: function() {
            this.ui("hubFilters").addClass("active"), this.ui("hubResultsButton").addClass("active")
        },
        inactivateFilter: function() {
            this.ui("hubFilters").removeClass("active"), this.ui("hubResultsButton").removeClass("active")
        },
        _stickyBehaviours: function() {
            this.$element.addClass("stickyMode"), this.$element.hasClass("filtersOpen") && this._$html.hasClass("noScroll") === !1 && this._lockScroll()
        },
        _unstickyBehaviours: function() {
            this.$element.hasClass("stickyMode") !== !1 && (this.$element.removeClass("stickyMode"), this.ui("hubHeader").hasClass("transitioning") || this.$element.hasClass("filtersOpen") && this._$html.hasClass("touch") && this._closeFilterPanel(!0))
        },
        viewResize: function() {
            this._$window.scrollTop() <= this.$element.offset().top && this.$element.hasClass("filterOpen") && this._unlockScroll(), this.$element.hasClass("filtersOpen") && this.ui("hubFiltersWrapper").scrollTop(0), this._$window.height() < this.mobileStickyPoint && (this.ui("hubFilterTitle").removeClass("hubFilterTitleInactive hubFilterTitleSticky"), this.ui("hubFilterTitleWrapper").attr("style", ""))
        },
        _dropDownOpen: function(a) {
            return this.ui("hubHeader").hasClass("sticky") === !1 && this.$element.hasClass("categoryOpen") === !1 && this._$html.hasClass("touch") ? (this._closeFilterPanel(!0), this.ui("hubHeader").addClass("transitioning"), void site.utils.scrollTo(this.$element.offset().top + site.utils.getStickyNavHeight(this.$element.offset().top), 400, function() {
                this.$element.addClass("categoryOpen")
            }.bind(this))) : (this.ui("hubHeader").HubNavigation("resetHeaderPosition"), this._$html.hasClass("touch") && this.ui("hubHeader").HubNavigation("touchStickyPositioning"), this.$element.addClass("categoryOpen"), void this.ui("hubHeader").removeClass("transitioning"))
        },
        _dropDownClose: function(a) {
            this.$element.removeClass("categoryOpen transitioning")
        },
        _lockScroll: function() {
            this._$html.hasClass("touch") && this._$html.hasClass("noScroll") === !1 ? (this._$html.addClass("noScroll forceScrollBar"), b.addEventListener("touchmove", this._touchMoveBlock, !1)) : this.ui("hubHeader").hasClass("sticky") && this._$html.addClass("noScroll forceScrollBar")
        },
        _unlockScroll: function() {
            this._$html.hasClass("touch") && (b.removeEventListener("touchmove", this._touchMoveBlock, !1), this.$element.find(".scrollBlock").remove()), this._$html.removeClass("noScroll forceScrollBar")
        },
        _touchMoveBlock: function(b) {
            1 !== a(b.target).parents(".hubFilters").length && b.preventDefault()
        },
        _removeFilterOff: function(b) {
            var c = a(b.currentTarget);
            c.removeClass("filterOff")
        },
        _checkFilterStatus: function() {
            var b = a(".hubCategoryButton.filterOn").text();
            this.ui("hubFilter").fadeOut(400, function() {
                this.ui("hubFilterButton").each(function(c, d) {
                    var e = a(d),
                        f = 0,
                        g = e.data("categories");
                    "object" === ("undefined" == typeof g ? "undefined" : _typeof(g)) && (f = a.inArray(b, g)), -1 === f && e.addClass("noResults")
                }.bind(this)), this.ui("hubFilter").each(function(b, c) {
                    var d = a(c),
                        e = d.find(".hubFilterButton").not(".noResults").length;
                    return 0 !== e ? void d.fadeIn(400) : void 0
                })
            }.bind(this))
        },
        getHubItemsOnPage: function() {
            return this.uiElements.hubItem = this.$element.find(this.uiSelectors.hubItem), this.ui("hubItem").length
        },
        _backToTopEvent: function() {
            this._$window.scrollTop() - this.$element.offset().top > this._$window.height() && this.$element.addClass("itemsFadeOut"), b.setTimeout(function() {
                this.$element.removeClass("itemsFadeOut")
            }.bind(this), 400)
        },
        _filterScroll: function(b) {
            if (!("large" === this.breakpointSize || this._$window.height() < this.mobileStickyPoint)) {
                var c = a(b.currentTarget),
                    d = parseFloat(c.css("paddingTop"), 10),
                    e = c.offset().top + d;
                this.ui("hubFilterTitle").each(function(b, c) {
                    var f = a(c),
                        g = 0,
                        h = f.offset().top - e;
                    0 !== b && (h -= this.ui("hubFilterTitle").eq(b - 1).find(".hubFilterTitleWrapper").outerHeight()), 0 >= h && f.hasClass("hubFilterTitleSticky") === !1 ? (f.addClass("hubFilterTitleSticky").removeClass("hubFilterTitleInactive").find(".hubFilterTitleWrapper"), g = f.find(".hubFilterTitleWrapper").outerHeight(), 0 !== b && (d += g * b, this.ui("hubFilterTitle").eq(b - 1).addClass("hubFilterTitleInactive")), f.find(".hubFilterTitleWrapper").css("top", d)) : h > 0 && f.hasClass("hubFilterTitleSticky") && (f.removeClass("hubFilterTitleSticky").find(".hubFilterTitleWrapper").attr("styles", ""), 0 !== b && this.ui("hubFilterTitle").eq(b - 1).removeClass("hubFilterTitleInactive"))
                }.bind(this))
            }
        },
        filterScrollTo: function(b, c) {
            if (!("large" === this.breakpointSize || this._$window.height() < this.mobileStickyPoint)) {
                b && (c = a(b.currentTarget), b.stopPropagation());
                var d = c.parent(),
                    e = d.offset().top,
                    f = this.ui("hubFilterTitle").index(d) + 1,
                    g = this.ui("hubFiltersWrapper").scrollTop(),
                    h = d.height(),
                    i = e + g - this.ui("hubFiltersWrapper").offset().top;
                1 !== f ? i -= h : i += h, this.ui("hubFiltersWrapper").stop().animate({
                    scrollTop: i - parseFloat(this.ui("hubFiltersWrapper").css("paddingTop"), 10)
                }, 400)
            }
        },
        scrollToHub: function() {
            this.ui("hubHeader").addClass("transitioning"), site.utils.scrollTo(this.$element.offset().top + 2, 1.5 * this.options.filterTransitionDuration, function() {
                this.ui("hubHeader").removeClass("transitioning")
            }.bind(this), "hubSlowFadeInOut", !0)
        }
    };
    jQuery.easing.hubSlowFadeInOut = function(a, b, c, d, e) {
        return (b /= e / 2) < 1 ? -d / 2 * (Math.sqrt(1 - b * b) - 1) + c : d / 2 * (Math.sqrt(1 - (b -= 2) * b) + 1) + c
    }, jQuery.createComponent("HubFiltersView", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        _$window: a(b),
        uiSelectors: {
            hubItemsList: ".hubItemsList",
            hubItem: ".hubItem",
            FooterNav: ".FooterNav",
            loadMoreButton: ".primaryLinkWithStyle.moreResults",
            ctaContainer: ".ctaContainer"
        },
        _contentStoryLimits: {
            pageLoad: {
                small: 8,
                medium: 8,
                large: 24
            },
            scrollLoad: {
                small: 8,
                medium: 8,
                large: 24
            }
        },
        _largeBreakpoint: 900,
        _smallBreakpoint: 740,
        _cacheContent: [],
        _additionalStoriesLoaded: 0,
        _cookie_expiry: .00694,
        init: function() {
            this.initEnquire(), this._initCookieBehaviour()
        },
        initEnquire: function() {
            this._cacheContent = [], enquire.register("screen and (min-width: " + (this._largeBreakpoint + 1) + "px)", {
                match: this._initOrLoad.bind(this, "large")
            }).register("screen and (min-width: " + (this._smallBreakpoint + 1) + "px) and (max-width: " + this._largeBreakpoint + "px)", {
                match: this._initOrLoad.bind(this, "medium")
            }).register("screen and (max-width: " + this._smallBreakpoint + "px)", {
                match: this._initOrLoad.bind(this, "small")
            })
        },
        _initOrLoad: function(a) {
            0 === this._cacheContent.length ? this._initInfiniteScroll(a) : this._enableInfiniteScroll(a)
        },
        _initInfiniteScroll: function(b) {
            this.uiElements.hubItem = this.$element.find(this.uiSelectors.hubItem);
            var c = this._getExtraStoriesNumber(),
                d = this._contentStoryLimits.pageLoad[b] + c,
                e = this.ui("hubItem"),
                f = [];
            e.length > d ? (e.each(function(b, c) {
                b >= d && (f.push(a(c)), a(c).remove())
            }), this._cacheContent = f, this._enableInfiniteScroll(b)) : this._disableInfiniteScroll();
        },
        _initCookieBehaviour: function() {
            if (this._interactiveStoryWasVisited()) {
                var b = this.$element.offset().top,
                    d = this._getLastScrollPosition();
                (b > d || this._getFilterState() === !0) && (d = b), a(c).ready(function() {
                    site.utils.scrollTo(d, 0, null, null, !0)
                })
            }
            this._createFilterStateCookie(!1), this._additionalStoriesLoaded = this._getExtraStoriesNumber();
            var e = !1;
            this.$element.on("HubFiltersController:filter_change", function(a, b) {
                e = !1;
                for (var c in b.filterState.itemCategory) b.filterState.itemCategory[c] === !0 && (e = !0);
                for (c in b.filterState.itemNameplate) b.filterState.itemNameplate[c] === !0 && (e = !0)
            }.bind(this)), this._$window.one("unload pagehide", function() {
                this._createFilterStateCookie(e), this._createExtraStoriesNumCookie(this._additionalStoriesLoaded), this._createScrollPositionCookie()
            }.bind(this))
        },
        _createExtraStoriesNumCookie: function(a) {
            site.utils.cookieManager.createCookie("extra_stories_loaded", a, this._cookie_expiry), site.utils.cookieManager.createCookie("interactive_story_visited", !1, this._cookie_expiry)
        },
        _getExtraStoriesNumber: function() {
            var a = 0;
            return this._interactiveStoryWasVisited() && (a = parseInt(site.utils.cookieManager.readCookie("extra_stories_loaded"), 10) || 0), a
        },
        _interactiveStoryWasVisited: function() {
            return "true" === site.utils.cookieManager.readCookie("interactive_story_visited")
        },
        _createFilterStateCookie: function(a) {
            site.utils.cookieManager.createCookie("filters_applied", a, this._cookie_expiry)
        },
        _getFilterState: function() {
            return "true" === site.utils.cookieManager.readCookie("filters_applied")
        },
        _createScrollPositionCookie: function() {
            site.utils.cookieManager.createCookie("scroll_position", this._$window.scrollTop(), this._cookie_expiry)
        },
        _getLastScrollPosition: function() {
            return parseInt(site.utils.cookieManager.readCookie("scroll_position"), 10) || 0
        },
        _enableInfiniteScroll: function(c) {
            this.$element.data("infinite-scroll") === !0 ? (a(b).unbind("scroll.infinte").on("scroll.infinte", this._loadingViaScroll.bind(this, c)), this.ui("ctaContainer").hide()) : (this.ui("loadMoreButton").addClass("showInfiniteButton"), this.ui("loadMoreButton").unbind("click").on("click", this._loadingMore.bind(this, c)))
        },
        _disableInfiniteScroll: function() {
            this.ui("loadMoreButton").unbind("click").removeClass("showInfiniteButton")
        },
        _loadingMore: function(a, b) {
            var c, d = this._contentStoryLimits.scrollLoad[a];
            b.preventDefault(), c = this._loadContent(d), this._additionalStoriesLoaded += d, this._createExtraStoriesNumCookie(this._additionalStoriesLoaded), 0 === c[c.length - 1] && (c.pop(), this._disableInfiniteScroll()), this.ui("hubItemsList").append(c), this.$element.HubFiltersView("updateCounter", this.$element.HubFiltersView("getHubItemsOnPage"), "hubHeaderCounter"), this.$element.HubLayout("onResize"), this.$element.HubLayout("loadImages"), site.utils.scrollTo(c[0]), this._contentAnimation(c)
        },
        _loadContent: function(a) {
            var b, c = this._cacheContent;
            return b = c.splice(0, a), a >= c && b.push(0), b
        },
        _contentAnimation: function(b) {
            a(b).each(function(b, c) {
                a(c).css({
                    opacity: 0,
                    y: 120
                }).transition({
                    opacity: 1,
                    y: 0,
                    delay: 100 * b
                })
            })
        },
        _loadingViaScroll: function(a) {
            var b, c = this.$element.offset().top + this.$element.height(),
                d = this._$window.scrollTop(),
                e = .95 * this._$window.height(),
                f = this._contentStoryLimits.scrollLoad[a];
            e > c - d && (b = this._loadContent(f), 0 === b[b.length - 1] && (b.pop(), this._disableInfiniteScroll()), this.ui("hubItemsList").append(b), this.$element.HubLayout("onResize"), this.$element.HubLayout("loadImages"), this.$element.HubFiltersView("updateCounter", this.$element.HubFiltersView("getHubItemsOnPage"), "hubHeaderCounter"), this._contentAnimation(b))
        }
    };
    jQuery.createComponent("HubInfinite", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            gridMarginHorizontal: 40,
            gridMarginVertical: 30,
            imageRatio: 450 / 680,
            itemMetaHeight: 12,
            doubleHeightItems: [2, 9, 19],
            columns: [
                [1, 4, 6, 9, 14, 17, 20, 22],
                [2, 7, 10, 12, 15, 18, 21, 23],
                [3, 5, 8, 11, 13, 16, 19, 24]
            ],
            rows: [
                [1, 2, 3],
                [4, 5],
                [6, 7, 8],
                [9, 10, 11],
                [12, 13],
                [14, 15, 16],
                [17, 18, 19],
                [20, 21],
                [22, 23, 24]
            ]
        },
        uiSelectors: {
            hubItemsWrapper: ".hubItemsWrapper",
            hubItemsList: ".hubItemsList",
            hubItem: ".hubItem",
            hubItemMeta: ".hubItem .itemMeta"
        },
        _largeLayoutOn: !1,
        _largeBreakpoint: 1281,
        _hubItemWidth: 0,
        _hubItemHeight: 0,
        _hubItemDoubleHeight: 0,
        _hubItemCol1Left: 0,
        _hubItemCol2Left: 0,
        _hubItemCol3Left: 0,
        init: function() {
            this._initEnquire(), a(b).smartresize(this.onResize.bind(this)), this._largeLayoutOn || this.loadImages()
        },
        _initEnquire: function() {
            enquire.register("screen and (min-width: " + this._largeBreakpoint + "px)", {
                match: this._initRefreshLargeLayout.bind(this),
                unmatch: this._undoLargeLayout.bind(this)
            }), enquire.register("screen and (orientation:landscape) and (max-width: " + b.site.breakpoints.small + "px)", {
                match: this._multipleEqualHeights.bind(this, !0),
                unmatch: this._multipleEqualHeights.bind(this, !1)
            })
        },
        onResize: function() {
            this._largeLayoutOn && this._initRefreshLargeLayout()
        },
        _undoLargeLayout: function() {
            this._largeLayoutOn = !1, this.$element.removeClass("layoutFixed").addClass("layoutUnfixed"), this.$element.find(".hubItem.doubleHeight").removeClass("doubleHeight"), this.loadImages()
        },
        _initRefreshLargeLayout: function() {
            this._largeLayoutOn = !0, this._calculateHubItemDimensions(), this.ui("hubItemsWrapper").each(this._masonryLayout.bind(this)), this.loadImages()
        },
        _calculateHubItemDimensions: function() {
            this._hubItemWidth = this.ui("hubItemsList").width() / 3, this._hubItemHeight = this._hubItemWidth * this.options.imageRatio + this.options.gridMarginVertical / 2, this._hubItemDoubleHeight = 2 * this._hubItemHeight + this.options.itemMetaHeight, this._hubItemCol2Left = this._hubItemWidth, this._hubItemCol3Left = 2 * this._hubItemCol2Left
        },
        _masonryLayout: function(b, c) {
            var d = a(c);
            this.$element.removeClass("layoutUnfixed").addClass("layoutFixed"), this._setItemsWidthHeight(d), this._setItemsDoubleHeight(d), this._positionColumns(d), this._positionRows(d), this._resizeWrapper(d)
        },
        _setItemsDoubleHeight: function(a) {
            var b = this._getNthChilds(this.options.doubleHeightItems),
                c = a.find(b).filter(this._filterLastItem);
            c.css("height", this._hubItemDoubleHeight).addClass("doubleHeight")
        },
        _filterLastItem: function(b, c) {
            return a(c).next().length
        },
        _setItemsWidthHeight: function(a) {
            var b = a.find(".hubItem");
            b.css({
                height: this._hubItemHeight,
                width: this._hubItemWidth
            })
        },
        _positionColumns: function(b) {
            var c = this._getNthChilds(this.options.columns[0]),
                d = this._getNthChilds(this.options.columns[1]),
                e = this._getNthChilds(this.options.columns[2]),
                f = b.find(c),
                g = b.find(d),
                h = b.find(e),
                i = "left";
            "rtl" === a("html").attr("dir") && (i = "right"), f.css(i, this._hubItemCol1Left), g.css(i, this._hubItemCol2Left), h.css(i, this._hubItemCol3Left)
        },
        _positionRows: function(b) {
            this.uiElements.hubItem = this.$element.find(this.uiSelectors.hubItem);
            for (var c = 24, d = this.ui("hubItem").length, e = Math.ceil(d / c), f = 0, g = function(a, b) {
                    var d = f,
                        e = f + (c - 1);
                    return a >= d && e >= a
                }, h = 0; e > h; h++) a.each(this.options.rows, this._positionRow.bind(this, this.ui("hubItem").filter(g), h)), f += c
        },
        _positionRow: function(a, b, c, d) {
            var e = this._getNthChilds(d),
                f = this._hubItemHeight + this.options.itemMetaHeight,
                g = a.filter(e),
                h = f * c;
            b > 0 && (h += f * (this.options.rows.length * b)), g.css("top", h)
        },
        _resizeWrapper: function(a) {
            var b, c = a.find(".hubItem").last(),
                d = parseInt(c.css("top"), 10),
                e = this._getRowItems(c, d),
                f = this._getTallestItemHeight(c, e);
            b = d + f + this.options.itemMetaHeight, a.css("height", b)
        },
        _getTallestItemHeight: function(b, c) {
            var d = 0;
            return a.each(c, function(b, c) {
                var e = a(c).height();
                d = e > d ? e : d
            }), d
        },
        _getRowItems: function(a, b) {
            for (var c, d = [a], e = a, f = 2, g = 0; f > g && (e = e.prev(), e.length) && (c = parseInt(e.css("top"), 10), !(b > c));) d.push(e), g++;
            return d
        },
        loadImages: function() {
            var a = ".hubItem:not(.doubleHeight) .itemImageStandardHeight",
                b = ".hubItem.doubleHeight .itemImageDoubleHeight",
                c = this.$element.find(a + ", " + b);
            site.utils.loadIgnoredResponsiveImages(c)
        },
        _getNthChilds: function(b) {
            var c = ".hubItem",
                d = b.length,
                e = "";
            return a.each(b, function(a, b) {
                e += c + ":nth-child(24n + " + b + ")", a !== d - 1 && (e += ", ")
            }), e
        },
        _multipleEqualHeights: function(a) {
            if (a)
                for (var b = 2, c = this.ui("hubItem").length, d = Math.ceil(c / b), e = 0, f = function(a, c) {
                        var d = e,
                            f = e + (b - 1);
                        return a >= d && f >= a
                    }, g = 0; d > g; g++) this.ui("hubItem").addClass("equalHeights").filter(f).find(".hubItemInner").removeAttr("style").equalHeights(), e += b;
            else this.ui("hubItem").removeClass("equalHeights").find(".hubItemInner").removeAttr("style")
        }
    };
    jQuery.createComponent("HubLayout", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _$window: a(b),
        _$html: a("html"),
        _$content: null,
        _$header: null,
        _headerHeightAtTop: 0,
        _limitTop: null,
        _limitBottom: null,
        _scrollPosition: 0,
        _scrollDirection: "down",
        _headerPushOutPointHeight: 0,
        headerPullFlag: !1,
        breakpointSize: "large",
        uiSelectors: {
            stickyContent: ".hubNavigationWrapper",
            backToTop: ".hubNavigationBackToTop"
        },
        init: function() {
            this.$element.data("sticky") === !0 && (this._initEnquire(), this._setElements(), this._setHeights(), this._$window.scrollTop() > 0 && this._headerPositioning(), this._setPosition(!1), this._attachEvents(), this._positionCalculations())
        },
        _initEnquire: function() {
            var a = this;
            enquire.register("screen and (min-width: " + site.breakpoints.medium + "px)", {
                match: function() {
                    a.breakpointSize = "large"
                }
            }), enquire.register("screen and (max-width: " + (site.breakpoints.medium - 1) + "px)", {
                match: function() {
                    a.breakpointSize = "medium"
                }
            }), enquire.register("screen and (max-width: " + site.breakpoints.small + "px)", {
                match: function() {
                    a.breakpointSize = "small"
                }
            })
        },
        _setElements: function() {
            this._$content = a("#content"), this._$header = a("#header, .dxnav-header"), this._$header.addClass("HubStickyNav")
        },
        _attachEvents: function() {
            this._$window.on("scroll", function(a) {
                if ("large" === this.breakpointSize || !this.$element.parent().hasClass("filtersOpen")) {
                    var b = this._$window.scrollTop();
                    this._setScrollDirection(b), this._setPosition(a), this._headerPositioning(), this._toggleBackToTopIcon(), "large" === this.breakpointSize && this._headerResizeBehaviours(b)
                }
            }.bind(this)), a(b).smartresize(this.viewResize.bind(this)), a(b).on("closeNotificationBar", this._notificationBarClose.bind(this)), a(b).on("stickyNavigationChange", this._headerHeightChange.bind(this)), a(b).on("subNavigationChange", function(a) {
                if (this.$element.hasClass("sticky")) this.ui("stickyContent").css("top", this._$header.outerHeight());
                else {
                    var b = this._$header.height() - this._headerHeightAtTop;
                    0 > b && (b = 0), this.ui("stickyContent").css("top", b)
                }
                this._setHeights()
            }.bind(this)), a(b).on("scrollHighjack", this._scrollHighjack.bind(this)), this.ui("backToTop").on("click", this._backToTop.bind(this))
        },
        viewResize: function() {
            this._setHeights(), this._headerPositioning(), this._setPosition(!1)
        },
        _headerHeightChange: function() {
            "large" === this.breakpointSize && "up" === this._scrollDirection && this.headerPullFlag === !0 && this.ui("stickyContent").css("top", this._headerHeightAtTop)
        },
        _scrollHighjack: function() {
            this.$element.addClass("transitioning"), this.resetHeaderPosition(), b.setTimeout(function() {
                this.$element.removeClass("transitioning")
            }.bind(this), 400)
        },
        _notificationBarClose: function() {
            this._$html.hasClass("touch") ? this.resetHeaderPosition(!0) : (this._setHeights(), this._setHeaderPostion())
        },
        _backToTop: function(b) {
            var c = function() {
                this.$element.removeClass("transitioning")
            }.bind(this);
            b && b.preventDefault(), this._$header.removeClass("stickyQuickReverse"), this.ui("stickyContent").removeClass("stickyQuickReverse"), this.$element.addClass("transitioning");
            var d = a.Event("hubNavBackToTop");
            this.$element.trigger(d);
            var e = this.$element.offset().top + site.utils.getStickyNavHeight(this.$element.offset().top);
            site.utils.scrollTo(e, 1e3, c, "hubSlowFadeInOut")
        },
        _setScrollDirection: function(a) {
            a < this._scrollPosition ? (this._scrollDirection = "up", this.$element.addClass("scrolllUp").removeClass("scrolllDown")) : (this._scrollDirection = "down", this.$element.addClass("scrolllDown").removeClass("scrolllUp"), "large" === this.breakpointSize && a < site.stickyNavigationTransitionPoint + this.$element.height() && (this.headerPullFlag = !1)), this._scrollPosition = a
        },
        _setHeights: function() {
            this.$element.height(this.ui("stickyContent").height()), this._headerPushOutPointHeight = site.utils.getStickyNavHeight(this.$element.offset().top), this._headerHeightAtTop = site.utils.getStickyNavHeight(0), this._headerPushOutPointHeight < this._headerHeightAtTop
        },
        _positionCalculations: function() {
            if (this._limitTop = this.$element.offset().top, this._limitBottom = 0, 0 !== this._$content.length) {
                var a = this._$content.offset();
                this._limitBottom = a.top + this._$content.outerHeight()
            }
        },
        _setPosition: function(b) {
            this._positionCalculations();
            var c = this._$window.scrollTop(),
                d = !1;
            this._$html.hasClass("touch") && (this._limitTop = this._limitTop + this.ui("stickyContent").outerHeight(), this._limitBottom = this._limitBottom - this.ui("stickyContent").outerHeight()), "up" === this._scrollDirection && this.headerPullFlag === !0 && (this._limitTop -= this._$header.outerHeight());
            var e = this.$element.offset().top + this._headerPushOutPointHeight + this.ui("stickyContent").outerHeight();
            if (c > e && "large" === this.breakpointSize && c > 2 * site.stickyNavigationTransitionPoint && (this.headerPullFlag = !0), c > e && ("small" === this.breakpointSize || "medium" === this.breakpointSize) && (this.headerPullFlag = !0), c >= this._limitTop) {
                this.$element.hasClass("sticky") === !1 && (d = a.Event("hubHeader:sticky")), this.$element.addClass("sticky");
                var f = c + this.ui("stickyContent").outerHeight();
                if (f > this._limitBottom) {
                    this.$element.removeClass("stickyQuickReverse");
                    var g = this._limitBottom - f;
                    this._$html.hasClass("touch") && Math.abs(g) < this.ui("stickyContent").outerHeight() && (g = -this.ui("stickyContent").outerHeight()), this.ui("stickyContent").css("top", g)
                } else "down" === this._scrollDirection && this._$html.hasClass("no-touch") && this.ui("stickyContent").css("top", ""), this._$html.hasClass("touch") && "down" === this._scrollDirection && this.touchStickyPositioning()
            } else this.$element.hasClass("sticky") && (d = a.Event("hubHeader:unsticky")), this.$element.removeClass("sticky"), this.resetHeaderPosition(!0);
            d !== !1 && this.$element.trigger(d)
        },
        _headerPositioning: function() {
            var a = this._$window.scrollTop();
            if (site.stickyNavigationEnabled !== !1) {
                var b = "",
                    c = this._headerPushOutPointHeight;
                this.$element.offset().top < a && (c = this._$header.outerHeight());
                var d = this._$header.offset().top - a,
                    e = d + c,
                    f = this.$element.first().offset().top - a;
                f + this.$element.height();
                if (this.headerPullFlag === !0 && this.$element.hasClass("transitioning") === !1 && "up" === this._scrollDirection && a < this._limitBottom - c - this.ui("stickyContent").height()) return void(0 !== d && this._setHeaderPostion());
                this.$element.hasClass("transitioning") && this.resetHeaderPosition(!0), b = d + (f - e), b = b > 0 ? 0 : b, Math.abs(b) >= c && (b = -c), b += "px", this._$header.css("top", b)
            }
        },
        _setHeaderPostion: function() {
            var a = this._$header.height();
            this._$header.css("top", 0), this._$header.addClass("stickyQuickReverse"), this.$element.addClass("stickyQuickReverse"), this._$html.hasClass("touch") && (a -= this.ui("stickyContent").outerHeight()), this.ui("stickyContent").css("top", a)
        },
        resetHeaderPosition: function(a) {
            a && (this._$header.removeClass("stickyQuickReverse"), this.$element.removeClass("stickyQuickReverse"), this.headerPullFlag = !1), "up" === this._scrollDirection && this.$element.hasClass("sticky") && this._$header.css("top", -this._$header.height()), this.ui("stickyContent").css("top", "")
        },
        touchStickyPositioning: function() {
            this.ui("stickyContent").css("top", -this.ui("stickyContent").outerHeight())
        },
        _toggleBackToTopIcon: function() {
            this._$window.scrollTop() >= this.$element.offset().top + 10 ? this.$element.addClass("showBackToTop") : this.$element.removeClass("showBackToTop")
        },
        _headerResizeBehaviours: function(a) {
            a <= this._headerHeightAtTop ? this.$element.addClass("notransition") : (this._$header.removeClass("notransition"), this.$element.removeClass("notransition")), a <= site.stickyNavigationTransitionPoint + this.$element.height() && this.$element.addClass("notransitionDelay"), (a > site.stickyNavigationTransitionPoint + this.$element.height() || 0 === a) && this.$element.removeClass("notransitionDelay notransition")
        }
    };
    jQuery.createComponent("HubNavigation", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            var b = this,
                c = this.$element.data("experiment-id"),
                d = 1;
            "undefined" != typeof cxApi && (d = cxApi.chooseVariation() + 1), this.$element.data("force-ignitev2") === !0 && (d = 2);
            var e = b._getParameterByName("ignite");
            e.length > 0 && (d = Number(e)), dataLayer.push({
                event: "contentExperimentLoaded",
                experimentID: c,
                variantID: "igniteBar" + d
            });
            var f = a(".IgniteBarV1", b.$element),
                g = a(".IgniteBarV2", b.$element),
                h = a(".IgniteBarDevice");
            2 === d ? (f.remove(), h.remove(), g.IgniteBarV2()) : (g.remove(), f.IgniteBarV1())
        },
        _getParameterByName: function(a) {
            a = a.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var b = new RegExp("[\\?&]" + a + "=([^&#]*)"),
                c = b.exec(location.search);
            return null === c ? "" : decodeURIComponent(c[1].replace(/\+/g, " "))
        }
    };
    jQuery.createComponent("IgniteBar", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            items: "li",
            mainLinks: "li > span > a",
            lastLink: "li:last-child > span > a",
            vee24Link: "li.vee24"
        },
        isHovered: !1,
        isOpen: !0,
        _isTouchDevice: !1,
        init: function() {
            this.$element.addClass("visible"), this._setTouchState(), this._initElementEvents(), this._initScroll(), this._open()
        },
        _open: function() {
            this._isTouchDevice && a(c).on("touchstart", a.proxy(this._onDocumentTouch, this)), this.$element.addClass("open"), this.isOpen = !0
        },
        _close: function() {
            this.$element.removeClass("open"), this.isOpen = !1
        },
        _initScroll: function() {
            a(b).on("scroll", site.utils.throttle(a.proxy(this._onScroll, this)))
        },
        _uninitScroll: function() {
            a(b).off("scroll", site.utils.throttle(a.proxy(this._onScroll, this)))
        },
        _onScroll: function(a) {
            a.originalEvent && !this.isHovered && this._close()
        },
        _initElementEvents: function() {
            var b = this;
            if (this._isTouchDevice) this.ui("items").find(" > a").on("touchend click", a.proxy(this._onElementTouchClick, this));
            else {
                this.ui("items").find(" > a").on("mouseenter", a.proxy(this._onLinkMouseenter, this)), this.$element.on("mouseenter", a.proxy(this._onElementMouseenter, this)), this.$element.on("mouseleave", a.proxy(this._onElementMouseleave, this));
                var c = this.ui("mainLinks");
                c.on("focus", a.proxy(this._onLinkMouseenter, this)), c.on("keydown", function(a) {
                    b._isLosingFocus(a) && b._close()
                })
            }
            this.ui("vee24Link").on("click tap", function(a) {
                a.preventDefault(), this._openVee24()
            }.bind(this)), this.$element.on("touchend click", a.proxy(this._onTouchClick, this)), this._switchLiveChat(!0)
        },
        _isTabbing: function(a) {
            return 9 === a.keyCode
        },
        _isTabbingForward: function(a) {
            return this._isTabbing(a) && a.shiftKey === !1
        },
        _isTabbingBackward: function(a) {
            return this._isTabbing(a) && a.shiftKey === !0
        },
        _isLosingFocus: function(b) {
            var c = a(b.target)[0],
                d = this.ui("mainLinks").first()[0],
                e = this.ui("lastLink")[0];
            return d === c && this._isTabbingBackward(b) || e === c && this._isTabbingForward(b)
        },
        _onLinkMouseenter: function() {
            this._open()
        },
        _onElementMouseenter: function() {
            this.isHovered = !0
        },
        _onElementMouseleave: function() {
            this.isHovered = !1
        },
        _onTouchClick: function(a) {
            this.isOpen || (a.preventDefault(), this._open())
        },
        _onDocumentTouch: function(b) {
            var d = a(b.target),
                e = d.parents(".IgniteBarV1").length || d === this.$element;
            e || (a(c).off("click touchstart", a.proxy(this._onDocumentTouch, this)), this._close())
        },
        _openVee24: function() {
            a(b).trigger("vee24_launch_chat")
        },
        _setTouchState: function() {
            this._isTouchDevice = a("html").hasClass("touchCapability") ? !0 : !1
        },
        _switchLiveChat: function(a) {
            var b = new Date,
                c = (b.getDay(), this._isOpenTime(b));
            if (a === !0) {
                if (c === !1) return this.ui("vee24Link").css("display", "none"), void setTimeout(this._switchLiveChat.bind(this, !1), 6e4)
            } else if (c === !0) return this.ui("vee24Link").css("display", "block"), void setTimeout(this._switchLiveChat.bind(this, !0), 6e4);
            b = new Date;
            var d = 6e4 - b % 6e4;
            setTimeout(this._switchLiveChat.bind(this, a), d)
        },
        _isOpenTime: function(a) {
            var b, c, d, e = this._isDST(a);
            return e ? (b = new Date(Date.UTC(a.getFullYear(), a.getMonth(), a.getDate(), 7, 30, 0)), c = new Date(Date.UTC(a.getFullYear(), a.getMonth(), a.getDate(), 16, 0, 0))) : (b = new Date(Date.UTC(a.getFullYear(), a.getMonth(), a.getDate(), 8, 30, 0)), c = new Date(Date.UTC(a.getFullYear(), a.getMonth(), a.getDate(), 17, 0, 0))), d = a.getTime() > b.getTime() && a.getTime() < c.getTime()
        },
        _isDST: function(a) {
            var b = new Date(a.getFullYear(), 0, 1),
                c = new Date(a.getFullYear(), 6, 1);
            return Math.min(b.getTimezoneOffset(), c.getTimezoneOffset()) === a.getTimezoneOffset()
        }
    };
    jQuery.createComponent("IgniteBarV1", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            barContainer: ".barContainer",
            toggle: ".toggle",
            toggleLabel: ".toggle .toggleLabel",
            toggleCrossIcon: ".toggle .toggleCrossIcon",
            vee24Link: ".actionItemVee24 .action a"
        },
        _$window: a(b),
        _$header: a("#header"),
        _transitionTime: 400,
        _sharingWidth: 0,
        _overlayTimeout: null,
        _idleTime: 3e4,
        _idleTimer: null,
        init: function() {
            var a = this;
            a.$element.addClass("visible"), a._setPosition(!1), a._bindEvents(), a._initialPagePopOut(), a._setIdlePop()
        },
        _setPosition: function(a) {
            var b = this;
            a = a === !0 ? !0 : !1;
            var c = b._$window.height(),
                d = b.$element.height(),
                e = (c - d) / 2,
                f = b._getHeaderBottom();
            e = f > e ? f : e, a ? b.$element.addClass("animate") : b.$element.removeClass("animate"), b.$element.css("top", e + "px")
        },
        _getHeaderBottom: function() {
            var a = this,
                b = a._$header.offset().top + a._$header.height() - a._$window.scrollTop();
            return b
        },
        _bindEvents: function() {
            var b = this;
            b.ui("toggle").on("click tap", function(a) {
                a.preventDefault(), b._toggle()
            }), a(".igniteOverlay").on("click tap", function() {
                b._close()
            }), b.ui("vee24Link").on("click tap", function(a) {
                a.preventDefault(), b._openVee24()
            }), b._$window.on("resize", function() {
                b._setPosition(!0)
            }), b._$window.on("scroll.ignitePopOut", b._closePagePopOut.bind(b)), b._$window.on("scroll click tap", b._clearIdlePop.bind(b))
        },
        _setIdlePop: function() {
            var a = this;
            a._idleTimer = setInterval(function() {
                a._idlePop()
            }, a._idleTime)
        },
        _idlePop: function() {
            var a = this;
            this.ui("toggleCrossIcon").removeClass("transition"), setTimeout(function() {
                a.ui("toggleCrossIcon").addClass("transition")
            }, 0)
        },
        _clearIdlePop: function() {
            clearInterval(this._idleTimer), this._setIdlePop()
        },
        _toggle: function() {
            var a = this;
            a.$element.hasClass("open") ? a._close() : a._open()
        },
        _open: function() {
            var a = this;
            a.$element.addClass("open"), a._openOverlay(), a._closePagePopOut()
        },
        _close: function() {
            var a = this;
            a.$element.removeClass("open"), a._closeSharing(), a._closeOverlay()
        },
        _openOverlay: function() {
            var b = this;
            b._overlayTimeout && clearTimeout(b._overlayTimeout), a(".igniteOverlay").addClass("visible active")
        },
        _closeOverlay: function() {
            var b = this,
                c = a(".igniteOverlay");
            c.removeClass("active"), b._overlayTimeout = setTimeout(function() {
                c.removeClass("visible")
            }, 5 * b._transitionTime)
        },
        _openVee24: function() {
            var a = this;
            a._$window.trigger("vee24_launch_chat")
        },
        _initialPagePopOut: function() {
            var a = site.utils.cookieManager.readCookie("JLR_IgniteBar");
            null === a && (site.utils.cookieManager.createCookie("JLR_IgniteBar", !0, .04), this._openPagePopOut())
        },
        _openPagePopOut: function() {
            this.ui("toggleLabel").addClass("open")
        },
        _closePagePopOut: function() {
            if (this.ui("toggleLabel").hasClass("open")) {
                if (a(b).scrollTop() <= 0) return !1;
                this.ui("toggleLabel").removeClass("open")
            }
            this._$window.off("scroll.ignitePopOut")
        }
    };
    jQuery.createComponent("IgniteBarV2", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            this._bindEvents()
        },
        _bindEvents: function() {
            var b = this;
            a("a", b.$element).on("click tap", {
                that: b
            }, b._onBarClick)
        },
        _onBarClick: function(c) {
            c.data.that;
            return a(c.currentTarget).hasClass("vee24") ? (c.stopImmediatePropagation(), c.preventDefault(), void a(b).trigger("vee24_launch_chat")) : void 0
        }
    };
    jQuery.createComponent("IgniteBarDevice", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        _isCheckbox: null,
        _fieldWrapperElement: null,
        init: function() {
            this._isCheckbox = this.$element.is(":checkbox"), this._label = this.$element.siblings("label"), this._createComponentElements(), this._assignChangeEvents(), this.$element.hide()
        },
        _createComponentElements: function() {
            this._fieldWrapperElement = this.$element.wrap("<div class='ImageSelect'></div>").parent(), this._fieldImage = this.$element.data("image"), this._fieldText = this.$element.siblings(".text"), this._isSelected = this.$element.data("selected"), this._fieldWrapperElement.addClass(this._fieldImage), this._isSelected && (this.$element.prop("checked", !0), this._fieldWrapperElement.addClass("selected"), this._label.addClass("selected"))
        },
        _assignChangeEvents: function() {
            this._label.off("click tap").on("click tap", function(a) {
                a.preventDefault(), this._isCheckbox && this._processClickEvent()
            }.bind(this)), this._fieldWrapperElement.off("click tap").on("click tap", function(a) {
                a.preventDefault(), this._processClickEvent()
            }.bind(this)), this.$element.off("change").on("change", function() {
                this._processChangeEvent()
            }.bind(this))
        },
        _processChangeEvent: function() {
            this.$element.is(":checked") ? (this._fieldWrapperElement.addClass("selected"), this._label.addClass("selected")) : (this._fieldWrapperElement.removeClass("selected"), this._label.removeClass("selected"))
        },
        _processClickEvent: function() {
            if (!this._isCheckbox) {
                var b = this.$element.attr("name");
                a("input[type=radio][name=" + b + "]").each(function(b, c) {
                    a(c).prop("checked", !1), a(c).trigger("change")
                }.bind(this))
            }
            this.$element.is(":checked") ? this.$element.prop("checked", !1) : this.$element.prop("checked", !0), this.$element.trigger("change")
        }
    };
    jQuery.createComponent("ImageSelect", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _$dropdown: null,
        init: function() {
            this.$element.css({
                overflow: "hidden"
            }), this._$dropdown = a(".DropdownNav", this.$element), this.bindEvents()
        },
        bindEvents: function() {
            var b = this;
            a(".chooseModel > a", this.$element).on("click tap", function(a) {
                a.stopPropagation(), a.preventDefault(), b._open()
            })
        },
        _open: function() {
            var b = this,
                c = b.$element.height();
            b.$element.height(c), a(".modelsContainer", b.$element).show(), b.$element.transition({
                height: a(".modelsContainer", b.$element).height(),
                duration: 400
            }), a(".subNavWrapper", b.$element).transition({
                y: 0 - c,
                duration: 400
            }, function() {
                b.$element.addClass("modelsOpened")
            }), a(".subNavWrapper > ul > li > a", b.$element).attr("tabindex", "-1"), a(".modelsContainer .back", b.$element).on("click tap", function(a) {
                a.preventDefault(), b._close()
            })
        },
        _close: function() {
            var b = this,
                c = a(".modelsContainer", b.$element),
                d = c.height();
            c.hide(), b.$element.height("auto");
            var e = b.$element.height();
            b.$element.height(d), c.show(), b.$element.transition({
                height: e,
                duration: 400
            }), a(".subNavWrapper", b.$element).transition({
                y: 0,
                duration: 400
            }, function() {
                a(".modelsContainer", b.$element).hide(), b.$element.height("auto"), b.$element.removeClass("modelsOpened")
            }), a(".subNavWrapper > ul > li > a", b.$element).attr("tabindex", ""), a(".modelsContainer .back", b.$element).off("click tap")
        },
        openModelsOnRotate: function() {
            var a = this;
            a._openModelsOnRotate = !0, enquire.register("screen and (min-width: 1px) and (max-width: " + site.breakpoints.small + "px)", {
                setup: function() {
                    a._openModelsOnRotate === !0 && (a._openModelsOnRotate = !1, a.$element.hasClass("modelsOpened") || (a._$dropdown.hasClass("active") ? a._open() : (a._$dropdown.DropdownNav("open"), setTimeout(function() {
                        a._open()
                    }, 500))))
                },
                deferSetup: !0
            })
        },
        closeModels: function() {
            var a = this;
            a._openModelsOnRotate = !1, this.$element.hasClass("modelsOpened") && a._close()
        }
    };
    jQuery.createComponent("InPageSubNavigation", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            componentIndicator: !0,
            componentIndicatorScrollDuration: 800,
            componentIndicatorScollToFitViewportWait: 2e3,
            componentIndicatorLinkRingScale: .625,
            componentIndicatorLinkRingOpacity: .8
        },
        _$window: a(b),
        _componentsInited: !1,
        _isTouchDevice: !1,
        _dimensions: {
            window: {},
            componentTriggerHook: 0,
            scollToFitViewportTriggerHook: 0,
            header: {},
            footer: {},
            componentIndicator: {},
            scrollTop: 0
        },
        uiSelectors: {
            componentIndicator: ".componentIndicator",
            component: ".components .component:not(.componentIndicatorIgnore)",
            componentIndicatorLink: ".componentIndicatorLink",
            slideReveal: ".slideReveal",
            storyHeader: ".InteractiveStoryHeader",
            titleContainer: ".InteractiveStoryHeader .titleContainer",
            StoryHero: ".StoryHero",
            headerBox: ".StoryHero .headerBox",
            HeroCarousel: ".HeroCarousel",
            articleSharing: ".interactiveStorySharing",
            exploreMoreWording: ".js-itemCategory",
            exploreMoreButton: ".InteractiveStoryHeader .navButton",
            StoryArticle: ".StoryArticle",
            StoryCredit: ".StoryCredit"
        },
        init: function() {
            this._detectDeviceType(), this._refreshDimensions(), this._bindEvents(), this._trackResize(), this._trackStoryHeader(), this._validateHubCookies(), this._getItemCategorySession(), this.options.componentIndicator && this.ui("component").length > 1 && this._componentIndicatorInit(), this.ui("slideReveal").length > 0 && this._revealInit(), this.ui("StoryCredit").length > 0 && this._setCreditAlignment(), this._initComponents()
        },
        _detectDeviceType: function() {
            this._isTouchDevice = site.utils.isMobileDevice(), this._isTouchDevice && (this.$element.addClass("touch"), this.options.componentIndicator = !1)
        },
        _setCreditAlignment: function() {
            "centre" === this.ui("StoryArticle").first().data("alignment") && this.ui("StoryCredit").parent().addClass("centre")
        },
        _getItemCategorySession: function() {
            var c = sessionStorage.getItem("itemCategory"),
                d = sessionStorage.getItem("itemNameplate"),
                e = sessionStorage.getItem("itemTag"),
                f = "",
                g = "",
                h = "";
            if (null !== c) {
                f = "itemCategory=" + c;
                this.ui("exploreMoreWording").each(function(b, d) {
                    var e = a(d),
                        f = a.trim(e.text());
                    e.hasClass("hideOnOver1024") ? e.html(f.replace("EXPLORE", c)) : e.html(f.replace("MORE", c))
                })
            }
            null !== d && (g = "itemNameplate=" + d), null !== e && (h = "itemTag=" + e);
            var i = f + ("" !== g ? "&" + g : "") + ("" !== h ? "&" + h : ""),
                j = i.replace(/^&/, "");
            if ("" !== j) {
                j = "?" + j, b.history.back && this.ui("exploreMoreButton").on("click", function(a) {
                    a.preventDefault(), b.history.back()
                });
                var k = this.ui("exploreMoreButton").attr("href");
                this.ui("exploreMoreButton").attr("href", k + j)
            }
        },
        _refreshDimensions: function() {
            var b = a("#header");
            a(".FooterNav, .SubFooter").eq(0);
            this._dimensions.window.height = this._$window.height(), this._dimensions.componentTriggerHook = this._dimensions.window.height * this._componentIndicatorComponentTriggerHook, this._dimensions.scollToFitViewportTriggerHook = this._dimensions.window.height * this._componentIndicatorScollToFitViewportTriggerHook, this._dimensions.header.bottom = b.height(), this._refreshDimensionsCompontentIndicator()
        },
        getDimension: function(a, b) {
            var c = null !== a ? this._dimensions[a][b] : this._dimensions[b];
            return "undefined" != typeof c ? c : !1
        },
        _refreshDimensionsCompontentIndicator: function() {
            this._dimensions.componentIndicator.top = this.ui("componentIndicator").offset().top
        },
        _bindEvents: function() {
            this._$window.smartresize(this._refreshDimensions.bind(this))
        },
        _initComponents: function() {
            this.ui("StoryHero").StoryHero(), this.$element.find(".StoryArticle").StoryArticle(), this.$element.find(".StoryArticleVideo").StoryArticleVideo(), this.$element.find(".StoryArticleImage").StoryArticleImage(), this.$element.find(".StoryArticleEnhancedImageBlock").StoryArticleEnhancedImageBlock(), this.$element.find(".StoryArticleQuote").StoryArticleQuote(), this.$element.find(".StoryExtract").StoryExtract(), this.$element.find(".StoryGallery").StoryGallery(), this.$element.find(".StoryCallsToAction").StoryCallsToAction(), this.$element.find(".StoryLinks").StoryLinks(), this.$element.find(".StoryArticleMap").StoryArticleMap(), this._componentsInited = !0, this.$element.trigger("componentsInited.InteractiveStory")
        },
        componentsInited: function() {
            return this._componentsInited
        },
        _trackResize: function() {
            var b = a(this._$window, this.$element.parents(".InteractiveStory").find(".component"));
            b.smartresize(this._trackedResize.bind(this))
        },
        _trackStoryHeader: function() {
            function b() {
                if (g.length) {
                    var a = f.scrollTop(),
                        b = h.offset().top - a + .5 * h.height(),
                        c = g.offset().top - a;
                    c >= b ? i.addClass("title_visible") : b > c && i.removeClass("title_visible")
                }
            }

            function d() {
                var a = g.height() ? g.height() : 0,
                    b = h.offset().top + .5 * h.height(),
                    c = f.scrollTop() + a;
                c >= b ? i.addClass("title_visible") : b > c && i.removeClass("title_visible")
            }
            if (!this.ui("headerBox").length) return !1;
            var e = !1,
                f = a(c),
                g = this.ui("storyHeader"),
                h = this.ui("headerBox"),
                i = this.ui("titleContainer"),
                j = site.utils.isMobileDevice() ? d : b;
            this._$window.on("load", j), this._$window.on("scroll", function() {
                e && clearTimeout(e), e = setTimeout(j, 17)
            })
        },
        _validateHubCookies: function() {
            if ("false" === site.utils.cookieManager.readCookie("interactive_story_visited")) {
                var a = .00694,
                    b = site.utils.cookieManager.readCookie("extra_stories_loaded"),
                    c = site.utils.cookieManager.readCookie("filters_applied"),
                    d = site.utils.cookieManager.readCookie("scroll_position");
                site.utils.cookieManager.createCookie("extra_stories_loaded", parseInt(b, 10), a), site.utils.cookieManager.createCookie("interactive_story_visited", !0, a), site.utils.cookieManager.createCookie("filters_applied", c, a),
                    site.utils.cookieManager.createCookie("scroll_position", d, a)
            }
        },
        _trackedResize: function() {
            this.$element.trigger("resize.InteractiveStory")
        },
        _$componentIndicatorList: null,
        _componentIndicatorWaypoints: {},
        _componentIndicatorIsScrolling: !1,
        _componentIndicatorStates: {
            scrolling: "componentIndicatorScrolling",
            linkActive: "active",
            linkScrollingTo: "scrollingTo"
        },
        _componentIndicatorScollToFitViewportTimeout: 0,
        _componentIndicatorComponentTriggerHook: 1,
        _componentIndicatorScollToFitViewportTriggerHook: .3,
        _componentIndicatorTransitionStylingApplied: !1,
        _componentIndicatorInit: function() {
            this._$componentIndicatorList = a('<ol class="componentIndicatorList"/>'), this.ui("componentIndicator").append(this._$componentIndicatorList), this._componentIndicatorCheckForIgnores(), this.ui("component").each(this._componentIndicatorBuildItem.bind(this)), this._componentIndicatorRefreshWaypoints(), this._refreshDimensions(), this._$window.smartresize(this._componentIndicatorRefreshWaypoints.bind(this)), this.ui("component").smartresize(this._componentIndicatorRefreshWaypoints.bind(this)), this._$window.on("scroll resize", this._componentIndicatorOnScrollResize.bind(this)), this._componentIndicatorRefresh()
        },
        componentIndicatorIsScrolling: function() {
            return this._componentIndicatorIsScrolling
        },
        _componentIndicatorCheckForIgnores: function() {
            this.ui("component").each(function(b, c) {
                var d = a(c);
                d.find(">").data("component-indicator-ignore") && d.addClass("componentIndicatorIgnore")
            }), this.uiElements.component = this.$element.find(this.uiSelectors.component)
        },
        _componentIndicatorGetLink: function(b) {
            return this.ui("componentIndicatorLink").filter(function() {
                return a(this).attr("href") === "#" + b
            })
        },
        _componentIndicatorBuildItem: function(b, c) {
            var e = a(c);
            if (e.attr("id") !== d) {
                var f = a('<li class="componentIndicatorItem"></li>'),
                    g = a('<a href="#' + e.attr("id") + '" class="componentIndicatorLink"><span class="componentIndicatorLinkRing"></span><span class="componentIndicatorLinkDot"></span></a>');
                this._$componentIndicatorList.append(f.append(g)), g.on("click", this._componentIndicatorOnClickLink.bind(this, g))
            }
        },
        _componentIndicatorHighlightLink: function(a) {
            this.ui("componentIndicatorLink").removeClass(this._componentIndicatorStates.linkActive), a && this._componentIndicatorGetLink(a).addClass(this._componentIndicatorStates.linkActive)
        },
        _componentIndicatorCheckWaypoints: function(c) {
            var d, e = !1,
                f = [],
                g = this._dimensions.componentTriggerHook;
            a.each(this._componentIndicatorWaypoints, function(a) {
                var b = this._componentIndicatorWaypoints[a];
                return c >= b.top - g && c <= b.bottom - 1 && f.push(a), f.length > 1 ? !1 : void 0
            }.bind(this)), e = f[0], b.clearTimeout(this._componentIndicatorScollToFitViewportTimeout), this._componentIndicatorTransitionStylingApplied && this._componentIndicatorRemoveTransitionStyling(), f.length > 1 && !this._componentIndicatorIsScrolling && (d = this._componentIndicatorTransitionLinks(f, c), this._componentIndicatorScrollToFitViewport(c, d)), this._componentIndicatorHighlightLink(e)
        },
        _componentIndicatorScrollToFitViewport: function(c, d) {
            var e = this._componentIndicatorWaypoints[d],
                f = e.top,
                g = e.componentTop,
                h = this._dimensions.scollToFitViewportTriggerHook,
                i = this.options.componentIndicatorScrollDuration,
                j = f + h > c && c !== f;
            j && (this._componentIndicatorScollToFitViewportTimeout = b.setTimeout(site.utils.scrollTo.bind(site.utils, g, i, a.noop, "easeOutSine", !0), this.options.componentIndicatorScollToFitViewportWait))
        },
        _componentIndicatorTransitionLinks: function(b, c) {
            var d, e = b[0],
                f = this._dimensions.componentTriggerHook,
                g = this._componentIndicatorWaypoints[e],
                h = (g.bottom - c) / f,
                i = 1 - h,
                j = h > this._componentIndicatorScollToFitViewportTriggerHook ? 0 : 1;
            return a.each(b, function(a, b) {
                var c = this._componentIndicatorGetLink(b),
                    d = a ? i : h,
                    e = this.options.componentIndicatorLinkRingScale,
                    f = d * (1 - e) + e,
                    g = this.options.componentIndicatorLinkRingOpacity + d;
                c.addClass("noTransition"), c.find(".componentIndicatorLinkRing").css({
                    transform: "scale(" + f + ") translate3d(0,0,0)",
                    opacity: g
                }), c.find(".componentIndicatorLinkDot").css("transform", "scale(" + d + ")")
            }.bind(this)), this._componentIndicatorTransitionStylingApplied = !0, d = b[j]
        },
        _componentIndicatorRemoveTransitionStyling: function() {
            this.ui("componentIndicatorLink").removeClass("noTransition").find(".componentIndicatorLinkRing, .componentIndicatorLinkDot").css({
                transform: "",
                opacity: ""
            }), this._componentIndicatorTransitionStylingApplied = !1
        },
        _componentIndicatorUpdatePosition: function(a) {
            var b, c = a + this._dimensions.window.height,
                d = Math.max(0, (this._dimensions.header.bottom - a) / 2),
                e = Math.max(0, c - this._dimensions.footer.top);
            b = d ? "translateY(-50%) translate(0, " + d + "px)" : e ? "translateY(-50%) translate(0, -" + e + "px)" : "translateY(-50%)", this.ui("componentIndicator").css("transform", b)
        },
        _componentIndicatorOnClickLink: function(a, c) {
            var d = a.attr("href").replace("#", ""),
                e = this.options.componentIndicatorScrollDuration;
            c.preventDefault(), a.addClass(this._componentIndicatorStates.linkScrollingTo), this.ui("componentIndicator").addClass(this._componentIndicatorStates.scrolling), this._componentIndicatorIsScrolling = !0, this._$window.trigger("scrolling.InteractiveStory.start"), site.utils.scrollTo(this._componentIndicatorWaypoints[d].top, e), b.setTimeout(function() {
                this._$window.trigger("scrolling.InteractiveStory.stop"), a.removeClass(this._componentIndicatorStates.linkScrollingTo), this.ui("componentIndicator").removeClass(this._componentIndicatorStates.scrolling), this.ui("componentIndicatorLink").removeClass("active"), a.addClass("active"), this._componentIndicatorIsScrolling = !1
            }.bind(this), e + 50)
        },
        _componentIndicatorOnScrollResize: function() {
            b.requestAnimationFrame(this._componentIndicatorRefresh.bind(this))
        },
        _componentIndicatorRefreshWaypoints: function() {
            this.ui("component").each(function(b, c) {
                var d = a(c),
                    e = d.attr("id"),
                    f = Math.round(d.offset().top),
                    g = Math.round(d.height() + f);
                this._componentIndicatorWaypoints[e] = {
                    top: 0 === b ? 0 : f,
                    componentTop: f,
                    bottom: g
                }
            }.bind(this))
        },
        _componentIndicatorRefresh: function() {
            var a = this._$window.scrollTop();
            this._dimensions.scrollTop = a, this._componentIndicatorCheckWaypoints(a), this._componentIndicatorUpdatePosition(a)
        },
        _revealInit: function() {
            this._isTouchDevice || this.ui("slideReveal").InteractiveStorySlideReveal().InteractiveStorySlideRevealOverlay({
                InteractiveStory: this
            })
        }
    };
    jQuery.createComponent("InteractiveStory", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _$window: a(b),
        _slideRevealWrapperRef: ".slideRevealWrapper",
        _$slideRevealWrapper: null,
        _slideRevealWrapperHeight: 0,
        _componentParentRef: ".component",
        _$componentParent: null,
        _componentParentTop: 0,
        init: function() {
            this._isTouchDevice || (this._revealAddWrapper(), this._onResize(), this._revealBindEvents())
        },
        _revealAddWrapper: function() {
            this.$element.wrap('<div class="' + this._slideRevealWrapperRef.replace(".", "") + '"></div>'), this._$slideRevealWrapper = this.$element.parents(this._slideRevealWrapperRef).eq(0), this._$componentParent = this.$element.parents(this._componentParentRef).eq(0), this._$componentParent.addClass("revealComponent")
        },
        _onResize: function() {
            this._revealSetHeights(), this._revealSetPositions()
        },
        _revealSetHeights: function() {
            this._slideRevealWrapperHeight = this._$slideRevealWrapper.height(), this._componentParentTop = this._$componentParent.offset().top, this._$componentParent.height(this._slideRevealWrapperHeight)
        },
        _getDimension: function(a, b) {
            return this.$element.parents(".InteractiveStory").eq(0).InteractiveStory("getDimension", a, b)
        },
        _revealSetPositions: function() {
            var a = this._slideRevealWrapperHeight,
                b = this._getDimension("window", "height"),
                c = this._componentParentTop - this._$window.scrollTop();
            b > c && c > -a ? a > b ? (c = c > 0 ? 0 : c, c = b - a > c ? b - a : c, c > b - a && 0 > c ? this._$slideRevealWrapper.removeClass("fixed") : this._$slideRevealWrapper.addClass("fixed").css("top", c)) : (c = 0 > c ? 0 : c, c = c > b - a ? b - a : c, c > b - a && c > 0 ? this._$slideRevealWrapper.removeClass("fixed") : this._$slideRevealWrapper.addClass("fixed").css("top", c)) : this._$slideRevealWrapper.removeClass("fixed")
        },
        _revealBindEvents: function() {
            this._$window.on("scroll", this._onScrollWrapper.bind(this)), this._$window.smartresize(this._onResize.bind(this))
        },
        _onScrollWrapper: function() {
            b.requestAnimationFrame(this._revealSetPositions.bind(this))
        }
    };
    jQuery.createComponent("InteractiveStorySlideReveal", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            InteractiveStory: null
        },
        _$window: a(b),
        _$positionElement: null,
        _hasRevealOverlay: !0,
        _slideRevealOverlayRef: ".slideRevealOverlay",
        _$slideRevealOverlay: null,
        _positionTop: 0,
        _positionBottom: 0,
        init: function() {
            var a = this.options.InteractiveStory;
            a && (a._componentsInited ? this._componentReadyInit() : a.$element.on("componentsInited.InteractiveStory", this._componentReadyInit.bind(this)))
        },
        _componentReadyInit: function() {
            this.$element.data("slide-reveal-overlay") && (this._getPositionElement(), this._refreshPosition(), this._initRevealOverlay(), this._revealBindEvents())
        },
        _getPositionElement: function() {
            var a = this.$element.parents(".component").eq(0);
            this._$positionElement = a
        },
        _refreshPosition: function() {
            var a = this._$positionElement.outerHeight();
            this._positionTop = this._$positionElement.offset().top, this._positionBottom = this._positionTop + a
        },
        _getDimension: function(a, b) {
            return this.$element.parents(".InteractiveStory").eq(0).InteractiveStory("getDimension", a, b)
        },
        _revealBindEvents: function() {
            this._$window.on("scroll", this._onScrollWrapper.bind(this)), this._$window.smartresize(this._refreshPosition.bind(this))
        },
        _onScrollWrapper: function() {
            b.requestAnimationFrame(this._onScroll.bind(this))
        },
        _onScroll: function() {
            var a = this._getDimension("window", "height"),
                b = this._$window.scrollTop(),
                c = b + a,
                d = this._positionTop,
                e = this._positionBottom,
                f = c >= d && e >= b;
            this._onScrollRevealOverlay(b, d, e, f)
        },
        _initRevealOverlay: function() {
            this._hasRevealOverlay && (this.$element.append('<div class="' + this._slideRevealOverlayRef.replace(".", "") + '"></div>'), this._$slideRevealOverlay = this.$element.find(this._slideRevealOverlayRef))
        },
        _onScrollRevealOverlay: function(a, b, c, d) {
            if (d) {
                var e, f;
                e = Math.abs((b - a) / (b - c) * .8), f = Math.max(0, Power2.easeInOut.getRatio(e)), this._$slideRevealOverlay.css("opacity", f)
            }
        }
    };
    jQuery.createComponent("InteractiveStorySlideRevealOverlay", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _$header: a("#header"),
        _headerHeight: 0,
        _tables: null,
        _currentTable: null,
        _scrollTopWindow: null,
        _$slideWrapperMain: null,
        _$window: a(b),
        _tableTimers: [],
        _headerVisible: !1,
        _beginAnimation: function(a) {
            b.requestAnimationFrame ? b.requestAnimationFrame(a) : a()
        },
        _createShadowTitleColumn: function() {
            var b = a(this._currentTable);
            if (!(b.find("tbody th").length < 1)) {
                b.after('<table class="sticky-column" />');
                var c = b.find("thead, tbody").clone();
                b.siblings(".sticky-column").append(c).find("thead th:gt(0)").remove().end().find("tbody td").remove().end().addClass("compare-table"), b.hasClass("vehicle-table") && b.siblings(".sticky-column").addClass("vehicle-table")
            }
        },
        _createShadowHeaderColumn: function() {
            var b = a(this._currentTable);
            b.after('<table class="sticky-header" />');
            var c = b.siblings(".sticky-header"),
                d = b.find("thead th").clone();
            c.html("<thead><tr></tr></thead>"), c.find("tr").html(d), c.addClass("compare-table"), c.wrap('<div class="sticky-header-wrapper" />')
        },
        _responsiveArrow: function(b) {
            var c = a(".KeeComparisonTool");
            b && c.hasClass("sliding-active") ? c.removeClass("sliding-active") : c.hasClass("sliding-active") || c.addClass("sliding-active"), setTimeout(function() {
                a(".Accordion").Accordion("calculateNewHeight")
            }, 100)
        },
        _updateStickyDimensions: function() {
            function b() {
                c.find("th").width(f), c.find("tbody tr").each(function(b, c) {
                    var d = e.find("tbody tr").eq(b).height();
                    a(c).height(d)
                }), c.find("thead th").height(g), d.find("th").height(g)
            }
            var c = a(this._currentTable).siblings(".sticky-column"),
                d = a(this._currentTable).siblings(".sticky-header-wrapper").find(".sticky-header"),
                e = a(this._currentTable),
                f = e.find("thead th").width(),
                g = e.find("thead th").height();
            e.find("tbody td").height(), e.find("tbody tr").height();
            this._beginAnimation(b)
        },
        _resizeHandler: function() {
            function b() {
                c._headerHeight = c._$header.height(), d.each(function(b, e) {
                    c._currentTable = a(e), c._updateStickyDimensions(), c._stickHeader(d)
                })
            }
            var c = this,
                d = a(c._tables),
                e = null;
            c._$window.resize(function() {
                e && clearTimeout(e), e = setTimeout(b, 500)
            }), b()
        },
        _stickHeader: function(b) {
            function c(b, c) {
                var e = a(c),
                    f = e.siblings(".sticky-header-wrapper");
                if (!e.hasClass("no-sticky-header-js") && e.closest(".accordion-group").hasClass("open")) {
                    var g = e.offset().top,
                        h = d._headerHeight - a('.NotificationBar[data-state="dismiss"]').height(),
                        i = g - h,
                        j = i + e.outerHeight() - e.find("tr").last().outerHeight() - f.outerHeight(),
                        k = d._scrollTopWindow > i && d._scrollTopWindow < j;
                    f.css("top", h), k ? (clearTimeout(d._tableTimers[b]), f.removeClass("transition"), f.addClass("fixed"), d._headerVisible || d._proxyScroll(), d._headerVisible = !0) : (clearTimeout(d._tableTimers[b]), f.addClass("transition"), d._tableTimers[b] = setTimeout(function() {
                        f.removeClass("transition fixed")
                    }, 200), d._headerVisible = !1)
                }
            }
            var d = this;
            b || a(d._tables);
            b.each(c)
        },
        _proxyScroll: function() {
            var b = this;
            a(".sticky-header-wrapper").scrollLeft(b._$slideWrapperMain.scrollLeft()), b._$slideWrapperMain.scrollLeft() < 1 ? b._responsiveArrow(!0) : b._responsiveArrow(!1)
        },
        _initEvents: function() {
            var b = this,
                c = a(this._tables).siblings(".sticky-column"),
                d = a(this._tables);
            b._scrollTopWindow = b._$window.scrollTop(), b._resizeHandler(), b._$slideWrapperMain.on("scroll", b._proxyScroll.bind(b));
            var e = 0;
            b._$slideWrapperMain.scroll(function() {
                var d = a(".slide-wrapper-main").scrollLeft();
                b._beginAnimation(function() {
                    c.css("transform", "translateX(" + d + "px)"), a(".accordion-group-title").css("padding-left", d + 20)
                }), e = d
            }), b._$window.scroll(function() {
                b._scrollTopWindow = b._$window.scrollTop(), b._headerHeight = b._$header.height(), b._stickHeader(d)
            }), b._$window.on("beforeCloseNotificationBar", function() {
                b._stickHeader(d)
            })
        },
        _initIndvidiualTable: function() {
            a(this._currentTable).wrap('<div class="sticky-wrapper" />'), a(this.currentTable).hasClass("no-sticky-header-js") || this._createShadowHeaderColumn(), this._updateStickyDimensions()
        },
        init: function() {
            var b = this;
            a(function() {
                a("table").length < 1 || a("table.sticky-js").length < 1 || (b._tables = a("table.sticky-js"), b._$slideWrapperMain = a(".slide-wrapper-main"), b._headerHeight = b._$header.height(), a(b._tables).each(function(a, c) {
                    b._currentTable = c, b._initIndvidiualTable()
                }), b._initEvents())
            })
        }
    };
    jQuery.createComponent("KeeComparisonTool", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = "scroll mousedown DOMMouseScroll mousewheel keyup touchstart pointerdown MSPointerDown",
        f = a("html, body"),
        g = {
            init: function() {
                var c = this,
                    d = null;
                a(b).on("resize", function() {
                    d && clearTimeout(d), d = setTimeout(function() {
                        a(".Accordion").Accordion("calculateNewHeight"), c._resetAccordionTitleWidth()
                    }, 500)
                }), a(".accordion-group-title").off(), a(".accordion-group-title").on("click", function(b) {
                    var d = a(this);
                    c._toggleSection(b);
                    a(".accordion-group-title").index(d);
                    if (d.parent().hasClass("open")) {
                        var g = a("#header").height(),
                            h = d.offset().top - g;
                        f.on(e, c._scrollStop), f.animate({
                            scrollTop: h
                        }, 700)
                    }
                }), c._closeAll(), a(".KeeComparisonTool").removeClass("not-init"), c._resetAccordionTitleWidth()
            },
            _scrollStop: function() {
                f.stop(), f.off(e, this._scrollStop)
            },
            _toggleSection: function(b, c) {
                var d = a(b.currentTarget),
                    e = d.find(".accordion-toggle-icon"),
                    f = d.siblings(".accordion-group-content");
                e.hasClass("open") ? (e.removeClass("open").addClass("closed"), d.parent().removeClass("open").addClass("closed"), f.height(0)) : (e.removeClass("closed").addClass("open"), d.parent().removeClass("closed").addClass("open"), f.height(f.find("table").height())), a(".Accordion").Accordion("calculateNewHeight")
            },
            _closeAll: function(b) {
                a(".accordion-toggle-icon").not(":eq(" + b + ")").removeClass("open").addClass("closed"), a(".accordion-group").not(":eq(" + b + ")").removeClass("open").addClass("closed"), a(".accordion-group-content").not(":eq(" + b + ")").height(0), a(".Accordion").Accordion("calculateNewHeight")
            },
            _resetAccordionTitleWidth: function() {
                var c = a(b).width() - 40;
                a(".accordion-toggle-icon-wrapper").css("max-width", c)
            }
        };
    jQuery.createComponent("KeeComparisonToolAccordion", g)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _bars: null,
        _model: null,
        _barSelector: ".vehicle-table .bar",
        _buildModel: function() {
            var b = this;
            b._model = {}, a.each(b._bars, function(c, d) {
                var e = a(d).attr("data-key"),
                    f = a(d).attr("data-value").replace(/[^\d.-]/g, "");
                b._model.hasOwnProperty(e) ? b._model[e].push(parseFloat(f, 10)) : b._model[e] = [parseFloat(f, 10)]
            })
        },
        _findOptimal: function(a) {
            var b = this,
                c = !0;
            "Fuel Consumption (EC Combined)" === a && (c = !1);
            for (var d = -1, e = -1, f = b._model[a].length, g = 0; f > g; g++) - 1 === d && (d = b._model[a][g], e = g), b._model[a][g] > d && !c && (d = b._model[a][g], e = g), b._model[a][g] < d && c && (d = b._model[a][g], e = g);
            return e
        },
        _setWidths: function(b) {
            for (var c = this, d = null, e = 50, f = c._model[b].length, g = 0; f > g; g++) {
                var h = c._model[b][g];
                100 > h && (h += 100), (null === d || h > d) && (d = h)
            }
            for (var i = 0; f > i; i++) {
                var j = c._model[b][i];
                100 > j && (j += 100);
                var k = .1 + .9 * (j - e) / (d - e);
                a(a(c._barSelector + '[data-key="' + b + '"]').get(i)).css("width", 100 * k + "%")
            }
        },
        init: function() {
            var b = this;
            a(function() {
                if (!(a(b._barSelector).length < 1)) {
                    b._bars = a(b._barSelector), b._buildModel();
                    for (var c in b._model)
                        if (b._model.hasOwnProperty(c)) {
                            var d = b._findOptimal(c);
                            if (-1 !== d) {
                                var e = a(a(b._barSelector + '[data-key="' + c + '"]').get(d));
                                e.addClass("optimal")
                            }
                            b._setWidths(c);
                            for (var f = b._model[c], g = 0; g < f.length; g++)
                                if (f[g] === b._model[c][d] && d !== g) {
                                    var h = a(a(b._barSelector + '[data-key="' + c + '"]').get(g));
                                    h.addClass("optimal")
                                }
                        }
                }
            })
        }
    };
    jQuery.createComponent("KeeComparisonToolBars", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            a("html").addClass("KeeComparisonToolModals"), a(".KeeComparisonToolModals .open-popup-link").magnificPopup({
                type: "inline",
                mainClass: "mfp-animation",
                midClick: !0
            })
        }
    };
    jQuery.createComponent("KeeComparisonTooltips", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            toggleAll: ".ManualsTopicDetails__toggle-all",
            Accordion: ".Accordion",
            openAccordion: ".Accordion .accordion-group.open",
            closedAccordion: ".Accordion .accordion-group.closed"
        },
        _classes: {
            open: "open",
            closed: "closed"
        },
        _isToggleOpen: !1,
        _totalOpen: 0,
        _button: null,
        _linkState: function(a) {
            "open" === a ? this._button.removeClass(this._classes.open).addClass(this._classes.closed) : this._button.removeClass(this._classes.closed).addClass(this._classes.open)
        },
        _handleLinkState: function() {
            var a = this.ui("Accordion").find(".accordion-group.open").length;
            a === this.ui("Accordion").length ? this._linkState("close") : 0 === a && this._linkState("open")
        },
        _toggleAll: function() {
            this._isToggleOpen = this._button.hasClass(this._classes.open) ? !0 : !1, this._isToggleOpen ? a.each(this.ui("Accordion"), function(b, c) {
                a(c).Accordion("externalClose")
            }) : a.each(this.ui("Accordion"), function(b, c) {
                a(c).Accordion("externalOpen")
            })
        },
        init: function() {
            var a = this;
            this._button = this.ui("toggleAll"), this.ui("toggleAll").click(function(a) {
                a.preventDefault(), this._toggleAll()
            }.bind(this)), this.ui("Accordion").on("Accordion:toggled", a._handleLinkState.bind(this))
        }
    };
    jQuery.createComponent("ManualsTopicDetails", e)
}(jQuery, window, document),
function(a, b, c) {
    "use strict";
    var d = {
        init: function() {
            this._isArtOfPerformance = a(".GridCards").length && "undefined" == typeof this.$element.data("geojson"), this._isRideAndDrive = a(".FullWidthCards").length || "undefined" != typeof this.$element.data("geojson"), this._isItineraryMap = a(".GridCards").length && "undefined" != typeof this.$element.data("geojson");
            var b = void 0;
            b = this._isArtOfPerformance ? new ArtOfPerformance(this, "ArtOfPerformance") : this._isRideAndDrive ? new RideAndDrive(this, "RideAndDrive") : this._isItineraryMap ? new ItinaryMap(this, "ItinaryMap") : new MapLocation2Base(this, "MapLocation2Base"), b.init()
        }
    };
    jQuery.createComponent("MapLocation2", d)
}(jQuery, window, document),
function(a) {
    var b = {
        _defaults: {
            className: "Modal",
            selector: ".Modal",
            speed: 350,
            modalModifier: null,
            closeLabel: null
        },
        _modal: null,
        _modalContent: null,
        _elem: null,
        init_rtl: function() {},
        init: function() {
            this._elem = this.$element.get(0)
        },
        _attachModal: function() {
            var b = this,
                c = a.createElement("section"),
                d = this.options,
                e = d.className,
                f = d.modalModifier,
                g = d.closeLabel,
                h = '\n            <div class="' + e + '__content-wrapper">\n              <div class="' + e + '__header">\n                <button data-modal-close class="' + e + '__close"></button>\n              </div>\n              <div data-modal-content class="' + e + '__content"></div>\n              <div data-modal-footer class="' + e + '__footer"></div>\n            </div>\n          ';
            c.setAttribute("data-modal", ""), c.setAttribute("role", "dialog"), c.setAttribute("tabIndex", "-1"), c.classList.add(e), null !== f && (Array.isArray(f) || (this.options.modalModifier = f.split()), this.options.modalModifier.forEach(function(a) {
                return c.classList.add(e + "--" + a)
            })), c.innerHTML = h, a.body.appendChild(c), this._modal = c;
            var i = c.querySelectorAll("[data-modal-content]")[0];
            this._modalContent = i;
            var j = c.querySelectorAll("[data-modal-footer]")[0];
            this._modalFooter = j;
            var k = a.createElement("div");
            k.classList.add(e + "__background"), k.setAttribute("data-modal-close", ""), c.appendChild(k), [].concat(_toConsumableArray(this._modal.querySelectorAll("[data-modal-close]"))).forEach(function(a) {
                null !== g && a.setAttribute("aria-label", g), a.addEventListener("click", function(a) {
                    a.preventDefault(), b._close()
                })
            })
        },
        _detachModal: function() {
            var b = a.querySelectorAll(this.options.selector)[0];
            a.body.removeChild(b)
        },
        _keyboardControls: function() {
            var a = this;
            this._modal.focus();
            var b = site.utils.getTabbable(this._modal);
            this._modal.addEventListener("keydown", function(c) {
                27 === c.keyCode ? (c.preventDefault(), a._close()) : c.shiftKey && 9 === c.keyCode && (c.preventDefault(), b[0].focus())
            }), 1 === b.length ? b[0].addEventListener("keydown", function(a) {
                9 === a.keyCode && (a.preventDefault(), b[0].focus())
            }) : (b[0].addEventListener("keydown", function(a) {
                a.shiftKey && 9 === a.keyCode && (a.preventDefault(), b[b.length - 1].focus())
            }), b[b.length - 1].addEventListener("keydown", function(a) {
                a.shiftKey || 9 !== a.keyCode || (a.preventDefault(), b[0].focus())
            }))
        },
        _open: function(a) {
            var b = this;
            this._toggleContent(!0), this._attachModal(), this._modalContent.innerHTML = "", this._modalContent.appendChild(a.cloneNode(!0)), this._modal.style.display = "block", this._elem.setAttribute("data-modal-return", "true");
            var c = function() {
                b._modalContent.scrollTop === b._modalContent.scrollHeight - b._modalContent.offsetHeight ? (b._modalFooter.style.opacity = 0, requestAnimationFrame(function() {
                    setTimeout(function() {
                        b._modalFooter.style.display = "none", b.isHidden = !0
                    }, 10)
                })) : b._modalContent.scrollTop !== b._modalContent.scrollHeight - b._modalContent.offsetHeight && b.isHidden && (b.isHidden = !1, b._modalFooter.style.display = "block", requestAnimationFrame(function() {
                    setTimeout(function() {
                        b._modalFooter.style.opacity = 1
                    }, 10)
                }))
            };
            requestAnimationFrame(function() {
                setTimeout(function() {
                    b._modal.style.opacity = 1, site.utils.isElementVerticallyScrollable(b._modalContent) ? b._modalContent.addEventListener("scroll", c) : b._modalFooter.style.display = "none"
                }, 10), setTimeout(function() {
                    b._keyboardControls(), b._eventTrigger(b.options.className + ":opened")
                }, b.options.speed)
            })
        },
        _toggleContent: function(b) {
            var c = a.querySelector(".pageWrapper"),
                d = a.querySelector(".sharedNavigation");
            b ? (c.setAttribute("aria-hidden", "true"), site.utils.checkDefined(d) && d.setAttribute("aria-hidden", "true")) : (c.removeAttribute("aria-hidden"), site.utils.checkDefined(d) && d.removeAttribute("aria-hidden"))
        },
        _close: function() {
            var b = this;
            this._toggleContent(!1), requestAnimationFrame(function() {
                b._modal.style.opacity = 0, setTimeout(function() {
                    b._modal.style.display = "none", b._eventTrigger(b.options.className + ":closed"), b._detachModal(), b._elem.focus();
                    var c = a.querySelectorAll("[data-modal-return]")[0];
                    c.focus(), c.removeAttribute("data-modal-return")
                }, b.options.speed)
            })
        },
        _eventTrigger: function(a) {
            var b = new CustomEvent(a);
            this._elem.dispatchEvent(b)
        },
        open: function(a) {
            this._open(a)
        },
        close: function() {
            this._close()
        },
        resetKeyboardControls: function() {
            this._keyboardControls()
        }
    };
    jQuery.createComponent("Modal", b)
}(document),
function(a) {
    var b = {
        _defaults: {
            className: "Pagination",
            selector: ".Pagination",
            isBlack: !1,
            classes: {
                controls: "Pagination__controls",
                paused: "Pagination--paused",
                wrapper: "Pagination__button-wrapper",
                wrapperPlayPause: "Pagination__button-wrapper--play-pause",
                wrapperPip: "Pagination__button-wrapper--pip",
                pip: "Pagination__pip",
                pipActive: "Pagination__pip--active",
                play: "Pagination__play",
                pause: "Pagination__pause",
                playing: "Pagination--playing",
                pauseTimerIcon: "Pagination__pause-timer-icon",
                pauseTimerIconCountdown: "Pagination__pause-timer-icon-countdown",
                pauseTimerIconCountdownAnimating: "Pagination__pause--animation",
                pauseControlIcon: "Pagination__pause-control-icon",
                playControlIcon: "Pagination__play-control-icon"
            },
            labels: {
                play: "play",
                pause: "pause",
                pip: "go to []",
                paused: "paused",
                playing: "playing",
                slideChanged: "showing []",
                next: "next",
                previous: "previous"
            },
            autoplay: {
                enabled: !1,
                duration: 1e3,
                pauseAtStart: !1,
                delay: 0
            },
            loop: !0,
            numberOfPips: null,
            defaultSelected: 0
        },
        _elem: null,
        _pipIndexAttribute: "data-pip-index",
        _playingStatus: null,
        _allowFocusToggle: !0,
        _delayTimer: null,
        _nonHoverPaused: null,
        _events: {
            init: "init",
            beforeChange: "beforeChange",
            afterChange: "afterChange",
            play: "play",
            pause: "pause",
            loopEnd: "loopEnd",
            gotoNext: "next",
            gotoPrevious: "previous",
            countdownEnd: "countdownend",
            liveRegionUpdate: "liveRegionUpdate"
        },
        _controls: {
            play: null,
            pause: null,
            countdown: null,
            pips: null
        },
        _timer: {
            started: null,
            remaining: null
        },
        init_rtl: function() {},
        init: function() {
            this._elem = this.$element.get(0), this._elem && this.options.numberOfPips && this._createPagination()
        },
        _createPagination: function() {
            var a = this._generateHTML();
            this._appendPaginationToContainer(a), this._addPaginationEvents(), this._controls.pause && this._controls.pause.classList.add(this.options.classes.pauseTimerIconCountdownAnimating), this._fireEvent(this._events.init), this._restartAnimation()
        },
        _playButtonHTML: function(a, b) {
            return '<button class="' + a.play + '" aria-label="' + b.paused + ", " + b.play + '">' + this._playControlIconSVG() + "</button>"
        },
        _pauseButtonHTML: function(a, b) {
            return '<button class="' + a.pause + '" aria-label="' + b.playing + ", " + b.pause + '">\n        ' + this._pauseControlIconSVG() + '\n        <svg class="' + a.pauseTimerIcon + '" aria-hidden="true"><circle class="' + a.pauseTimerIconCountdown + '" r="20" cx="21" cy="21"></circle></svg>\n      </button>'
        },
        _generateHTML: function() {
            var a = this,
                b = this.options,
                c = b.classes,
                d = b.labels,
                e = function(a, b) {
                    return '<li class="' + c.wrapper + " " + b + '">' + a + "</li>"
                },
                f = function(b) {
                    return a._replacePlaceholderLabelText(d.pip, b)
                },
                g = function(b) {
                    return "<button " + a._pipIndexAttribute + '="' + b + '" class="' + c.pip + '" aria-label="' + f(b + 1) + '"></button>'
                },
                h = [].concat(_toConsumableArray(new Array(b.numberOfPips))).map(function(a, b) {
                    return e(g(b), c.wrapperPip)
                }),
                i = this._playButtonHTML(c, d),
                j = this._pauseButtonHTML(c, d),
                k = b.autoplay.enabled ? "" + e(i + j, c.wrapperPlayPause) : "",
                l = '\n        <ul class="' + c.controls + '">\n          ' + k + "\n          " + h.join(" ") + "\n        </ul>\n      ";
            return l
        },
        _appendPaginationToContainer: function(b) {
            var c = a.createElement("div");
            c.innerHTML = b, this._elem.classList.add(this.options.className), this.options.isBlack && this._elem.classList.add(this.options.className + "--black"), this._elem.appendChild(c.querySelector("." + this.options.classes.controls)), this._controls = this._cacheControls(this._elem, this.options.classes, this.options.autoplay.enabled), this._setActiveState(this.options.defaultSelected);
            var d = this.options.autoplay,
                e = d.pauseAtStart ? "paused" : "running";
            this._nonHoverPaused = d.pauseAtStart, d.enabled && (this._setPlayingStatus(e), this._controls.countdown.style.animationDuration = d.duration + "ms")
        },
        _cacheControls: function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : !1,
                d = {};
            return d.pips = [].slice.call(a.querySelectorAll("." + b.pip)), c && (d.play = a.querySelector("." + b.play), d.pause = a.querySelector("." + b.pause), d.countdown = a.querySelector("." + b.pauseTimerIconCountdown)), d
        },
        _getPipsArray: function() {
            return [].slice.call(this._elem.querySelectorAll("." + this.options.classes.pip))
        },
        _setActiveState: function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            this._controls.pips[a].classList.add(this.options.classes.pipActive);
            var b = this._replacePlaceholderLabelText(this.options.labels.slideChanged, a + 1);
            this._updateLiveRegionText(b)
        },
        _replacePlaceholderLabelText: function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
            return a.replace(/[[]]/g, b)
        },
        _updateLiveRegionText: function(a) {
            var b = {
                text: a
            };
            this._fireEvent(this._events.liveRegionUpdate, b)
        },
        _getCurrentActivePipElement: function() {
            return this._elem.querySelector("." + this.options.classes.pipActive)
        },
        _getCurrentActivePipIndex: function() {
            return this._getPipIndex(this._getCurrentActivePipElement())
        },
        _getNextPipIndex: function(a, b) {
            var c = this._getPipIndex(b) + 1;
            return c < a.length ? c : 0
        },
        _getPreviousPipIndex: function(a, b) {
            var c = this._getPipIndex(b) - 1;
            return 0 > c ? a.length - 1 : c
        },
        _getPipIndex: function(a) {
            return parseInt(a.getAttribute(this._pipIndexAttribute), 10)
        },
        _getpauseIconCountdownElement: function() {
            return this._elem.querySelector("." + this.options.classes.pauseTimerIconCountdown)
        },
        _restartAnimation: function() {
            var a = this;
            if ("true" === this._elem.getAttribute("data-playing")) {
                var b = this.options.autoplay,
                    c = this._controls,
                    d = c.countdown,
                    e = c.pause,
                    f = $(d),
                    g = 200,
                    h = b.enabled ? b.delay : 0,
                    i = this._timer.remaining ? this._timer.remaining : b.duration,
                    j = {
                        strokeDashoffset: 122
                    },
                    k = d.style.strokeDashoffset;
                d.style.strokeDashoffset = this._timer.remaining ? k : 0;
                var l = function() {
                        a._timer.started = null, a._timer.remaining = null, site.utils.eventTrigger(e, a._events.countdownEnd)
                    },
                    m = {
                        duration: i,
                        easing: "linear",
                        complete: function() {
                            return f.fadeTo(g, 0, function() {
                                return l()
                            })
                        },
                        step: function() {
                            var b = (new Date).getTime() - a._timer.started;
                            a._timer.remaining = i - b
                        }
                    },
                    n = function() {
                        a._timer.started = (new Date).getTime(), f.animate(j, m)
                    },
                    o = function() {
                        f.fadeTo(g, 1, function() {
                            return n()
                        })
                    };
                setTimeout(function() {
                    return o()
                }, h)
            }
        },
        _clearTimer: function() {
            this._timer = {
                started: null,
                remaining: null
            }
        },
        _pipEventHandler: function(a) {
            a.preventDefault();
            var b = this.options.classes.pipActive,
                c = this._controls.pips,
                d = this._getCurrentActivePipElement(),
                e = a.type,
                f = "click" === e ? a.target : c[this._getNextPipIndex(c, d)],
                g = this._getPipIndex(f);
            if (f !== d) {
                var h = this._controls.countdown;
                $(h).stop(!0), this._clearTimer();
                var i = {
                    eventType: e,
                    pipsArray: c,
                    pipFrom: this._getPipIndex(d),
                    pipTo: this._getPipIndex(f)
                };
                if (e === this._events.countdownEnd && 0 === g && !this.options.loop) return void this._fireEvent(this._events.loopEnd, i);
                this._fireEvent(this._events.beforeChange, i), c.forEach(function(a) {
                    a.classList.remove(b)
                }), this._setActiveState(this._getPipIndex(f)), this._restartAnimation(), this._fireEvent(this._events.afterChange, i)
            }
        },
        _resumeTimerAnimation: function(a, b) {
            if ("hover" !== b || !this._nonHoverPaused) {
                var c = this.options.labels.playing;
                this._updateLiveRegionText(c), this._nonHoverPaused = !1, this._setPlayingStatus(a, b), this._restartAnimation(b)
            }
        },
        _pauseTimerAnimation: function(a, b) {
            "hover" !== b && (this._nonHoverPaused = !0);
            var c = this.options.labels.paused;
            this._updateLiveRegionText(c), $(this._controls.countdown).stop(), this._setPlayingStatus(a, b)
        },
        _addPaginationEvents: function() {
            var a = this,
                b = this._controls,
                c = b.pips,
                d = b.play,
                e = b.pause,
                f = b.countdown;
            c.forEach(function(b) {
                return b.addEventListener("click", function(b) {
                    return a._pipEventHandler(b)
                }, !1)
            }), d && e && f && (e.addEventListener(this._events.countdownEnd, function(b) {
                return a._pipEventHandler(b)
            }, !1), d.addEventListener("click", function(b) {
                return a._resumeTimerAnimation("running", b)
            }, !1), e.addEventListener("click", function(b) {
                return a._pauseTimerAnimation("paused", b)
            }, !1))
        },
        _fireEvent: function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            site.utils.eventTrigger(this._elem, a, b)
        },
        _getPlayingStatus: function() {
            return this._playingStatus
        },
        _setPlayingStatus: function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "paused",
                b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                c = this._controls,
                d = c.play,
                e = c.pause,
                f = c.countdown;
            this._playingStatus = a, this._elem.setAttribute("data-playing", "paused" === a ? "false" : "true"), d && e && "paused" === a ? (this._toggleFocus(e, d, b), this._showControl(d), this._hideControl(e), f.style.animationPlayState = "paused", this._fireEvent(this._events.pause)) : (this._toggleFocus(d, e, b), this._hideControl(d), this._showControl(e), f.style.animationPlayState = "running",
                this._fireEvent(this._events.play))
        },
        _toggleFocus: function(b, c, d) {
            this._allowFocusToggle && a.activeElement === b && d && 0 === d.detail && c.focus()
        },
        _showControl: function(a) {
            a.removeAttribute("aria-hidden"), a.removeAttribute("tabindex")
        },
        _hideControl: function(a) {
            a.setAttribute("aria-hidden", "true"), a.setAttribute("tabindex", "-1")
        },
        _playControlIconSVG: function() {
            return '\n      <svg aria-hidden="true" class="' + this.options.classes.playControlIcon + '" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 14.2 20" style="enable-background:new 0 0 14.2 20;" xml:space="preserve">\n      <g><path d="M0,0v20l14.2-10L0,0z M1.7,3.2l9.6,6.7l-9.6,6.8V3.2z"/></g></svg>\n      '
        },
        _pauseControlIconSVG: function() {
            return '\n        <svg aria-hidden="true" class="' + this.options.classes.pauseControlIcon + '" width="10px" height="16px" viewBox="0 0 10 16" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n          <g stroke="none" stroke-width="1" >\n            <g transform="translate(-473.000000, -299.000000)">\n              <g transform="translate(473.000000, 299.000000)"><polygon points="0 0 2 0 2 16 0 16"></polygon><polygon points="8 0 10 0 10 16 8 16"></polygon></g>\n            </g>\n          </g>\n        </svg>'
        },
        pause: function c() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1,
                c = this._controls.pause;
            if (c) {
                var b = a ? "hover" : !1;
                this._pauseTimerAnimation("paused", b)
            }
        },
        play: function d() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1,
                d = this._controls.play;
            if (d) {
                var b = a ? "hover" : !1;
                this._resumeTimerAnimation("running", b)
            }
        },
        getPlayingStatus: function() {
            return this._getPlayingStatus()
        },
        goToPip: function(a) {
            var b = this._controls.pips[a];
            b && b.click()
        },
        previousPip: function() {
            var a = this._controls.pips,
                b = this._getCurrentActivePipElement(),
                c = this._getPipIndex(b);
            if (this.options.loop || 0 !== c) {
                var d = a[this._getPreviousPipIndex(a, b)];
                this._fireEvent(this._events.gotoPrevious), d.click()
            }
        },
        nextPip: function() {
            var a = this._controls.pips,
                b = this._getCurrentActivePipElement(),
                c = a[this._getNextPipIndex(a, b)],
                d = this._getPipIndex(c);
            (this.options.loop || 0 !== d) && (this._fireEvent(this._events.gotoNext), c.click())
        },
        getCurrentPipIndex: function() {
            return this._getCurrentActivePipIndex()
        },
        updateActivePipByIndex: function(a) {
            var b = this._controls.pips,
                c = this.options.classes.pipActive;
            b.forEach(function(a) {
                return a.classList.remove(c)
            }), this._setActiveState(a)
        },
        getOptions: function() {
            return this.options
        },
        getElement: function() {
            return this._elem
        },
        clearTimer: function() {
            this._clearTimer()
        }
    };
    jQuery.createComponent("Pagination", b, !0)
}(document),
function(a, b, c, d) {
    var e = {
        _$window: a(b),
        _$header: a("#header"),
        uiSelectors: {
            screens: ".screen",
            headingContainer: ".headingContainer",
            heading: ".heading",
            copyContainer: ".copyContainer",
            copy: ".copy",
            imageContainer: ".imageContainer",
            imageLayers: ".imageContainer .layer",
            imageLayersBg: ".imageContainer .layer .layerBg",
            buttonScreenDown: ".buttonScreenDown",
            imageOverlay: ".imageContainer .imageOverlay"
        },
        _waypoints: {
            parallaxStart: null,
            parallaxEnd: null,
            headingTrigger: null,
            copyTrigger: null,
            copyFadeStart: null,
            copyFadeEnd: null
        },
        _parallaxStrength: null,
        states: {
            buttonHidden: "buttonHidden",
            showOverlay: "showOverlay",
            hideCopy: "hidden"
        },
        _checkButtonScreenDownOnScroll: !0,
        _isTouchDevice: null,
        _isCanvasDevice: null,
        _scrolledThroughCopy: !1,
        _attachedThroughCopyTimeout: !1,
        _scrolledThroughHijack: !1,
        _scrollFxOn: !0,
        _originalDimensions: {
            height: a(b).height(),
            width: a(b).width()
        },
        init: function() {
            var a = this;
            a._detectDeviceCapabilities(), a._fitToScreen(!0), a._waypointCalculations();
            var b = a._getScrollPosition();
            a._updateHeading(b), a._updateCopy(b), a.ui("imageLayers").length > 1 && (a._isTouchDevice ? (a._parallaxStrength = 100, a._imageLayerCalculations(), a._tiltParallax()) : (a._setParallaxStrength(), a._imageLayerCalculations(), a._updateImageLayers(b), a._isCanvasDevice && a._imageLayerToCanvas(!1))), a._bindEvents()
        },
        _detectDeviceCapabilities: function() {
            var a = this;
            a.$element.addClass("ParallaxHeroTouchDevice"), a._isTouchDevice = site.utils.isMobileDevice(), a._isCanvasDevice = "?canvas=false" !== b.location.search && !a._isTouchDevice
        },
        _setParallaxStrength: function() {
            var a = this,
                b = 100,
                c = 1.5 * b;
            a.$element.hasClass("ParallaxHeroImageLeft") || a.$element.hasClass("ParallaxHeroImageRight") ? a._parallaxStrength = b : a._parallaxStrength = c
        },
        _getScrollPosition: function() {
            var a = this;
            return a._$window.scrollTop()
        },
        _fitToScreen: function(b) {
            var c, d, e = this,
                f = e._$window.height(),
                g = site.utils.getBreakpointSize();
            "fixed" === e._$header.css("position") ? (c = site.utils.getStickyNavHeight(0), d = site.utils.getStickyNavHeight(site.stickyNavigationTransitionPoint + 1)) : (c = e._$header.height(), d = 0);
            var h = f - c,
                i = f - d;
            e.ui("screens").each(function() {
                var b, c = a(this);
                b = c.hasClass("headingContainer") ? h : "small" === g && c.hasClass("spacerContainer") ? 0 : i, c.css({
                    height: b + "px"
                })
            }), !b && e._isCanvasDevice && e._imageLayerToCanvas(!0)
        },
        _waypointCalculations: function() {
            var a = this,
                b = a._$window.height(),
                c = a.$element.offset().top;
            a._waypoints.parallaxStart = c, a._waypoints.parallaxEnd = a._waypoints.parallaxStart + a.$element.height() - b, a._waypoints.headingTrigger = a.ui("headingContainer").offset().top + a.ui("headingContainer").height() - b, a._waypoints.headingTrigger = a._waypoints.headingTrigger < c ? c : a._waypoints.headingTrigger, a._waypoints.copyTrigger = a.ui("copyContainer").offset().top, a._waypoints.copyFadeEnd = a.ui("copyContainer").offset().top - b / 4, a._waypoints.copyFadeStart = a._waypoints.copyFadeEnd - b / 4
        },
        _updateHeading: function(a) {
            var b = this;
            if (b._isTouchDevice) a > b._waypoints.headingTrigger ? b.ui("heading").addClass("hidden") : b.ui("heading").removeClass("hidden");
            else if (a > b._waypoints.headingTrigger) {
                var c = b._waypoints.headingTrigger - a;
                b.ui("heading").css({
                    transform: "translateY(" + c + "px)"
                })
            } else b.ui("heading").css({
                transform: ""
            })
        },
        _updateCopy: function(a) {
            var b = this;
            if (b._isTouchDevice) a > b._waypoints.copyFadeStart ? b.ui("copy").removeClass("hidden") : b.ui("copy").addClass("hidden");
            else if (b._scrolledThroughHijack) {
                var c = (a - b._waypoints.copyFadeStart) / (b._waypoints.copyFadeEnd - b._waypoints.copyFadeStart);
                c = 0 > c ? 0 : c, c = c > 1 ? 1 : c, b.ui("copy").css({
                    opacity: c
                }), b.ui("imageOverlay").css({
                    opacity: .3 * c
                })
            } else a === b._waypoints.copyTrigger ? (b.ui("imageOverlay").addClass(b.states.showOverlay), b.ui("copy").removeClass(b.states.hideCopy)) : b._scrolledThroughCopy || (b.ui("imageOverlay").removeClass(b.states.showOverlay), b.ui("copy").addClass(b.states.hideCopy))
        },
        _updateButtons: function(a) {
            var b = this;
            0 === a ? (b.ui("buttonScreenDown").removeClass(b.states.buttonHidden), b._checkButtonScreenDownOnScroll = !0) : b._checkButtonScreenDownOnScroll && (b.ui("buttonScreenDown").addClass(b.states.buttonHidden), b._checkButtonScreenDownOnScroll = !1)
        },
        _imageLayerCalculations: function() {
            var b = this;
            b.ui("imageLayers").each(function(c) {
                var d = a(this),
                    e = 2 * (c / (b.ui("imageLayers").length - 1)) - 1,
                    f = b._parallaxStrength * e;
                d.data("parallax-amount", f)
            })
        },
        _imageLayerToCanvas: function(b) {
            var c = this,
                d = "center";
            c.$element.hasClass("ParallaxHeroImageLeft") ? d = "left" : c.$element.hasClass("ParallaxHeroImageRight") && (d = "right"), c.ui("imageLayersBg").each(function() {
                var e = a(this),
                    f = b ? e.next(".layerCanvas") : a('<canvas class="layerCanvas"/>'),
                    g = f.get(0),
                    h = g.getContext("2d"),
                    i = new Image,
                    j = e.css("background-image").replace("url(", "").replace(")", "");
                f.attr({
                    width: e.width(),
                    height: e.height()
                }), e.after(f), i.onload = c._onLoadDrawCanvas.bind(c, g, h, i, d), i.src = j, e.css("display", "none"), i = null
            })
        },
        _onLoadDrawCanvas: function(a, b, c, d) {
            var e = 0;
            "left" === d ? e = -(a.width / 2) : "right" === d && (e = a.width / 2), site.utils.canvasDrawBgCover(b, c, 0, 0, a.width, a.height, e, 0)
        },
        _updateImageLayers: function(b) {
            var c = this,
                d = (b - c._waypoints.parallaxStart) / (c._waypoints.parallaxEnd - c._waypoints.parallaxStart);
            d = 0 > d ? 0 : d, d = d > 1 ? 1 : d, c.ui("imageLayers").each(function() {
                var b = a(this),
                    e = c._parallaxStrength + d * b.data("parallax-amount");
                b.css({
                    transform: "translateZ(" + e + "px)"
                })
            })
        },
        _bindEvents: function() {
            var a = this;
            a._$window.smartresize(a._onResize.bind(a)), a._$window.on("wheel scroll", function(c) {
                if (a._scrollFxOn) {
                    if (!a._isTouchDevice && !a._scrolledThroughCopy && a._$window.scrollTop() >= a._waypoints.copyTrigger) return a._$window.scrollTop(a._waypoints.copyTrigger), a._attachedThroughCopyTimeout = b.setTimeout(function() {
                        a._scrolledThroughCopy = !0, a._scrolledThroughHijack = !0
                    }, 1200), c.preventDefault() && !1;
                    b.requestAnimationFrame(a._scrollHandler.bind(a))
                }
            }), a.ui("buttonScreenDown").on("click", a._onClickButtonScreenDown.bind(this)), a._$window.on({
                "scrolling.InteractiveStory.start": a._onInteractiveStoryScrolling.bind(this),
                "scrolling.InteractiveStory.stop": a._onInteractiveStoryScrolling.bind(this)
            })
        },
        _onResize: function() {
            var a = this;
            (Math.abs(a._originalDimensions.height - a._$window.height() > 100) || a._originalDimensions.width !== a._$window.width()) && (a._fitToScreen(!1), a._waypointCalculations())
        },
        _scrollHandler: function() {
            var a = this,
                b = a._getScrollPosition();
            a._updateHeading(b), a._updateCopy(b), a._updateButtons(b), a.ui("imageLayers").length > 1 && (a._isTouchDevice || a._updateImageLayers(b))
        },
        _onClickButtonScreenDown: function(c) {
            var d = this,
                e = a(c.target),
                f = e.hasClass(".ButtonScreenDown") ? e : e.parents(".buttonScreenDown").eq(0),
                g = f.parents(".screen").next(".screen"),
                h = 0,
                i = 800;
            if (g.length && "none" === g.css("display") && (g = g.next(".screen")), g.length) h = g.offset().top;
            else {
                var j = a(c.target).parents(".component");
                h = j.offset().top + j.height()
            }
            c.preventDefault(), h > 0 && (d._checkButtonScreenDownOnScroll = !1, site.utils.scrollTo(h, i), h === d._waypoints.copyTrigger && (d._scrolledThroughCopy = !0), b.setTimeout(function() {
                d._checkButtonScreenDownOnScroll = !0, h === d._waypoints.copyTrigger && (d._scrolledThroughHijack = !0)
            }, i + 50)), f.addClass(d.states.buttonHidden)
        },
        _tiltParallax: function() {
            var b = this;
            b.ui("imageLayers").each(function() {
                var c = a(this),
                    d = b._parallaxStrength + c.data("parallax-amount");
                c.css({
                    transform: "translateZ(" + d + "px)"
                })
            });
            var c, d, e = 50,
                f = 50,
                g = 100,
                h = new Date,
                i = 0,
                j = 0;
            b._$window.on("devicemotion", function(a) {
                var k = new Date,
                    l = k - h;
                i += l * (a.originalEvent.accelerationIncludingGravity.x - i) / g, j += l * (a.originalEvent.accelerationIncludingGravity.y - j) / g, h = k, c = i / 10, c = -1 > c ? -1 : c, c = c > 1 ? 1 : c, e = 50 + 50 * c, d = j / 10, d = -1 > d ? -1 : d, d = d > 1 ? 1 : d, f = 50 + 50 * d, b.ui("imageContainer").css({
                    "perspective-origin": e + "% " + f + "%"
                })
            })
        },
        _onInteractiveStoryScrolling: function(a) {
            "InteractiveStory.start" === a.namespace ? this._scrollFxOn = !1 : this._scrollFxOn = !0
        }
    };
    jQuery.createComponent("ParallaxHero", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            var a = c.createElement("script");
            a.src = this.$element.data("script-url"), this.$element.append(a)
        },
        _destroy: function() {}
    };
    jQuery.createComponent("QuickQuote", e)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _windowWidth: 0,
        _windowHeight: 0,
        _$window: a(b),
        _hasImage: !1,
        init: function() {
            var b = this;
            b.$element.hasClass("Quote--with-image") && (b._hasImage = !0), b._$window.smartresize(function() {
                b._resizeImage()
            }), b._resizeImage(), a(".Quote__audio-player", b.$element).on("QuotePlayer_playing", function() {
                a(".Quote__image-overlay", b.$element).addClass("Quote__image-overlay--darken")
            }), a(".Quote__audio-player", b.$element).on("QuotePlayer_paused", function() {
                a(".Quote__image-overlay", b.$element).removeClass("Quote__image-overlay--darken")
            }), a(".Quote__audio-player", b.$element).on("QuotePlayer_finished", function() {
                a(".Quote__image-overlay", b.$element).removeClass("Quote__image-overlay--darken")
            })
        },
        _resizeImage: function() {
            var c = this;
            if (this._hasImage === !0) {
                if (c._$window.width() === c._windowWidth) return !1;
                if (c._windowWidth = c._$window.width(), c._windowHeight = c._$window.height(), c._windowWidth >= site.breakpoints.medium) {
                    var d = b.innerHeight ? b.innerHeight : c._windowHeight,
                        e = a(".SubNavigation");
                    1 === e.length ? d = d - 50 - a(".SubNavigation").height() : d -= 50, this.$element.css("height", d)
                } else this.$element.removeAttr("style")
            }
            return !0
        }
    };
    jQuery.createComponent("Quote", c)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _centred: !1,
        _slidOff: !0,
        _rtl: !1,
        _player: null,
        _playLabel: null,
        _pauseLabel: null,
        _width: 0,
        init_rtl: function() {
            this._rtl = !0
        },
        init: function() {
            var c = this;
            c._playLabel = this.$element.attr("data-label-play"), c._pauseLabel = this.$element.attr("data-label-pause"), c._player = a("audio", this.$element).mediaelementplayer({
                startVolume: .8,
                features: ["playpause", "progress", "current", "duration"],
                audioWidth: "100%",
                audioHeight: 40,
                success: function(a) {
                    a.addEventListener("play", function(a) {
                        c._onPlay(a)
                    }), a.addEventListener("pause", function(a) {
                        c._onPause(a)
                    }), a.addEventListener("ended", function(a) {
                        c._onEnded(a)
                    })
                }
            }), a(b).smartresize(function() {
                a(b).width() !== c._width && (c._width = a(b).width(), a(".mejs-time-rail", c.$element).width(0), c._player[0].player.setControlsSize(), c._slidOff === !0 && c._slideOff(0))
            }).trigger("resize"), setTimeout(function() {
                a(b).trigger("resize")
            }, 2e3), this._modals(), this._assignAriaLabel(c._playLabel)
        },
        _assignAriaLabel: function(b) {
            a(".mejs-playpause-button > button", this.$element).attr("aria-label", b)
        },
        _modals: function() {
            a(".QuotePlayer__audio-alternative-button", this.$element).on("click", function() {
                var b = a(this).attr("data-close-label");
                a(this).Modal({
                    closeLabel: b
                }), a(this).Modal("open", a(this).next().get(0))
            })
        },
        _onPause: function() {
            this.$element.trigger("QuotePlayer_paused"), this.$element.removeClass("playing").addClass("paused"), this._assignAriaLabel(this._playLabel)
        },
        _onPlay: function() {
            this.$element.trigger("QuotePlayer_playing"), this.$element.removeClass("paused finished").addClass("playing"), this._assignAriaLabel(this._pauseLabel), this._slidOff = !1, this._slideOn(400)
        },
        _onEnded: function() {
            this.$element.trigger("QuotePlayer_finished"), this.$element.removeClass("playing").addClass("finished"), this._assignAriaLabel(this._playLabel), this._slidOff = !0, this._slideOff(400)
        },
        _slideOff: function(b) {
            var c = 0 - (a(".mejs-time-rail", this.$element).width() + 10),
                d = 0 - a(".mejs-time-total", this.$element).width(),
                e = (a(".mejs-controls", this.$element).width() - (a(".mejs-button", this.$element).outerWidth() + a(".mejs-time", this.$element).outerWidth())) / 2;
            a(".mejs-time", this.$element).transition({
                x: c,
                duration: b
            }), a(".mejs-time-total", this.$element).transition({
                x: d,
                duration: b
            }), this._rtl === !0 && this._centred === !1 && (e = a(".mejs-controls", this.$element).width() - (a(".mejs-button", this.$element).outerWidth() + a(".mejs-time", this.$element).outerWidth())), (this._rtl === !0 || this._centred === !0) && a(".mejs-container", this.$element).transition({
                x: e,
                duration: b
            })
        },
        _slideOn: function(b) {
            a(".mejs-time, .mejs-time-total, .mejs-container", this.$element).transition({
                x: "0px",
                duration: b
            })
        }
    };
    jQuery.createComponent("QuotePlayer", c)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _slider: null,
        uiSelectors: {
            slides: ".RangeCalculatorTooltipSlide",
            sliderWrapper: ".slider-wrapper"
        },
        init: function() {
            var c = this;
            this.$element.css("visible", "hidden"), b.matchMedia("(min-width: 768px)").matches && this._initSlider(), a(b).on("resize.tooltips", function() {
                c._componentResize()
            }), this._isStashed(), this.$element.on("openTooltip", function() {
                setTimeout(function() {
                    c.$element.iosSlider("update")
                }, 100)
            }), this.$element.on("updateSlider", function() {
                c.$element.iosSlider("update")
            })
        },
        _componentResize: function() {
            this._isStashed(), b.matchMedia("(max-width: 767px)").matches ? this._destroySlider() : null === this._slider && this._initSlider()
        },
        _isStashed: function() {
            b.matchMedia("(max-width: 768px)").matches ? this.ui("sliderWrapper").attr("stashed", "true") : this.ui("sliderWrapper").removeAttr("stashed")
        },
        _initSlider: function() {
            this.ui("slides").length <= 1 || (this._slider = this.$element.iosSlider({
                autoSlideTransTimer: 1e3,
                snapToChildren: !0,
                responsiveSlideContainer: !0,
                responsiveSlides: !0,
                desktopClickDrag: !0,
                infiniteSlider: !1,
                navNextSelector: this.$element.parent().find(".carouselNavigation .next"),
                navPrevSelector: this.$element.parent().find(".carouselNavigation .prev"),
                startAtSlide: site.rtl ? this.ui("slides").length : 1,
                onSlideChange: this._slideChanged.bind(this),
                onSlideStart: this._slideStart.bind(this),
                onSliderLoaded: this._sliderLoaded.bind(this)
            }), site.rtl && (this.ui("slides").css({
                direction: "rtl"
            }), this.$element.css({
                direction: "ltr"
            })))
        },
        _sliderLoaded: function(a) {
            this._setNavigationState(a), this.ui("slides").eq(a.currentSlideNumber - 1).attr("shown", !0)
        },
        _setNavigationState: function(a) {
            this.$element.parent().find(".carouselNavigation .numbers").text(a.currentSlideNumber + " / " + this.ui("slides").length)
        },
        _slideStart: function(a) {
            a !== !1 && this._pauseVideo(a.currentSlideObject)
        },
        _pauseVideo: function(b) {
            var c = b.find(".VideoPlayer"),
                d = c.find("video").get(0),
                e = c.find(".youTubeContainer");
            if (0 !== c.length && (void 0 !== d && void 0 !== d.player && d.player.pause(), 0 !== e.length)) {
                var f = a.Event("pauseVideo");
                a(e).trigger(f)
            }
        },
        _slideChanged: function(a) {
            this._setNavigationState(a), this.ui("slides").eq(a.prevSlideNumber - 1).removeAttr("shown"), this.ui("slides").eq(a.currentSlideNumber - 1).attr("shown", !0), this._pauseVideo(a.prevSlideObject)
        },
        _destroySlider: function() {
            this.$element.iosSlider("destroy", {
                clearStyle: !0
            }), this._slider = null
        },
        _destroy: function() {
            this._destroySlider()
        }
    };
    a.createComponent("RangeCalculatorTooltip", c)
}(jQuery, window),
function(a, b) {
    var c = {
        _defaults: {},
        _screenWidth: 0,
        _currentState: "",
        init: function() {
            var c = this;
            this._setupClickEvent(), a(b).smartresize(function() {
                return c._onResize()
            }), this._onResize()
        },
        _onResize: function() {
            var c = a(b).width();
            c !== this._screenWidth && (this._screenWidth = c, this._determineBreakpoint())
        },
        _determineBreakpoint: function() {
            var a = this._currentState,
                b = navigator.userAgent.toLowerCase().indexOf("ipad") > -1;
            this._screenWidth <= site.breakpoints.small ? this._currentState = "mobile" : this._screenWidth <= site.breakpoints.medium || b ? this._currentState = "tablet" : this._currentState = "desktop", a !== this._currentState && this._switchLink()
        },
        _switchLink: function() {
            var a = this.$element.data("link-" + this._currentState);
            "undefined" == typeof a && (a = this.$element.data("link-desktop")), this.$element.attr("href", a);
            var b = this.$element.data("link-" + this._currentState + "-window");
            "undefined" != typeof b ? this.$element.attr("target", "_blank") : this.$element.attr("target", "_self"), this._setupClickEvent()
        },
        _setupClickEvent: function() {
            var a = this;
            this.$element.off("click tap");
            var b = this.$element.data("link-event-" + this._currentState);
            b === !0 && this.$element.on("click tap", function(b) {
                b.preventDefault(), a.$element.trigger("ResponsiveLinkClicked", {
                    el: b.target,
                    state: a._currentState
                })
            })
        }
    };
    jQuery.createComponent("ResponsiveLink", c)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _divided: !1,
        _$container: null,
        _containerType: "article",
        _rtl: !1,
        init_rtl: function() {
            this._rtl = !0
        },
        init: function() {
            var c = this;
            if (this.$element.parent().find("> br").remove(), this.$element.wrap('<div class="ResponsiveTableContainer"><div class="ResponsiveTable"></div></div>'), this._$container = this.$element.parents(".ResponsiveTable"), !this.$element.hasClass("alternativeRussianLayout")) {
                var d = this.$element.parents(".cmp-engineSpecifications, .VehicleSpecifications, .EmissionsTable").length;
                this._containerType = d ? "spectable" : "article";
                var e = function() {
                    c._checkWidths(), c._stickToRight(), c._callMatchRowHeights()
                };
                e(), a(b).smartresize(function() {
                    e()
                })
            }
        },
        _callMatchRowHeights: function() {
            var a = this;
            setTimeout(function() {
                a._matchRowHeights()
            }, 500)
        },
        _checkWidths: function() {
            this._$container.removeAttr("style").removeClass("stickToRight"), this._divided === !0 && this._combine(), this.$element.outerWidth() > this._$container.outerWidth() && this._divided === !1 ? this._divide() : this._divided === !0 && this._combine()
        },
        _matchRowHeights: function() {
            if (this._divided === !0) {
                var b = a(".pinned table tr", this._$container),
                    c = a(".scrollable table tr", this._$container);
                b.each(function(b, d) {
                    var e = a(d),
                        f = a(c.get(b)),
                        g = Math.max(e.height(), f.height());
                    e.add(f).height(g)
                })
            }
        },
        _divide: function() {
            this.$element.wrap('<div class="tableWrapper" />'), this._$container.before('<div class="responsiveTableArrow clearfix"><div class="bar"></div></div>');
            var a = this.$element.clone();
            a.find("td:not(:first-child), th:not(:first-child)").css("display", "none"), this.$element.closest(".tableWrapper").append(a), a.wrap('<div class="pinned" />'), this.$element.wrap('<div class="scrollable" />'), this.$element.attr("tabindex", "0"), this._divided = !0
        },
        _combine: function() {
            this.$element.closest(".tableWrapper").find(".pinned").remove(), this.$element.unwrap().unwrap(), a(".responsiveTableArrow", this._$container.parent()).remove(), this._divided = !1, this.$element.attr("tabindex", "")
        },
        _stickToRight: function() {
            var c = this,
                d = function() {
                    var d = c.$element.parents(".richText").length,
                        e = d ? c.$element.parents(".richText") : c.$element.parents(".sectionWrapper"),
                        f = d ? 0 : a(b).width() - (e.offset().left + e.width());
                    return f + parseInt(e.width(), 10)
                },
                e = function() {
                    return c._$container.parents(".GridListWrapper").width()
                };
            if (this._divided === !0 && a(b).width() < site.breakpoints.medium) {
                var f = "spectable" === this._containerType ? e() : d();
                this._$container.addClass("stickToRight"), this._$container.css("width", f)
            } else this._divided !== !0 && this._$container.removeAttr("style").removeClass("stickToRight")
        }
    };
    jQuery.createComponent("ResponsiveTable", c)
}(jQuery, window),
function(a, b, c, d) {
    var e = {
        _defaults: {
            contentSource: "html"
        },
        uiSelectors: {
            ratingStarsForeground: ".ratingStarsForeground",
            links: ".ratingStarsLink, .ratingLink",
            reviewCount: ".reviewCount"
        },
        _loadValues: null,
        init: function() {
            if ("html" === this.options.contentSource) this._renderContent(this.$element);
            else {
                this._loadValues = a.Deferred(), this._loadValues.done(this._renderContentFromHtmlString.bind(this));
                var b = this.$element.data("ajax-url");
                this._loadContent(b)
            }
        },
        _loadContent: function(b) {
            a.ajax(b).done(function(a) {
                this._loadValues.resolve(a)
            }.bind(this))
        },
        _renderContentFromHtmlString: function(b) {
            var c = a(b);
            this._renderContent(c)
        },
        _renderContent: function(a) {
            var b = 10 * a.data("review-score"),
                c = a.data("review-count"),
                d = a.data("review-url");
            this.ui("ratingStarsForeground").css("width", b + "%"), this.ui("links").attr("href", d), this.ui("reviewCount").text(c), this.$element.addClass("loaded")
        }
    };
    jQuery.createComponent("ReviewRatingBadge", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            feature: ".reviewTitle"
        },
        columnCount: 0,
        init: function() {
            this._initEnquire(), a(b).smartresize(this._resize.bind(this)), this._resize()
        },
        _initEnquire: function() {
            enquire.register("screen and (min-width: 1100px)", {
                match: function() {
                    this.columnCount = 4
                }.bind(this),
                unmatch: function() {
                    this.columnCount = 2
                }.bind(this)
            })
        },
        _resize: function() {
            this.ui("feature").removeAttr("style"), site.utils.isBreakpointSmall() || (4 === this.columnCount ? this.ui("feature").equalHeights() : (this.ui("feature").filter(function(a) {
                return 2 > a
            }).equalHeights(), this.ui("feature").filter(function(a) {
                return a >= 2
            }).equalHeights()))
        }
    };
    jQuery.createComponent("ReviewsAtAGlance", e)
}(jQuery, window, document),
function(a, b, c) {
    "use strict";
    var d = {
        map: a("#map"),
        hiddenCards: [],
        markers: [],
        country: {},
        isMobileNav: !1,
        isTouchDevice: !1,
        resize: !0,
        repositionMap: !0,
        apiReady: !1,
        disambiguationSearch: !1,
        _googleMapsJsUrl: "//maps.googleapis.com/maps/api/js?callback=site.gmapsLoaded&libraries=geometry",
        mapDraggable: !0,
        bounds: [],
        inputSearch: !1,
        mapStyles: [],
        _mapDisabled: !1,
        _language: null,
        _market: null,
        cardTop: 0,
        cardBottom: 0,
        headerOffset: "",
        zeroResultsHeading: a(".zeroResultsHeading").text(),
        multipleResultsHeading: a(".multiLocationHeading").text(),
        imageEls: !1,
        maxZoom: 6,
        init: function() {
            this._fixClasses(), this.imageEls = a(".MapLocationCards .cardContainer:not(.GridListWrapper) .width-2of3");
            var c, d = this,
                e = a(".map-page-container", this.$element),
                f = a(".MapLocationCards", this.$element).find(".card"),
                g = a(".searchInput", this.$element),
                h = a(".MapLocationSearchContainer", this.$element);
            this.mapStyles = site.utils.googleMapStyles, this._mapDisabled = this.$element.data("map-enabled") === !1, this._screenSize(), this._mapDisabled ? e.hide() : (this._mapHeight(), d._loadGoogleMaps()), f.length < 3 && (d.repositionMap = !1), a(".searchAgainCTA, .searchAgainBtn", this.$element).on("click tap", function() {
                g.val(""), a("html, body").animate({
                    scrollTop: h.offset().top - a(".utility").height()
                }, 800, function() {
                    g.focus()
                })
            }), a(b).smartresize(function() {
                a(b).width() > 740 && d._equalHeightCards(), d._screenSize(), d._mapDisabled || (d._mapHeight(), d.resize && d.apiReady && d._centreMapOnCountry()), d._hideCards(), d.inputSearch && (c = a(".MapLocationCards"), d._calculateSearchWayPoints(), d._fixHeader()), d._doImageSize()
            }), a(b).on("load", function() {
                a(b).width() > 740 && d._equalHeightCards(), d._hideCards(), d._displayCards()
            }), a(b).on("api:ready", function() {
                d._mapDisabled || (d.apiReady = !0, d.infoBox = b.loadInfoBox(), d._initMap()), a(".MapLocationSearch").on("submit", function(a) {
                    a.preventDefault(), d._geocodeInput()
                })
            }), a(b).scroll(function() {
                d.inputSearch && !d.disambiguationSearch && d._fixHeader()
            }), a(b).on("pinMobileNavHeader", function() {
                d.disambiguationSearch || (d.headerOffset = "translate(0px, 65px)", d._fixHeader())
            }), a(b).on("unpinMobileNavHeader", function() {
                d.disambiguationSearch || (d.headerOffset = "translate(0px, 0px)", d._fixHeader())
            }), a(b).on("cookieNoticeClosed", function() {
                d.inputSearch && setTimeout(function() {
                    c = a(".MapLocationCards"), d.cardTop = c.offset().top, d.cardBottom = c.offset().top + c.innerHeight(), d._fixHeader()
                }, 1e3)
            }), b.addEventListener("hashchange", function(a) {
                a.preventDefault()
            })
        },
        _doImageSize: function() {
            b.innerWidth < 901 ? this.imageEls.height(b.innerWidth / 1.77777) : this.imageEls.height("100%")
        },
        _screenSize: function() {
            var a = this;
            site.utils.isMobileDevice() && (a.isMobileNav = !0)
        },
        _mapHeight: function() {
            var c, d = this,
                e = a(b),
                f = a(".otherCountries", this.$element),
                g = a(".map-key", this.$element),
                h = a(".stickyNavigation");
            c = e.width() <= 740 || e.height() <= 640 ? "100vh" : a(b).height() - f.innerHeight() - g.innerHeight() - h.innerHeight(), d.map.css("height", c)
        },
        _loadGoogleMaps: function() {
            a(b).trigger("gmapsReady")
        },
        _initMap: function() {
            var d = this;
            a("#map-controls", this.$element).find(".locate");
            d.latlng = new google.maps.LatLng(52.4500501, -1.7214052), d.mapOptions = {
                zoom: 15,
                center: d.latlng,
                scrollwheel: !1,
                disableDefaultUI: !0,
                draggable: d.mapDraggable,
                disableDoubleClickZoom: !d.mapDraggable
            }, d.googleMap = new google.maps.Map(c.getElementById("map"), d.mapOptions), d._showZoomIcons(), d._centreMapOnCountry(), d.googleMap.setOptions({
                styles: d.mapStyles
            }), d._setupZoom(), b.innerWidth < 701 && d._toggleMapLock(), d.bounds = new google.maps.LatLngBounds, d._addPins();
            var e = d._gatherRouteCoordinates();
            d._addRoutes(e), d._doImageSize(), google.maps.event.addListenerOnce(d.googleMap, "idle", function() {
                d.googleMap.fitBounds(d.bounds)
            })
        },
        _centreMapOnCountry: function() {
            var b = this.repositionMap,
                c = this.googleMap;
            if (b) {
                var d = a(".MapLocationMap", this.$element).data("country"),
                    e = a(".MapLocationMap", this.$element).data("country-code"),
                    f = new google.maps.Geocoder;
                f.geocode({
                    address: e || d
                }, function(a, b) {
                    var d = _slicedToArray(a, 1),
                        e = d[0];
                    e = void 0 === e ? {} : e;
                    var f = e.geometry;
                    f = void 0 === f ? {} : f;
                    var g = f.location,
                        h = f.viewport;
                    b === google.maps.GeocoderStatus.OK && (c.setCenter(g), c.fitBounds(h))
                })
            }
        },
        _showZoomIcons: function() {
            var b = this,
                c = a("#map-controls", this.$element),
                d = c.find(".plus"),
                e = c.find(".minus");
            b.isTouchDevice || (d.show(), e.show())
        },
        _setupZoom: function() {
            var b = this,
                c = a("#map-controls", this.$element),
                d = c.find(".plus"),
                e = c.find(".minus");
            b.googleMap.addListener("zoom_changed", function() {
                b.googleMap.getZoom() > b.maxZoom ? (e.removeClass("disabled"), b.resize = !1) : e.addClass("disabled")
            }), d.click(function() {
                b.googleMap.setZoom(b.googleMap.zoom + 1), b.resize = !1
            }), e.click(function() {
                b.googleMap.getZoom() !== b.maxZoom && b.googleMap.setZoom(b.googleMap.zoom - 1)
            })
        },
        _toggleMapLock: function() {
            var b = this,
                c = a(".control.drag", this.$element);
            b.googleMap.set("draggable", !1), b.googleMap.set("disableDoubleClickZoom", !0), c.removeClass("active"), b.mapDraggable = !1, c.click(function() {
                b.mapDraggable ? (b.googleMap.set("draggable", !1), b.googleMap.set("disableDoubleClickZoom", !0), a(this).removeClass("active"), b.mapDraggable = !1) : (b.googleMap.set("draggable", !0), b.googleMap.set("disableDoubleClickZoom", !1), a(this).addClass("active"), b.mapDraggable = !0, b.resize = !1)
            })
        },
        _fixClasses: function() {
            this.$element.find(".MapLocationCards").hasClass("GridView") ? a(".linkContainer.GalleryLink a").each(function(b, c) {
                a(c).removeClass("secondaryLinkWithStyle plwsLight plwsDark primaryLinkWithStyle plwsTransparentLight slwsBlack slwsWhite").addClass("secondaryLinkWithStyle")
            }) : a(".linkContainer.GalleryLink a").each(function(b, c) {
                a(c).removeClass("secondaryLinkWithStyle plwsLight plwsDark primaryLinkWithStyle plwsTransparentLight slwsBlack slwsWhite"), b % 2 === 0 ? a(c).addClass("primaryLinkWithStyle") : a(c).addClass("primaryLinkWithStyle plwsLight")
            })
        },
        _gatherRouteCoordinates: function() {
            for (var b = a(".card", this.$element), c = [], d = [], e = 0; e < b.length - 1; e++) {
                var f = [],
                    g = [],
                    h = "",
                    i = "",
                    j = "",
                    k = "";
                0 === e ? (h = a(b[e]).attr("data-lat"), i = a(b[e]).attr("data-lng"), j = a(b[e + 1]).attr("data-lat"), k = a(b[e + 1]).attr("data-lng"), d.push(h), d.push(i), g.push(j), g.push(k), f.push(d), f.push(g), c.push(f), d = g) : (j = a(b[e + 1]).attr("data-lat"), k = a(b[e + 1]).attr("data-lng"), g.push(j), g.push(k), f.push(d), f.push(g), c.push(f), d = g)
            }
            return c
        },
        _addRoutes: function(b) {
            var c = this;
            a(".MapLocationMap").hasClass("EnableRoutes") && b.map(function(a) {
                var b = a[0][0],
                    d = a[0][1],
                    e = a[1][0],
                    f = a[1][1],
                    g = new google.maps.LatLng(b, d),
                    h = new google.maps.LatLng(e, f),
                    i = new google.maps.DirectionsService,
                    j = new google.maps.DirectionsRenderer({
                        suppressMarkers: !0
                    }),
                    k = {
                        origin: g,
                        destination: h,
                        travelMode: google.maps.TravelMode.DRIVING
                    };
                i.route(k, function(a, b) {
                    b === google.maps.DirectionsStatus.OK && (j.setDirections(a), j.setMap(c.googleMap))
                })
            })
        },
        _addPins: function() {
            var c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v = this,
                w = a(".card", this.$element),
                x = !1,
                y = "";
            w.each(function(w) {
                c = a(this).data("lat"), d = a(this).data("lng"), f = c + "," + d, e = new google.maps.LatLng(c, d), p = a(this).closest(".cardContainer"), k = p.attr("id"), m = a(this).data("image"), n = a(this).data("image-alt"), q = a(this).find(".eventName"), a(this).find(".eventName").text((w + 1).toString() + ". " + a(this).find(".eventName").text()), r = a(this).find(".eventInfo"), j = a(this).find(".coordinates .infobox-content"), y = a(this).data("short-desc") ? a(this).data("short-desc") : "", s = a(this).find(".linkContainer.FindOutMore").clone(), "primaryLinkWithStyle" !== s.find("a")[0].className && (s.find("a")[0].className = "primaryLinkWithStyle"), s.find("a").attr("href", "#" + a(this).attr("id")), x = !0, g = {
                    url: "/resources/public/images/DefenderJourneys/pin_black.png",
                    scaledSize: new google.maps.Size(38, 53),
                    labelOrigin: new google.maps.Point(19, 19)
                }, h = "true" === a(".map-page-container").attr("pinnumbering") ? new google.maps.Marker({
                    position: e,
                    map: v.googleMap,
                    label: {
                        text: (w + 1).toString(),
                        color: "white",
                        fontFamily: "avenir",
                        fontSize: "14px"
                    },
                    icon: g
                }) : new google.maps.Marker({
                    position: e,
                    map: v.googleMap,
                    label: {
                        text: " ",
                        color: "white",
                        fontFamily: "avenir",
                        fontSize: "14px"
                    },
                    icon: g
                }), h.elementIndex = w, u = new google.maps.Size(10, 10), a(b).width() < 740 ? (t = "280px", o = new google.maps.Size(-140, -19)) : (t = "350px", o = new google.maps.Size(-175, -25)), b.innerHeight <= 350 && (t = "350px", o = new google.maps.Size(-175, -19)), b.innerWidth >= 330 && b.innerWidth <= 375 && (u = !1), h.origIcon = g, i = "<div>", i += '<div class="event-infobox">', i += '<span class="infoboxImage" style="background-image:url(\'' + m + "')\"></span>", i += '<span class="infoboxClose"></span>', i += '<div class="infoContainer">', i += '<h3 class="infoboxName">' + q.html() + "</h3>", r.length && (i += '<div class="infoboxInfo">' + r.html() + "</div>"), j.length && (i += '<p class="coordinates">' + j.html() + "</p>"), y.length && (i += '<p class="shortDesc">' + y + "</p>"), s.length && (i += "<span>" + s.html() + "</span>"), i += "</div>", i += "</div>", i += "</div>";
                var z = a(i);
                a(".infoboxImage", z).attr("aria-label", n), l = {
                    content: z.html(),
                    disableAutoPan: !1,
                    maxWidth: 0,
                    pixelOffset: o,
                    zIndex: null,
                    boxStyle: {
                        background: "transparent",
                        width: t
                    },
                    closeBoxURL: "",
                    infoBoxClearance: u,
                    isHidden: !1,
                    pane: "floatPane",
                    alignBottom: !0,
                    enableEventPropagation: !1
                }, h.infobox = new v.infoBox(l), a(".event-infobox").append(s), v.markers.push(h), v.bounds.extend(e), google.maps.event.addListener(h, "click", function(c) {
                    return function() {
                        for (var d = 0; d < v.markers.length; d++) v.markers[d].infobox.close();
                        v.googleMap.panTo(c.getPosition()), a(b).height() < 350 ? v.googleMap.panBy(0, -5) : b.innerWidth <= 330 ? v.googleMap.panBy(0, -125) : v.googleMap.panBy(0, -200),
                            site.utils.scrollTo(v.$element), c.infobox.open(v.googleMap, this), setTimeout(function() {
                                v.closeCTA = a(".infoboxClose"), v.closeCTA.on("click", function() {
                                    a(this).closest(".infoBox").addClass("closing"), setTimeout(function() {
                                        a(".infoBox").hide()
                                    }, 200)
                                }), a(".event-infobox a.primaryLinkWithStyle").on("click", function(b) {
                                    b.preventDefault();
                                    var c = a("#" + a(b.currentTarget).attr("href").split("#")[1]);
                                    site.utils.scrollTo(c)
                                }.bind(this))
                            }, 250)
                    }
                }(h))
            })
        },
        _geolocation: function() {
            var b, c = this,
                d = a("#map-controls", this.$element).find(".locate");
            navigator.geolocation ? (d.show(), navigator.geolocation.getCurrentPosition(function(a) {
                b = new google.maps.LatLng(a.coords.latitude, a.coords.longitude), c.googleMap.panTo(b), c.bounds.extend(b), c._addUserMarker(b), c._nearestLocations(b), c._usersLocation = b
            }, function() {
                d.hide()
            })) : d.hide()
        },
        _addUserMarker: function(a) {
            var b, c = this,
                d = "/resources/public/images/DefenderJourneys/pin_green.png";
            d = new google.maps.MarkerImage(d, null, null, null, new google.maps.Size(29, 40)), b = new google.maps.Marker({
                position: a,
                map: c.googleMap,
                icon: d,
                zIndex: 0
            })
        },
        _nearestLocations: function(a) {
            var b, c, d, e, f = this;
            for (b = 0; b < f.markers.length; b++) c = google.maps.geometry.spherical.computeDistanceBetween(a, f.markers[b].position), c /= 1e3, c = .621371 * c, c = Math.round(c), f.markers[b].distanceFromUser = c;
            f.markers.sort(function(a, b) {
                return parseFloat(a.distanceFromUser) - parseFloat(b.distanceFromUser)
            }), e = f.markers.length >= 3 ? 2 : f.markers.length - 1, d = new google.maps.Circle, d.setRadius(1609 * f.markers[e].distanceFromUser), d.setCenter(a), f.googleMap.fitBounds(d.getBounds())
        },
        _equalHeightCards: function() {
            var b = 0,
                c = a(".GridCards", this.$element).find(".card");
            c.css("height", ""), c.each(function() {
                b = b > a(this).height() ? b : a(this).height()
            }), c.height(b)
        },
        _hideCards: function() {
            var c, d, e = this,
                f = a(".load-more-cta", this.$element),
                g = a(".MapLocationCards");
            if (e.hiddenCards !== !1 && !g.hasClass("FullWidthCards")) {
                d = a(".future", this.$element), e.hiddenCards = {}, c = a(b).width() < 988 ? 2 : 3;
                var h = d.slice(0, c);
                h.show();
                var i = d.slice(c);
                e.hiddenCards = i, i.hide(), e.hiddenCards.length > 0 && (f.css("display", "inline-block"), a(".MapLocationCards", this.$element).find(".ctaContainer").show())
            }
        },
        _displayCards: function() {
            var b = this,
                c = a(".load-more-cta", this.$element);
            c.on("click", function(d) {
                d.preventDefault(), b.hiddenCards.show(), b.hiddenCards.each(function(b, c) {
                    a(c).css({
                        opacity: 0,
                        y: 80
                    }).transition({
                        opacity: 1,
                        y: 0,
                        delay: 200 * b
                    })
                }), c.fadeOut(), c.parent().fadeOut(400, function() {
                    b._calculateSearchWayPoints()
                }), b.hiddenCards = !1
            })
        },
        _geocodeInput: function() {
            var b, d = this,
                e = a(".searchInput", this.$element).val(),
                f = a(".MapLocationSearchError", this.$element),
                g = f.find(".searchDisambiguation"),
                h = f.find(".searchAgainDealer"),
                i = a(".utility"),
                j = g.find("ol"),
                k = new google.maps.Geocoder,
                l = "",
                m = a(".zeroResultsHeading", this.$element),
                n = a(".multiLocationHeading", this.$element),
                o = "",
                p = a(".MapLocationSearch", this.$element),
                q = a(".MapLocationCards", this.$element),
                r = a(".MapLocationCardsHeader", this.$element),
                s = a(".TAOPT_title", this.$element),
                t = c.documentElement.lang; - 1 !== t.indexOf("-") && (this._language = t.split("-")[0], this._market = t.split("-")[1].toLowerCase());
            var u = {
                address: e,
                region: this._market,
                componentRestrictions: {
                    country: this._market
                }
            };
            b = d.isMobileNav ? 0 : i.height(), k.geocode(u, function(c, i) {
                if (i === google.maps.GeocoderStatus.OK)
                    if (1 === c.length && c[0].address_components.length < 2) h.show(), f.slideDown(), g.hide(), a("html, body").animate({
                        scrollTop: h.offset().top - b
                    }, 800, function() {
                        d._calculateSearchWayPoints()
                    }), o = d.zeroResultsHeading.substring(0, d.zeroResultsHeading.length - 2), o += "'" + e + "'", m.text(o);
                    else if (1 === c.length || d.disambiguationSearch) f.slideUp(400, function() {
                    g.hide(), h.hide(), d._calculateSearchWayPoints(), d._sortCards(c[0].geometry.location)
                }), d.disambiguationSearch = !1;
                else if (c.length > 1) {
                    g.show(), f.slideDown(), h.hide(), o = d.multipleResultsHeading.substring(0, d.multipleResultsHeading.length - 2), o += "'" + e + "'", n.text(o);
                    for (var k = 0; k < c.length; k++) l += '<li><a href="#">' + c[k].formatted_address + "</a></li>";
                    j.html(l), a("html, body").animate({
                        scrollTop: g.offset().top - b
                    }, 800, function() {
                        d._calculateSearchWayPoints(), a(".multipleResults").find("a").on("click", function(b) {
                            q.addClass("userSearch"), s.hide(), r.show(), b.preventDefault(), d.disambiguationSearch = !0, p.find(".searchInput").val(a(this).text()), p.submit()
                        })
                    })
                }
            })
        },
        _sortCards: function(b) {
            var c, d, e, f, g, h, i = this,
                j = a(".cardContainer.future", this.$element),
                k = a(".MapLocationCardsHeader", this.$element),
                l = a(".TAOPT_title", this.$element),
                m = a(".MapLocationCards", this.$element),
                n = a(".utility");
            i.isMobileNav && (n = a(".navMobile-menu")), m.addClass("userSearch"), l.hide(), k.show(), j.each(function() {
                d = a(this).find(".card").data("lat"), e = a(this).find(".card").data("lng"), g = a(this).find(".eventLocation"), h = a(this).find(".card").data("city"), c = new google.maps.LatLng(d, e), f = google.maps.geometry.spherical.computeDistanceBetween(b, c), f /= 1e3, "km" !== m.data("distance-format") && (f = .621371 * f), a(this).data("distance", f), h = h + " (" + Math.ceil(f) + " " + m.data("distance-format") + ")", g.text(h)
            }), j.detach(), j.sort(function(b, c) {
                return parseFloat(a(b).data("distance")) - parseFloat(a(c).data("distance"))
            }), a(".MapLocationCards > .row", this.$element).append(j), i.hiddenCards !== !1 && (j.show(), i._hideCards()), a("html, body").animate({
                scrollTop: m.offset().top - n.height()
            }, 800), i.inputSearch = !0
        },
        _fixHeader: function() {
            var c = this,
                d = a(".MapLocationCardsHeader", this.$element),
                e = a(".MapLocationCards", this.$element),
                f = a(".utility").height(),
                g = a(b).scrollTop();
            c.isMobileNav && (f = 0), g + a(b).height() > c.cardBottom && e.innerHeight() < a(b).height() ? (d.removeClass("headerFixed").css({
                left: "",
                top: "",
                transform: ""
            }), e.removeClass("searchResults")) : g + a(b).height() > c.cardBottom ? (d.removeClass("headerFixed").addClass("headerStop").css({
                left: "",
                top: e.innerHeight() - a(b).height() + f,
                transform: ""
            }), e.addClass("searchResults")) : g >= c.cardTop - f ? (d.addClass("headerFixed").removeClass("headerStop").css({
                left: e.offset().left,
                top: f
            }), c.isMobileNav && d.css("transform", c.headerOffset), e.addClass("searchResults")) : (d.removeClass("headerFixed headerStop").css({
                left: "",
                top: "",
                transform: ""
            }), e.removeClass("searchResults"))
        },
        _calculateSearchWayPoints: function() {
            var b = this,
                c = a(".MapLocationCards", this.$element);
            b.cardTop = c.offset().top, b.cardBottom = c.offset().top + c.innerHeight()
        }
    };
    jQuery.createComponent("RideAndDrive", d)
}(jQuery, window, document);
var DecimalFormat = function() {
        function a(b) {
            _classCallCheck(this, a), this._prefix = a._getPrefix(b);
            var c = b.substring(this._prefix.length);
            this._suffix = a._getSuffix(c);
            var d = c.substr(0, c.length - this._suffix.length);
            this._suffix = this._suffix.replace(/[']/g, ""), this._groupSize = 0, this._minInt = 1, this._minFrac = 0, this._maxFrac = 0, this._groupingSeparator = ",", this._outputDecimalSeparator = ".", -1 !== d.indexOf("#.#") ? (this._groupingSeparator = ".", this._outputDecimalSeparator = ",") : -1 !== d.indexOf("# #") ? this._groupingSeparator = " " : -1 !== d.indexOf("# #") ? this._groupingSeparator = " " : -1 !== d.indexOf("#'#") && (this._groupingSeparator = "'");
            var e = "",
                f = "",
                g = d.indexOf(this._outputDecimalSeparator); - 1 != g ? (e = d.substring(0, g), f = d.substring(g + 1)) : e = d;
            var h = e.lastIndexOf(this._groupingSeparator); - 1 != h && (this._groupSize = e.length - 1 - h), e = e.replace(new RegExp("[\\" + this._groupingSeparator + "]", "g"), ""), f = f.replace(new RegExp("[\\" + this._groupingSeparator + "]|[\\" + this._outputDecimalSeparator + "]+", "g"), ""), this._maxFrac = f.length;
            var i = e.replace(/[^0]/g, "");
            i.length > this._minInt && (this._minInt = i.length), i = f.replace(/[^0]/g, ""), this._minFrac = i.length
        }
        return _createClass(a, [{
            key: "getInputDecimalSeparator",
            value: function(a) {
                return "."
            }
        }, {
            key: "format",
            value: function(a) {
                var b = this.parseDecimal(a).toLowerCase();
                if (isNaN(b) || 0 == b.length) return a;
                var c = !1;
                "-" == b.charAt(0) ? (c = !0, b = b.substring(1)) : "+" == b.charAt(0) && (b = b.substring(1));
                var d = this.getInputDecimalSeparator(a),
                    e = b.indexOf(d),
                    f = "",
                    g = "";
                if (-1 != e ? (f = b.substring(0, e), g = b.substring(e + 1)) : f = b, g = g.replace(new RegExp("[\\" + this._outputDecimalSeparator + "]"), ""), g.length > this._maxFrac) {
                    var h = new Number("0." + g);
                    h = 0 == this._maxFrac ? Math.round(h) : h.toFixed(this._maxFrac), g = h.toString(10).substr(2);
                    for (var i, j = h >= 1 ? 1 : 0, k = f.length - 1; j;) {
                        if (-1 == k) {
                            f = "1" + f;
                            break
                        }
                        i = f.charAt(k), 9 == i ? (i = "0", j = 1) : (i = ++i + "", j = 0), f = f.substring(0, k) + i + f.substring(k + 1, f.length), k--
                    }
                }
                for (var k = g.length; k < this._minFrac; k++) g += "0";
                for (; g.length > this._minFrac && "0" == g.charAt(g.length - 1);) g = g.substring(0, g.length - 1);
                for (var k = f.length; k < this._minInt; k++) f = "0" + f;
                for (; f.length > this._minInt && "0" == f.charAt(0);) f = f.substring(1);
                for (var l = 0, k = f.length; k > 0; k--) 0 != l && l % this._groupSize == 0 && (f = f.substring(0, k) + this._groupingSeparator + f.substring(k), l = 0), l++;
                var m;
                return m = g.length > 0 ? this._prefix + f + this._outputDecimalSeparator + g + this._suffix : this._prefix + f + this._suffix, c && (m = "-" + m), m
            }
        }, {
            key: "parseDecimal",
            value: function(a) {
                if ("undefined" == typeof a || null === a) return "";
                if (a += "", !isNaN(a)) return this.getNumericString(a);
                var b = a,
                    c = !1;
                "-" == a.charAt(0) && (b = b.substr(1), c = !0);
                var d = b.indexOf(this._prefix),
                    e = "" == this._suffix ? b.length : b.indexOf(this._suffix, this._prefix.length + 1);
                return 0 == d && e > 0 && (b = b.substr(0, e), b = b.substr(this._prefix.length), b = b.replace(new RegExp("\\" + this._groupingSeparator, "g"), ""), b = b.replace(new RegExp("\\" + this._outputDecimalSeparator, "g"), "."), c && (b = "-" + b), !isNaN(b)) ? this.getNumericString(b) : a
            }
        }, {
            key: "getNumericString",
            value: function(a) {
                var b = new Number(a),
                    c = b + "";
                if (a.indexOf(".") > -1 && c.indexOf(".") < 0) {
                    for (var d = a.indexOf(".") + 1; d < a.length; d++)
                        if ("0" !== a.charAt(d)) return a;
                    return c
                }
                return a
            }
        }], [{
            key: "_getPrefix",
            value: function(a) {
                for (var b = "", c = !1, d = 0; d < a.length; d++)
                    if ("'" == a.charAt(d)) c = !c;
                    else if (!c && ("#" == a.charAt(d) || "0" == a.charAt(d))) {
                    b = a.substring(0, d).replace(/[']/g, "");
                    break
                }
                return b
            }
        }, {
            key: "_getSuffix",
            value: function(a) {
                for (var b = "", c = a.length; c >= 0; c--)
                    if ("#" == a.charAt(c) || "0" == a.charAt(c)) {
                        b = a.substring(c + 1);
                        break
                    } return b
            }
        }]), a
    }(),
    JSONP = function() {
        function a(b) {
            _classCallCheck(this, a), this._callbackName = b || "rcjson", this._pool = new Pool
        }
        return _createClass(a, [{
            key: "createScriptElement",
            value: function(a, b) {
                var c = document.createElement("script"),
                    d = !1;
                return c.src = a, c.async = !0, "function" == typeof b && (c.onerror = function(c) {
                    b({
                        url: a,
                        event: c
                    })
                }), c.onload = c.onreadystatechange = function() {
                    d || this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || (d = !0, c.onload = c.onreadystatechange = null, c && c.parentNode && c.parentNode.removeChild(c))
                }, this._head || (this._head = document.getElementsByTagName("head")[0]), this._head.appendChild(c), c
            }
        }, {
            key: "get",
            value: function(a) {
                var b = this,
                    c = -1 === (a || "").indexOf("?") ? "?" : "&",
                    d = this._pool.getToken(),
                    e = this._callbackName + d,
                    f = new Promise(function(f, g) {
                        window[e] = function(a) {
                            f(a);
                            try {
                                delete window[e]
                            } catch (c) {}
                            window[e] = null, d = b._pool.releaseToken(d)
                        };
                        var h = function(a) {
                            try {
                                delete window[e]
                            } catch (c) {}
                            window[e] = null, d = b._pool.releaseToken(d), g(a)
                        };
                        b.createScriptElement(a + c + "callback=" + e, h)
                    });
                return f.uniqueName = e, f
            }
        }, {
            key: "callbackName",
            get: function() {
                return this._callbackName
            }
        }]), a
    }(),
    Pool = function() {
        function a() {
            _classCallCheck(this, a), this._count = 0, this._tokens = []
        }
        return _createClass(a, [{
            key: "getToken",
            value: function() {
                for (var a = !0, b = -1, c = 0; c < this._tokens.length; c++)
                    if (this._tokens[c] == a) {
                        this._tokens[c] = !a, b = c;
                        break
                    } return -1 === b && (this._tokens.push(!a), b = this._tokens.length - 1), 0 === b ? "" : "" + b
            }
        }, {
            key: "releaseToken",
            value: function(a) {
                var b = !0,
                    c = -1;
                return c = "" === a ? 0 : parseInt(a, 10), !isNaN(c) && c >= 0 && (this._tokens[c] = b), "notoken"
            }
        }]), a
    }(),
    ResourceBundle = function() {
        function a() {
            var b = this,
                c = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            _classCallCheck(this, a), Object.keys(c).forEach(function(d) {
                var e = "object" !== _typeof(c[d]) ? c[d] : new a(c[d]);
                d.split(".").reduce(function(a, b, c, d) {
                    if (_isLast(c, d)) "object" === _typeof(a[b]) ? a[b].__default = e : a[b] = e;
                    else if ("undefined" == typeof a[b]) a[b] = _createObjectOrArray(d, c);
                    else if ("object" !== _typeof(a[b])) {
                        var f = a[b];
                        a[b] = _createObjectOrArray(d, c, f)
                    }
                    return a[b]
                }, b)
            })
        }
        return _createClass(a, [{
            key: "message",
            value: function(a) {
                for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; b > d; d++) c[d - 1] = arguments[d];
                return _message.apply(void 0, [this, a].concat(c))
            }
        }, {
            key: "toString",
            value: function() {
                return _toString(this)
            }
        }]), a
    }(),
    RulesConnect = function() {
        function a() {
            var b = this;
            _classCallCheck(this, a), this._jsonp = new JSONP("rcjson"), this._resources = null, this._properties = null, this._metaData = null, this._language = null, this._i18nPromise = new Promise(function(a, c) {
                b._i18nResolve = a
            }), this._currencyFormats = {}, this._defaultCurrency = "default"
        }
        return _createClass(a, [{
            key: "setResources",
            value: function(a) {
                this._resources = new ResourceBundle((a["resource-bundle"] || {})["client-resources"]), this._properties = new ResourceBundle((a["resource-bundle"] || {})["client-properties"]), this._metaData = new ResourceBundle((a.metadata || {}).meta), this._language = (a["resource-bundle"] || {}).language, this._i18nResolve()
            }
        }, {
            key: "loadResources",
            value: function(a, b, c) {
                var d, e = this;
                "undefined" == typeof c && "undefined" == typeof b && "string" == typeof a ? d = a : ("string" != typeof c && (c = ""), d = c + "/rc/" + a + "/" + b + "/resources.jsonp");
                var f = this.loadJsonp(d),
                    g = f.then(function(a) {
                        return e.setResources(a), a
                    });
                return g.uniqueName = f.uniqueName, g
            }
        }, {
            key: "hasResources",
            value: function() {
                return null != this._resources
            }
        }, {
            key: "getResource",
            value: function(a) {
                var b = null;
                if (null != this._resources && (b = this._resources[a], "undefined" != typeof b)) {
                    for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; c > e; e++) d[e - 1] = arguments[e];
                    for (var f = 0; f < d.length; f++) b = b.replace(new RegExp("\\{" + f + "\\}", "g"), d[f]), b = b.replace(new RegExp("\\$\\$" + f + "\\$\\$", "g"), d[f])
                }
                return b
            }
        }, {
            key: "loadJsonp",
            value: function(a) {
                var b = this,
                    c = this._jsonp.get(a),
                    d = c.then(function(a) {
                        return b.readCurrencyFormats(a), b.detectDefaultCurrency(a), b.overlayResourcesWithResponse(a), a
                    });
                return d.uniqueName = c.uniqueName, d
            }
        }, {
            key: "overlayResourcesWithResponse",
            value: function(a) {
                if (this._resources) {
                    var b = ((a["feature-dictionary"] || {}).vehicle || {}).property || {},
                        c = new ResourceBundle(b);
                    this.traverseResourceTree(c, this._resources)
                }
            }
        }, {
            key: "traverseResourceTree",
            value: function(a, b) {
                var c = this;
                Object.keys(a).forEach(function(d) {
                    d in b ? "string" == typeof a[d] ? b[d] = a[d] : "string" == typeof b[d] && "object" === _typeof(a[d]) ? b[d] = a[d][c.language] : "object" === _typeof(a[d]) && c.traverseResourceTree(a[d], b[d]) : "string" == typeof a[d] ? b[d] = a[d] : "object" === _typeof(a[d]) && (void 0 !== a[d][c.language] ? b[d] = a[d][c.language] : (b[d] = {}, c.traverseResourceTree(a[d], b[d])))
                })
            }
        }, {
            key: "readCurrencyFormats",
            value: function(a) {
                if (0 == Object.keys(this._currencyFormats).length && "undefined" != typeof a) {
                    var b = ((a.metadata || {}).meta || {})["currency-format"];
                    if ("string" == typeof b)
                        for (var c = b.trim().split("~"), d = {}, e = 0; e < c.length; e++) {
                            var f = c[e].split("=", 2);
                            if (1 == f.length && (d["default"] = new DecimalFormat(f[0].trim())), 2 == f.length) {
                                var g = new DecimalFormat(f[1].trim());
                                d[f[0].toUpperCase()] = g, 0 == e && (d["default"] = g)
                            }
                        }
                    this._currencyFormats = d
                }
            }
        }, {
            key: "detectDefaultCurrency",
            value: function(a) {
                var b = (a.metadata || {}).url;
                if ("string" == typeof b) {
                    var c = b.split("/", 5);
                    if (c.length >= 4) {
                        var d = c[3],
                            e = d.split("_", 3);
                        if (3 == e.length) {
                            var f = e[2],
                                g = f.indexOf(".");
                            return -1 !== g && (f = f.substr(0, g)), void(this._defaultCurrency = f.toUpperCase())
                        }
                    }
                }
                this._defaultCurrency = "default"
            }
        }, {
            key: "getFormattedPrice",
            value: function(a, b) {
                b = b || this._defaultCurrency;
                var c = this._currencyFormats[b] || this._currencyFormats["default"];
                return c ? c.format(a) : "" + a
            }
        }, {
            key: "getFormattedDate",
            value: function(a) {
                return a.toLocaleDateString()
            }
        }, {
            key: "onResourceReady",
            value: function() {
                return this._i18nPromise
            }
        }, {
            key: "resources",
            get: function() {
                return this._resources
            }
        }, {
            key: "language",
            get: function() {
                return this._language
            }
        }, {
            key: "properties",
            get: function() {
                return this._properties
            }
        }, {
            key: "metaData",
            get: function() {
                return this._metaData
            }
        }]), a
    }();
! function() {
    var a = {
        init: function() {
            var a = this;
            this.$element.on("click", function(b) {
                b.preventDefault(), site.utils.scrollTo(a.$element.offset().top + a.$element.height() + 1)
            })
        }
    };
    jQuery.createComponent("ScrollDown", a)
}(),
function(a, b, c, d) {
    var e = {
        _optionWidth: null,
        _optionsToShow: null,
        uiSelectors: {
            options: ".select-option"
        },
        events: {
            "click .select-option": "_optionSelected"
        },
        init_rtl: function() {},
        init: function() {
            this._optionsToShow = site.utils.isBreakpointSmall() ? 3.5 : 4.5, a(b).smartresize(function() {
                this._dragSlider && (this._optionsToShow = site.utils.isBreakpointSmall() ? 3.5 : 4.5, this.updateSliderSize())
            }.bind(this), 250)
        },
        _optionSelected: function(a) {
            this._dragSlider && this._dragSlider.activity || this.$element.trigger("option-selected", a, [this.$element.data()])
        },
        initSlider: function() {
            this._dragSlider || (this.ui("options").wrapAll('<div class="selectable-slider-wrapper"></div>'), this.updateSliderSize(), this._dragSlider = new b.Dragdealer(this.$element[0], {
                steps: this.ui("options").length,
                loose: !0,
                speed: 1.5,
                handleClass: "selectable-slider-wrapper",
                requestAnimationFrame: !0,
                x: site.rtl ? 1 : 0
            }), this.$element.addClass("selectable-slider"))
        },
        updateSliderSize: function() {
            this._optionWidth = Math.ceil(parseInt(this.$element.outerWidth(), 10) / this._optionsToShow), this.ui("options").width(this._optionWidth), a(".selectable-slider-wrapper", this.$element).width(this._optionWidth * this.ui("options").length)
        }
    };
    jQuery.createComponent("Selectable", e)
}(jQuery, window, document),
function(a, b) {
    "use strict";

    function c() {
        this._componentName = d, this.init()
    }
    var d = "SidebarImage";
    c.prototype = {
        init: function() {}
    }, a.fn[d] = function(b) {
        var e = arguments,
            f = "component_" + d;
        return this.each(function() {
            var d = a.data(this, f);
            d && "string" == typeof b && "_" !== b.charAt(0) && d[b] && "function" == typeof d[b] ? d[b].apply(d, Array.prototype.slice.call(e, 1)) : d || "object" !== ("undefined" == typeof b ? "undefined" : _typeof(b)) && b || a.data(this, f, new c(this, b))
        })
    }
}(jQuery, window),
function(a, b, c, d) {
    var e = {
        uiSelectors: {},
        _html: null,
        _slider: null,
        _autoPlayTimeout: 1e4,
        _interactionTimeout: 3e4,
        _timeOutInterval: null,
        _direction: "slideFromRight",
        init_rtl: function() {
            this._direction = "slideFromLeft"
        },
        init: function() {
            var c = this;
            c._html = a(".gridHolder", c.$element).html(), a(b).smartresize(function() {
                c._onResize()
            }), c._initEnquire(), c._truncateContent()
        },
        _initEnquire: function() {
            var c = this,
                d = 1300;
            enquire.register("screen and (min-width: " + d + "px)", {
                match: function() {
                    c._createCarousel(3)
                }
            }), enquire.register("screen and (min-width: " + (b.site.breakpoints.small + 1) + "px) and (max-width: " + (d - 1) + "px)", {
                match: function() {
                    c._createCarousel(2)
                }
            }), enquire.register("screen and (max-width: " + b.site.breakpoints.small + "px)", {
                match: function() {
                    c._createCarousel(1)
                }
            }), a("html").hasClass("lt-ie9") && c._createCarousel(3)
        },
        _resetCarousel: function() {
            this._$slider && this._$slider.destroy(), this._$slider = null, this._removeControls(), a(".gridHolder", this.$element).empty().html(this._html), this.$element.removeAttr("data-total")
        },
        _createCarousel: function(b) {
            var c = this;
            this._resetCarousel();
            var d = a(".grid", this.$element),
                e = a(".grid .gridItem", this.$element).length,
                f = a(".carouselNavigation", this.$element);
            if (b >= e) return void f.hide();
            for (var g = 0; e > g; g += b) {
                var h = g / b + 1;
                a(".grid > .gridItem:lt(" + b + ")", this.$element).wrapAll("<div class='slide' data-slideid='" + h + "'></div>")
            }
            var i = Math.ceil(e / b);
            this.$element.attr("data-total", i);
            var j = 0;
            "slideFromLeft" === this._direction && (j = a(".gridItem", this.$element).length - 1), d.royalSlider({
                arrowsNav: !1,
                loop: !0,
                keyboardNavEnabled: !1,
                controlsInside: !1,
                imageScaleMode: "none",
                arrowsNavAutoHide: !1,
                autoHeight: !1,
                autoScaleSlider: !0,
                autoScaleSliderWidth: 0,
                autoScaleSliderHeight: 0,
                slidesSpacing: 0,
                imgWidth: "100%",
                imgHeight: "100%",
                sliderDrag: !0,
                controlNavigation: "none",
                thumbsFitInViewport: !1,
                navigateByClick: !1,
                startSlideId: j,
                autoPlay: {
                    enabled: !1,
                    pauseOnHover: !1,
                    stopAtAction: !1,
                    delay: this._autoPlayTimeout
                },
                transitionType: "move",
                numImagesToPreload: 1
            }), this._slider = d.data("royalSlider"), this._updatePagination(), c._updateCurrentSlide(), this._slider.ev.on("rsBeforeAnimStart", {
                that: this
            }, this._onSlideChange), this._slider.ev.on("rsDragStart", {
                that: this
            }, this._onStartDrag), this._slider.ev.on("rsAfterSlideChange", function(a) {
                a.preventDefault(), c._updateCurrentSlide()
            }), this._initAutoPlay(!1), this._initCaroucelControls(), this._truncateContent(), this._addKeyboardNavigation()
        },
        _onStartDrag: function(a) {
            var b = a ? a.data.that : this;
            b._initAutoPlay(!0)
        },
        _initAutoPlay: function(a) {
            var c = this,
                d = a ? c._interactionTimeout : c._autoPlayTimeout;
            c._timeOutInterval && b.clearInterval(c._timeOutInterval), c._timeOutInterval = b.setInterval(function() {
                "slideFromLeft" === c._direction ? c._moveCarousel({
                    that: c,
                    direction: "prev"
                }) : c._moveCarousel({
                    that: c,
                    direction: "next"
                })
            }, d)
        },
        _removeControls: function() {
            var b = a(".carouselNavigation", this.$element);
            b.find("a.prev").off("click tap", this._onNavigationClick), b.find("a.next").off("click tap", this._onNavigationClick)
        },
        _initCaroucelControls: function() {
            var b = a(".carouselNavigation", this.$element);
            b.show(), b.find("a.prev").on("click tap", {
                that: this,
                direction: "prev"
            }, this._onNavigationClick), b.find("a.next").on("click tap", {
                that: this,
                direction: "next"
            }, this._onNavigationClick)
        },
        _onNavigationClick: function(a) {
            a.preventDefault();
            var b = a.data.that;
            b._initAutoPlay(!0), b._moveCarousel(a.data)
        },
        _moveCarousel: function(a) {
            var b = this,
                c = a.direction;
            b._slider[c](), b._updateSlideLinks()
        },
        _onSlideChange: function(a) {
            var b = a.data.that;
            b._updatePagination(), b._truncateContent()
        },
        _updateCurrentSlide: function() {
            var b = this;
            a(".rsSlide", b.$element).removeClass("current"), a(b._slider.currSlide.holder).addClass("current")
        },
        _updatePagination: function() {
            var b = this,
                c = b._slider.currSlideId + 1;
            "slideFromLeft" === b._direction && (c = b._slider.numSlides - c + 1);
            var d = a(".carouselNavigation .numbers .number", b.$element),
                e = d.eq(0),
                f = d.eq(1);
            e.html(c), f.html(b._slider.numSlides)
        },
        _onResize: function() {
            var a = this;
            a._truncateContent()
        },
        _truncateContent: function() {
            var b = a(".messageContent", this.$element);
            b.trigger("destroy"), b.dotdotdot()
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = b._slider,
                d = a(".grid", b.$element),
                e = a(".carouselNavigation", b.$element);
            d.attr("tabindex", "0"), d.keydown(function(a) {
                39 === a.keyCode ? (c.next(), d.focus(), b._updateSlideLinks()) : 37 === a.keyCode && (c.prev(), d.focus(), b._updateSlideLinks())
            }), e.find("a").keydown(function(b) {
                39 === b.keyCode ? a(this).nextAll("a").first().focus() : 37 === b.keyCode ? a(this).prevAll("a").first().focus() : 13 === b.keyCode && (b.preventDefault(), a(this).trigger("click"))
            }), b._updateSlideLinks()
        },
        _updateSlideLinks: function() {
            var b = this,
                c = (b._slider, a(".carouselWrapper .mediaCarousel", b.$element), a(".rsSlide > .slide", b.$element)),
                d = b._slider.currSlide.content;
            a("a", c).attr("tabindex", "-1"), a("a", d).attr("tabindex", "")
        }
    };
    jQuery.createComponent("SocialFeed", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            articleColumns: ".articleColumns",
            assets: ".StoryArticleImage, .StoryArticleQuote, .StoryArticleVideo, .StoryArticleMap",
            columnAssets: ".columnAssets",
            columnText: ".columnText",
            scrollTriggers: ".scrollTrigger",
            emphasisedTip: "p:has(em)"
        },
        _columnLayout: !1,
        _columnLayoutInited: !1,
        _$window: a(b),
        _scrollLibrary: null,
        _scrollScenesComponent: {},
        _scrollScenesAssets: {},
        _aniTime: 1,
        _scrolledOutOfComponentBeforeTop: !1,
        _componentTopIsBelowViewportTop: !0,
        _componentBottomIsAboveViewportBottom: !1,
        _animating: !1,
        _scrollTriggerTimeout: null,
        _scrollTriggerHook: .5,
        _assetsOffscreen: {},
        _showMultipleAssets: !0,
        _smallerThanViewport: !1,
        _desktopAlignment: "left",
        init: function() {
            return site.inXPM ? void this.$element.addClass("xpmMode") : (this._initScrollLibrary(), this._detectLayout(), this._initLayout(), this._$window.smartresize(this._resize.bind(this)), this.$element.height() < this._$window.height() && (this._smallerThanViewport = !0, this.$element.addClass("assetSmallerThanViewport").addClass("assetAbsolute")), void this._paragraphMarginBottomAdjust())
        },
        _detectLayout: function() {
            this.$element.attr("data-alignment") && (this._desktopAlignment = a(".StoryArticle").attr("data-alignment")), enquire.register("screen and (min-width: " + b.site.breakpoints.medium + "px)", {
                match: function() {
                    this._columnLayout = site.utils.isMobileDevice() ? !1 : "centre" === this.$element.attr("data-alignment") ? !1 : !0, this._initLayout()
                }.bind(this)
            }), enquire.register("screen and (max-width: " + (b.site.breakpoints.medium - 1) + "px)", {
                match: function() {
                    this._columnLayout = !1, this._initLayout()
                }.bind(this)
            })
        },
        _initScrollLibrary: function() {
            this._scrollLibrary = new ScrollMagic.Controller
        },
        _initLayout: function() {
            this._columnLayout && !this._columnLayoutInited ? (this._scrollScenesAssets = {}, this._scrollScenesComponent = {}, this.ui("articleColumns").addClass("columnLayout"), this.ui("articleColumns").removeClass("singleColumn"), this._scrollTriggerAddComponent(!0), this.ui("assets").each(this._processAsset.bind(this, !0)), this._handleAssetMovement(0, !1, !1), this._resize(), this._columnLayoutInited = !0) : !this._columnLayout && this._columnLayoutInited && (this.ui("articleColumns").removeClass("columnLayout"), this._scrollTriggerAddComponent(!1), this.ui("assets").each(this._processAsset.bind(this, !1)), this._columnLayoutInited = !1), this._columnLayout || this.ui("articleColumns").addClass("singleColumn"), this.$element.addClass("layoutReady"), this._$window.trigger("StoryArticle:layoutChange"), this.uiElements.scrollTriggers = a(this.uiSelectors.scrollTriggers, this.$element)
        },
        _processAsset: function(b, c, d) {
            var e, f = a(d),
                g = f.find(".YouTubePlayer");
            b ? (0 === c ? f.data("StoryArticle-asset-first", !0) : c === this.ui("assets").length - 1 && f.data("StoryArticle-asset-last", !0), e = a('<div class="scrollTrigger scrollTriggerAsset scrollTriggerAsset' + c + '"></div>'), e.data("index", c), f.parent(".StoryArticleParagraph").prepend(e), this._scrollTriggerWatch(f, e, c), this.ui("columnAssets").append(f), 0 !== c && this._assetFixUnFix(f, !0), g.length && g.YouTubePlayer("setIgnorePauseEvent", !0)) : (e = this.ui("scrollTriggers").filter(".scrollTriggerAsset" + c), e.parent(".StoryArticleParagraph").append(f), this._assetFixUnFix(f, !1), this._scrollScenesAssets[c] && (this._scrollScenesAssets[c].destroy(), this._scrollScenesAssets[c] = null), e.remove(), g.length && g.YouTubePlayer("setIgnorePauseEvent", !1))
        },
        _assetFixUnFix: function(a, b) {
            b ? a.addClass("assetFixed") : a.attr("style", "").removeClass("assetFixed")
        },
        _scrollTriggerWatch: function(b, c, d) {
            if (1 === d) {
                var e = 100 / this._$window.height() * (a(".StoryArticleParagraph", this.$element).eq(1).offset().top - this.$element.offset().top) / 100 - .01;
                a("<style> .StoryArticle.showScrollTriggers .scrollTrigger:before{ top: " + 100 * e + "%; }</style>").appendTo("head"), this._scrollTriggerHook = Math.min(e, 1), this._showMultipleAssets = 1 > e
            }
            var f = new ScrollMagic.Scene({
                triggerElement: c.get(0),
                triggerHook: this._scrollTriggerHook,
                reverse: !0
            }).on("enter leave", this._scrollTriggerCallback.bind(this, b, d)).addTo(this._scrollLibrary);
            this._scrollScenesAssets[d] = f
        },
        _scrollTriggerAddComponent: function(a) {
            var b = 0,
                c = 0,
                d = 0,
                e = this._scrollTriggerComponentBeforeTop.bind(this),
                f = this._scrollTriggerComponentTop.bind(this),
                g = this._scrollTriggerComponentBottom.bind(this),
                h = this._scrollTriggerComponentAfterBottom.bind(this);
            if (Modernizr.cssvhunit) c = "-22vh", d = "22vh";
            else {
                var i = this._$window.height();
                c = -(.22 * i), d = .22 * i
            }
            this._scrollTriggerWatchComponent(a, "beforeTop", c, e), this._scrollTriggerWatchComponent(a, "top", b, f), this._scrollTriggerWatchComponent(a, "bottom", b, g), this._scrollTriggerWatchComponent(a, "afterBottom", d, h)
        },
        _scrollTriggerWatchComponent: function(b, c, d, e) {
            var f, g, h = "beforeTop" === c || "top" === c;
            b ? (f = a('<div class="scrollTrigger scrollTriggerComponent scrollTrigger' + c + '"></div>'), h ? this.$element.prepend(f) : this.$element.append(f), d && f.css("top", d), g = new ScrollMagic.Scene({
                triggerElement: f.get(0),
                triggerHook: h ? 0 : 1,
                reverse: !0
            }).on("enter leave", e).addTo(this._scrollLibrary), this._scrollScenesComponent[c] = g) : (g = this._scrollScenesComponent[c], f = this.ui("scrollTriggers").filter(".scrollTrigger" + c), g && g.destroy(), f.remove())
        },
        _scrollTriggerCallback: function(a, b, c) {
            var d = !0;
            this._componentTopIsBelowViewportTop || this._componentBottomIsAboveViewportBottom || ("enter" === c.type ? (null !== this._scrollTriggerTimeout && (clearTimeout(this._scrollTriggerTimeout), d = !1), this._scrollTriggerTimeout = setTimeout(this._scrollTriggerAssetEnter.bind(this, a, b, d, c), 200)) : "leave" === c.type && this._scrollTriggerAssetLeave(a, b, c))
        },
        _scrollTriggerAssetEnter: function(a, b, c, d) {
            this._scrollTriggerTimeout = null, this._handleAssetMovement(b, !0, c, d.scrollDirection), a.trigger("StoryArticle:onEnter"), "FORWARD" === d.scrollDirection && 0 !== b && this._scrollScenesAssets[b - 1].trigger("leave", {
                scrollDirection: "FORWARD"
            })
        },
        _scrollTriggerAssetLeave: function(a, b, c) {
            a.trigger("StoryArticle:onLeave"), "REVERSE" === c.scrollDirection && 0 !== b && this._scrollScenesAssets[b - 1].trigger("enter", {
                scrollDirection: "REVERSE"
            })
        },
        _scrollTriggerComponentBeforeTop: function(a) {
            this._scrolledOutOfComponentBeforeTop = "leave" === a.type, this._scrolledOutOfComponentBeforeTop ? this.ui("assets").first().trigger("StoryArticle:onLeave") : this.$element.trigger("StoryArticle:onEnterComponentBeforeTop")
        },
        _scrollTriggerComponentTop: function(a) {
            this._componentTopIsBelowViewportTop = "leave" === a.type;
            var b = this.ui("assets").first();
            this._smallerThanViewport ? (this.ui("assets").removeClass("assetFixed").addClass("assetAbsolute").addClass("assetSmallerThanViewport"), b.trigger("StoryArticle:onEntered")) : this._componentTopIsBelowViewportTop || !this._componentTopIsBelowViewportTop && this._componentBottomIsAboveViewportBottom ? (this.ui("assets").removeClass("assetFixed"), this.ui("assets").addClass("assetAbsolute"), this._moveOnLeaveTop(), clearTimeout(this._scrollTriggerTimeout)) : (this.ui("assets").removeClass("assetAbsolute"), this.ui("assets").addClass("assetFixed"))
        },
        _scrollTriggerComponentBottom: function(a) {
            var b = this.ui("assets").last();
            this._componentBottomIsAboveViewportBottom = "enter" === a.type, this._smallerThanViewport ? (this.ui("assets").removeClass("assetFixed").addClass("assetAbsolute").addClass("assetSmallerThanViewport"), b.trigger("StoryArticle:onEntered"), this.ui("assets").css({
                top: ""
            })) : this._componentBottomIsAboveViewportBottom || !this._componentBottomIsAboveViewportBottom && this._componentTopIsBelowViewportTop ? (this.ui("assets").removeClass("assetFixed"), this.ui("assets").addClass("assetAbsolute"), this._moveOnLeaveBottom(), TweenLite.to(b, this._aniTime, {
                y: this._$window.height() - b.height() - 140
            })) : (TweenLite.to(b, this._aniTime, {
                y: 0
            }), this.ui("assets").removeClass("assetAbsolute"), this.ui("assets").addClass("assetFixed"), this.ui("assets").css({
                top: ""
            }), clearTimeout(this._scrollTriggerTimeout), b.trigger("StoryArticle:onEntered"))
        },
        _scrollTriggerComponentAfterBottom: function(a) {
            this._scrolledOutOfComponentAfterBottom = "enter" === a.type, this._scrolledOutOfComponentAfterBottom && this.ui("assets").last().trigger("StoryArticle:onLeave")
        },
        _handleAssetMovement: function(a, b, c, d) {
            this._componentTopIsBelowViewportTop && this._componentBottomIsAboveViewportBottom || (this._animating === !1 && c === !0 && this._animating === !1 ? this._moveCurrentAsset(a, d) : this._moveAssets(a, b))
        },
        _moveCurrentAsset: function(a, b) {
            var c, d, e, f, g = this._$window.height() / this._aniTime,
                h = 0 === a;
            "FORWARD" !== b || h || (f = 1 === this.ui("assets").eq(a - 1).find(".mediaHolder").length ? this.ui("assets").eq(a - 1).find(".mediaHolder").outerHeight() : this.ui("assets").eq(a - 1).find(".multiImageGrid").outerHeight(), e = this._$window.height() - f, c = f, d = e / g, TweenLite.to(this.ui("assets").eq(a), d, {
                y: c,
                ease: Linear.easeNone,
                onComplete: this._moveCurrentAssetComplete.bind(this, a, !0, !1, b)
            })), "REVERSE" === b && (f = 1 === this.ui("assets").eq(a).find(".mediaHolder").length ? this.ui("assets").eq(a).find(".mediaHolder").outerHeight() : this.ui("assets").eq(a).find(".multiImageGrid").outerHeight(), e = this._$window.height() - f, c = 0 - f, d = e / g, TweenLite.to(this.ui("assets").eq(a), d, {
                y: c,
                ease: Linear.easeNone,
                onComplete: this._moveCurrentAssetComplete.bind(this, a, !0, !1, b)
            })), this._animationDebounce()
        },
        _moveCurrentAssetComplete: function(a, b, c, d) {
            "FORWARD" === d ? this.ui("assets").eq(a - 1).trigger("StoryArticle:onCollision") : this.ui("assets").eq(a + 1).trigger("StoryArticle:onCollision"), this._handleAssetMovement(a, b, c, d)
        },
        _moveAssets: function(a, b) {
            for (var c = 0; c < this.ui("assets").length; c++) {
                var d = (c - a) * this._$window.height(),
                    e = this.ui("assets").eq(c);
                TweenLite.killTweensOf(e), b ? c === a ? TweenLite.to(e, this._aniTime, {
                    y: d,
                    onComplete: this._animationComplete.bind(this, a)
                }) : (e.trigger("StoryArticle:onDeactive"), TweenLite.to(e, this._aniTime, {
                    y: d
                }), this.ui("assets").eq(a - 1).trigger("StoryArticle:onCollision")) : TweenLite.set(e, {
                    y: d
                })
            }
        },
        _animationComplete: function(a) {
            var b = this.ui("assets").eq(a);
            TweenLite.to(this.ui("assets").eq(a), 0, {
                clearProps: "transform"
            }), this._scrolledOutOfComponentBeforeTop || this._scrolledOutOfComponentAfterBottom || b.trigger("StoryArticle:onEntered")
        },
        _moveOnLeaveBottom: function() {
            for (var a = this.ui("assets").length - 1, b = 0; a + 1 > b; b++) {
                var c = (b - a) * this._$window.height(),
                    d = this.ui("assets").eq(b);
                d.css({
                    top: this.$element.height() - this._$window.height()
                }), TweenLite.killTweensOf(d), TweenLite.to(d, this._aniTime, {
                    y: c
                })
            }
            TweenLite.to(this.ui("assets").eq(a), this._aniTime, {
                y: 0,
                onComplete: this._animationComplete.bind(this, a)
            })
        },
        _moveOnLeaveTop: function() {
            for (var a = 0; a < this.ui("assets").length; a++) {
                var b = a * this._$window.height(),
                    c = this.ui("assets").eq(a);
                TweenLite.killTweensOf(c), TweenLite.to(c, this._aniTime, {
                    y: b
                })
            }
            TweenLite.delayedCall(this._aniTime, this._animationComplete.bind(this, 0))
        },
        _animationDebounce: function() {
            var a = this;
            a._animating = !0, clearTimeout(this._animatingTimeout), this._animatingTimeout = setTimeout(function() {
                a._animating = !1
            }, 1e3 * this._aniTime * .5)
        },
        _resize: function() {
            this._columnLayout && (this.ui("assets").width(this.ui("columnAssets").width()), this._reintroduceAssetsOffscreen(), this._checkAssetsOffscreen())
        },
        _reintroduceAssetsOffscreen: function() {
            a.each(this._assetsOffscreen, function(b, c) {
                if (c) {
                    var d = c.$asset,
                        e = c.$originalParent,
                        f = c.itemIndex;
                    e.append(d), this.uiElements.assets = a(this.uiSelectors.assets, this.$element), this._processAsset(!0, f, d.get(0)), this._assetsOffscreen[b] = null
                }
            }.bind(this))
        },
        _checkAssetsOffscreen: function() {
            this.uiElements.scrollTriggers = a(this.uiSelectors.scrollTriggers, this.$element), this.uiElements.assets = a(this.uiSelectors.assets, this.$element);
            var b, c = this.$element.offset().top + this.$element.height(),
                d = c - this._$window.height() * this._scrollTriggerHook,
                e = this.ui("scrollTriggers").filter(".scrollTriggerAsset");
            b = this._showMultipleAssets ? e.filter(function(b, c) {
                var e = a(c),
                    f = e.offset().top > d;
                return f
            }.bind(this)) : e.filter(function(a, b) {
                return 0 !== a
            }.bind(this)), b.each(function(b, c) {
                var d, e = a(c),
                    f = e.data("index"),
                    g = this.ui("assets").get(f),
                    h = a(g),
                    i = e.parent(".StoryArticleParagraph");
                d = {
                    itemIndex: f,
                    $originalParent: i,
                    $asset: h
                }, this._assetsOffscreen[b] = d, this._processAsset(!1, f, g), h.remove()
            }.bind(this)), this.uiElements.assets = a(this.uiSelectors.assets, this.$element)
        },
        _paragraphMarginBottomAdjust: function() {
            this.ui("emphasisedTip").prev().css("margin-bottom", "20px")
        }
    };
    jQuery.createComponent("StoryArticle", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            trackInViewport: !0
        },
        uiSelectors: {
            gridEl: ".multiImageGrid",
            images: ".multiImageItem",
            credits: ".assetCreditDescription"
        },
        $sliderEl: !1,
        init: function() {
            this.options.trackadjust = this.$element.height(), this._loadImages(), this._detectScreens(), site.utils.elementInViewport(this.$element, 0) && this.ui("images").length > 1 && setTimeout(function() {
                this.$element.addClass("sliderActive")
            }.bind(this), 400), a(b).smartresize(this._resizeSlider.bind(this)), a("html").hasClass("touch") && this.$element.find(".TargetLinks").off("click.TargetLinks").on("click.ImageBlock", function(a) {
                a.preventDefault()
            })
        },
        _loadImages: function() {
            var b = a("[data-picture-ignore]", this.$element);
            site.utils.loadIgnoredResponsiveImages(b)
        },
        _detectScreens: function() {
            enquire.register("screen and (min-width: " + b.site.breakpoints.medium + "px)", {
                match: function() {
                    this.$sliderEl !== !1 && this.destroySlider()
                }.bind(this)
            }), enquire.register("screen and (max-width: " + (b.site.breakpoints.medium - 1) + "px)", {
                match: function() {
                    this.ui("images").length > 1 && (this._copyCredits(), this.ui("images").waitForImages(this._resizeSlider.bind(this)), this.$sliderEl === !1 && this.initSlider())
                }.bind(this)
            })
        },
        _onEnterViewport: function() {
            this.$element.addClass("sliderActive")
        },
        _resizeSlider: function() {
            if (this.$element.hasClass("slider") !== !1) {
                this.ui("images").css("height", "");
                var b = this.ui("images").first().height();
                this.ui("images").each(function(c, d) {
                    var e = a(d);
                    e.height() > b && (b = e.height())
                }.bind(this)), this.ui("images").height(b), this.$element.find(".rsOverflow").height(b)
            }
        },
        initSlider: function() {
            this.$element.addClass("slider"), this.ui("gridEl").addClass("royalSlider"), this.ui("images").first().addClass("multiImageItemActive"), this.$sliderEl = a(".royalSlider", this.$element).royalSlider({
                arrowsNav: !1,
                controlNavigation: "none",
                loop: !1,
                keyboardNavEnabled: !1,
                navigateByClick: !1,
                controlsInside: !1,
                imageScaleMode: "none",
                arrowsNavAutoHide: !1,
                thumbsFitInViewport: !1,
                slidesSpacing: 0,
                autoHeight: !1,
                easeOut: "easeOutSine"
            });
            var b = this.$sliderEl.data("royalSlider");
            b.ev.on("rsDragStart", function(a) {
                this.$element.addClass("slideraActive"), this.ui("images").removeClass("multiImageItemActive")
            }.bind(this)), b.ev.on("rsDragRelease", function(c) {
                setTimeout(function() {
                    var c = a(b.currSlide.holder);
                    c.find(".multiImageItem").addClass("multiImageItemActive")
                }.bind(this), 400)
            }.bind(this)), b.ev.on("rsAfterSlideChange", function(c) {
                var d = a(b.currSlide.holder);
                d.find(".multiImageItem").addClass("multiImageItemActive")
            }.bind(this))
        },
        destroySlider: function() {
            var a = this.$sliderEl.data("royalSlider");
            this.ui("gridEl").removeClass("royalSlider").removeAttr("style"), this.$element.removeClass("slider"), this.ui("images").unwrap().removeAttr("style"), this.ui("gridEl").find(".rsOverflow").replaceWith(this.ui("gridEl").find(".multiImageItem")), a.destroy(), this.$sliderEl = !1
        },
        _copyCredits: function() {
            this.ui("credits").each(function(b, c) {
                var d = a(c);
                a(this.ui("images").get(b)).find(".assetDescription").text(d.text())
            }.bind(this))
        }
    };
    jQuery.createComponent("StoryArticleEnhancedImageBlock", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            ignorePauseEvent: !1
        },
        uiSelectors: {
            controls: ".mejs-controls",
            rail: ".mejs-time-rail",
            playerInner: ".mejs-inner",
            text: ".imageMedia p",
            audio: "audio"
        },
        _player: null,
        _aniTime: 1,
        _audioId: null,
        _$window: a(b),
        init: function(a) {
            this._loadImages(), this._initPlayer(), this._initHandlers(), this._$window.smartresize(this._resize.bind(this)), this._resize()
        },
        _loadImages: function() {
            var b = a("[data-picture-ignore]", this.$element);
            site.utils.loadIgnoredResponsiveImages(b)
        },
        _initPlayer: function() {
            var a = this;
            this.ui("audio").length && (this._audioId = "audio" + Math.floor(1e4 * Math.random()), a._player = this.ui("audio").mediaelementplayer({
                startVolume: .8,
                features: ["playpause", "progress", "current", "duration"],
                audioWidth: "100%",
                audioHeight: 50,
                success: function(b, c, d) {
                    b.addEventListener("play", function(b) {
                        a._onPlay(b)
                    }), b.addEventListener("pause", function(b) {
                        a._onPause(b)
                    }), b.addEventListener("ended", function(b) {
                        a._onEnded(b)
                    })
                }
            }))
        },
        _initHandlers: function() {
            this.$element.on("StoryArticle:onEnter", this._onEnter.bind(this)), this.$element.on("StoryArticle:onEntered", this._onEntered.bind(this)), this.$element.on("StoryArticle:onLeave", this._onLeave.bind(this)), this.$element.on("StoryArticle:onCollision", this._onCollision.bind(this)), this.$element.on("StoryArticle:onDeactive", this._onDeactive.bind(this)), this._$window.on("VideoPlayerPause", this._onVideoPlayerPause.bind(this))
        },
        _resize: function() {
            this.ui("controls").width(this.$element.width()), this.ui("rail").width(0), this.ui("playerInner").height(this.ui("text").height()), this._player && this._player[0].player.setControlsSize()
        },
        pausePlayer: function() {
            this._player[0].player.pause()
        },
        _onPause: function(a) {
            this.$element.removeClass("playing").addClass("paused")
        },
        _onPlay: function(a) {
            this._player[0].player.setVolume(1), this.$element.removeClass("paused finished").addClass("playing"), this._$window.trigger("VideoPlayerPause", {
                videoid: this._audioId
            })
        },
        _onEnded: function(a) {
            this.$element.removeClass("playing").addClass("finished")
        },
        _onEnter: function() {},
        _onEntered: function() {
            this.$element.removeClass("collapsed")
        },
        _onCollision: function() {
            this.$element.addClass("collapsed")
        },
        _onDeactive: function() {
            this.$element.addClass("collapsed")
        },
        _onLeave: function() {
            this._player && TweenLite.fromTo(this._player[0].player, this._aniTime, {
                setVolume: 1
            }, {
                setVolume: 0,
                ease: Power2.easeIn,
                onComplete: this.pausePlayer.bind(this)
            })
        },
        _onVideoPlayerPause: function(a, b) {
            b.videoid && !this.options.ignorePauseEvent && this._player && this._player[0] && b.videoid !== this._audioId && this.pausePlayer()
        }
    };
    jQuery.createComponent("StoryArticleImage", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            mediaHolder: ".mediaHolder",
            iframeContainer: ".iframeContainer",
            iframeOverlay: ".iframeOverlay",
            iframe: "iframe"
        },
        init: function() {
            this._initIframe(), this._mapScrollingOn(), this._mapScrollingOff(), this._initHandlers()
        },
        _initIframe: function() {
            enquire.register("screen and (min-width: " + (b.site.breakpoints.small + 1) + "px)", {
                match: function() {
                    this.ui("mediaHolder").css("height", .5625 * this.ui("mediaHolder").width()), this._adjustIframeHeight()
                }.bind(this)
            }), enquire.register("screen and (orientation:portrait) and (max-width: " + b.site.breakpoints.small + "px)", {
                match: function() {
                    this.ui("mediaHolder").css("height", 350)
                }.bind(this)
            }), enquire.register("screen and (orientation:landscape) and (max-width: " + b.site.breakpoints.small + "px)", {
                match: function() {
                    this.ui("mediaHolder").css("height", 250)
                }.bind(this)
            })
        },
        _adjustIframeHeight: function() {
            var c = a(b);
            c.resize(function() {
                c.width() > b.site.breakpoints.small && this.ui("mediaHolder").css("height", .5625 * this.ui("mediaHolder").width())
            }.bind(this))
        },
        _mapScrollingOn: function() {
            this.ui("iframeContainer").click(function() {
                this.ui("iframeOverlay").css("display", "none"), this.ui("iframe").css("pointer-events", "auto")
            }.bind(this)).hover(function() {
                "none" === this.ui("iframe").css("pointer-events") && b.setTimeout(function() {
                    this.ui("iframeOverlay").css("display", "none"), this.ui("iframe").css("pointer-events", "auto")
                }.bind(this), 3e3)
            }.bind(this))
        },
        _mapScrollingOff: function() {
            var c = a(b);
            c.on("load resize scroll", function() {
                var a = this._isElementOutViewport(this.ui("iframeContainer"));
                a || (this.ui("iframeOverlay").css("display", "block"), this.ui("iframe").css("pointer-events", "none"))
            }.bind(this))
        },
        _isElementOutViewport: function(c) {
            "function" == typeof jQuery && c instanceof jQuery && (c = c[0]);
            var d = c.getBoundingClientRect();
            return d.top >= 0 && d.left >= 0 && d.bottom <= a(b).height() && d.right <= a(b).width()
        },
        _initHandlers: function() {
            this.$element.on("StoryArticle:onEnter", this._onEnter.bind(this)), this.$element.on("StoryArticle:onEntered", this._onEntered.bind(this)), this.$element.on("StoryArticle:onLeave", this._onLeave.bind(this)), this.$element.on("StoryArticle:onCollision", this._onCollision.bind(this)), this.$element.on("StoryArticle:onDeactive", this._onDeactive.bind(this))
        },
        _onEnter: function() {},
        _onEntered: function() {
            this.$element.removeClass("collapsed")
        },
        _onLeave: function() {},
        _onCollision: function() {
            this.$element.addClass("collapsed")
        },
        _onDeactive: function() {
            this.$element.addClass("collapsed")
        }
    };
    jQuery.createComponent("StoryArticleMap", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {},
        init: function() {
            this._initHandlers()
        },
        _initHandlers: function() {
            this.$element.on("StoryArticle:onEnter", this._onEnter.bind(this)), this.$element.on("StoryArticle:onEntered", this._onEntered.bind(this)), this.$element.on("StoryArticle:onLeave", this._onLeave.bind(this)), this.$element.on("StoryArticle:onCollision", this._onCollision.bind(this)), this.$element.on("StoryArticle:onDeactive", this._onDeactive.bind(this))
        },
        _onEnter: function() {},
        _onEntered: function() {
            this.$element.removeClass("collapsed")
        },
        _onCollision: function() {
            this.$element.addClass("collapsed")
        },
        _onLeave: function() {},
        _onDeactive: function() {
            this.$element.addClass("collapsed")
        },
        _destroy: function() {}
    };
    jQuery.createComponent("StoryArticleQuote", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            loopPlayer: ".videoContainerLoop .VideoPlayer",
            container: ".storyVideoContainer",
            player: ".YouTubePlayer",
            cta: ".mediaOverlay",
            text: ".assetDescription"
        },
        _states: {
            playerOverlay: {
                hidden: "hidden",
                showBehind: "showBehind",
                showInFront: "showInFront"
            }
        },
        $articleColumn: null,
        $playerOriginal: null,
        $playerOverlay: null,
        $playerOverlayMediaPlayer: null,
        $closeBtn: null,
        $masks: {},
        loopPlayer: !1,
        loopPlayerThumb: [],
        isMediaManager: !1,
        loopExpand: !1,
        _$window: a(b),
        _aniTime: 1,
        init: function() {
            this.isMediaManager = this.ui("container").find(".VideoPlayer").length ? !0 : !1, this.uiSelectors.player = this.isMediaManager ? ".storyVideoContainer .VideoPlayer" : this.uiSelectors.player, this.isMediaManager && this.ui("player").VideoPlayer(), this._createLayout(), site.utils.isMobileDevice() && this.$element.removeClass("withLoop"), this.$element.hasClass("withLoop") && (this.loopPlayer = !0, this._initLoopPlayer()), this._initHandlers(), this._resize(), this._$window.smartresize(this._resize.bind(this))
        },
        _createLayout: function() {
            var b, c, d = this.$element.parents(".StoryArticle");
            if (this.$articleColumn = d.find(".columnText"), b = a(this.isMediaManager ? '<div class="playerOriginal"><div class="playerContainer"></div></div>' : '<div class="playerOriginal"><div class="playerContainer"><div class="YouTubePlayer"><div class="playerWrapper"><div id="YouTubeVideo_123" class="placeholderVideo" data-video-id="A3PDXmYoF5U"></div></div></div></div></div>'), this.$playerOriginal = b.find(".playerContainer"), this.isMediaManager) {
                var e = this.ui("player").clone();
                this.$playerOriginal.append(e), e.VideoPlayer()
            }
            this.$playerOverlay = a('<div class="playerOverlay" data-visibility="hidden"><div class="player"></div></div>'), c = a('<div class="masks"><div class="mask maskV1"></div><div class="mask maskV2"></div><div class="mask maskH1"></div><div class="mask maskH2"></div></div>'), this.$masks.v1 = c.find(".maskV1"), this.$masks.v2 = c.find(".maskV2"), this.$masks.h1 = c.find(".maskH1"), this.$masks.h2 = c.find(".maskH2"), d.append(b).append(this.$playerOverlay).append(c)
        },
        _initHandlers: function() {
            this._$window.on("StoryArticle:layoutChange", this._resize.bind(this)), this.$element.on("StoryArticle:onEnter", this._onEnter.bind(this)), this.$element.on("StoryArticle:onEntered", this._onEntered.bind(this)), this.$element.on("StoryArticle:onLeave", this._onLeave.bind(this)), this.$element.on("StoryArticle:onCollision", this._onCollision.bind(this)), this.$element.on("StoryArticle:onDeactive", this._onDeactive.bind(this)), this.$element.parents(".StoryArticle").on("StoryArticle:onEnterComponentBeforeTop", this._onEnterComponentBeforeTop.bind(this))
        },
        _pauseOnInitFunction: function() {
            this.ui("loopPlayer").VideoPlayer("pause")
        },
        _pauseOnInit: null,
        _initLoopPlayer: function() {
            this.ui("loopPlayer").VideoPlayer({
                autoplay: !1,
                loop: !0,
                controls: !0,
                ignorePauseEvent: !0
            }), this.ui("cta").on("click tap", this._checkReadyToExpandLoopPlayer.bind(this))
        },
        _resize: function() {
            if (this.loopPlayer) {
                if (this.$playerOverlayMediaPlayer) {
                    this.isMediaManager || this.$playerOverlayMediaPlayer.YouTubePlayer("onResize", !0);
                    var a = this.$playerOverlayMediaPlayer.find(".playerWrapper"),
                        b = this._$window.height() - a.height(),
                        c = 0;
                    c = 0 > b ? b : b / 2, a.css({
                        "margin-top": c
                    })
                }
            } else this.isMediaManager || this.ui("player").YouTubePlayer("onResize", !0)
        },
        _createOverlayPlayer: function() {
            this.$playerOriginal.clone().appendTo(this.$playerOverlay.find(".player")), this.$playerOverlayMediaPlayer = this.isMediaManager ? this.$playerOverlay.find(".VideoPlayer") : this.$playerOverlay.find(".YouTubePlayer"), this.isMediaManager || this.$playerOverlayMediaPlayer.find(".placeholderVideo").data("video-id", this.ui("player").find(".placeholderVideo").data("video-id")), this.$playerOverlayMediaPlayer.on("onPlay", a.proxy(this._revealPlayer, this)), this.$playerOverlay.attr("data-visibility", this._states.playerOverlay.showBehind), this.isMediaManager ? this.$playerOverlayMediaPlayer.VideoPlayer("isInitiated") ? this.$playerOverlayMediaPlayer.VideoPlayer("play") : this.$playerOverlayMediaPlayer.VideoPlayer("initVideo") : this.$playerOverlayMediaPlayer.YouTubePlayer({
                ignorePauseEvent: !0
            }).YouTubePlayer("play"), this._addVideoCloseButton(), this.$playerOverlayMediaPlayer.on("videoEnded", this._fadeVideoOut.bind(this))
        },
        _addVideoCloseButton: function() {
            var b = this;
            this.$closeBtn || (this.$closeBtn = a('<a href="#" class="closeBtn mfp-close"></a>'), this.$closeBtn.css({
                opacity: 0
            }), this.$element.parents(".StoryArticle").append(this.$closeBtn), this.$closeBtn.on("click tap", function(a) {
                a.preventDefault(), b._fadeVideoOut()
            })), TweenLite.to(this.$closeBtn, .5, {
                opacity: 1
            })
        },
        _removeVideoCloseButton: function() {
            var a = this;
            TweenLite.to(a.$closeBtn, .2, {
                opacity: 0,
                onComplete: function() {
                    a.$closeBtn.remove(), a.$closeBtn = null
                }
            })
        },
        _revealPlayer: function() {
            this._resize(), this.$playerOverlay.attr("data-visibility", this._states.playerOverlay.showInFront), this._fadeVideoIn(), this.$playerOverlayMediaPlayer.off("onPlay", this._revealPlayer)
        },
        _checkReadyToExpandLoopPlayer: function(b) {
            var c = this.$element.hasClass("assetFixed"),
                d = this.$element.data("StoryArticle-asset-first");
            this.$element.data("StoryArticle-asset-last");
            if (b.preventDefault(), c) this._expandLoopPlayer();
            else {
                var e = site.utils.detectBrowsers().isExplorer,
                    f = this.$element.parents(".StoryArticle"),
                    g = f.offset(),
                    h = g.top + 1,
                    i = e ? 50 : 1,
                    j = h + f.height() - this._$window.height() - i,
                    k = d ? h : j;
                a.when(a("html, body").animate({
                    scrollTop: k
                }, 400)).then(this._checkAssetFixed.bind(this))
            }
        },
        _checkAssetFixed: function() {
            this.$element.hasClass("assetFixed") || this.$element.hasClass("assetSmallerThanViewport") ? this._expandLoopPlayer() : this.$element.one("StoryArticle:onEntered", this._expandLoopPlayer.bind(this))
        },
        _expandLoopPlayer: function() {
            var c = this,
                d = this.ui("loopPlayer"),
                e = d.find(".playerWrapper"),
                f = e.find(".mejs-video"),
                g = this.ui("text"),
                h = this.$element,
                i = (f.find("video")[0], [e.offset().top, e.offset().left + 5]),
                j = this._$window[0].innerWidth,
                k = this._$window.height(),
                l = j / (f.width() / f.height()),
                m = this.$element.parents(".InteractiveStory"),
                n = a("html"),
                o = {
                    height: k
                };
            h.hasClass("assetFixed") || (o.y = -(f.offset().top - a(b).scrollTop())), m.addClass("fullscreen"), c.loopExpand ? c.loopExpand.play().timeScale(1) : (c.loopPlayerThumb.push(e.width()), c.loopPlayerThumb.push(e.height()), c.loopPlayerThumb.push(f.width()), c.loopPlayerThumb.push(f.height()), c.loopExpand = (new TimelineLite).eventCallback("onReverseComplete", function() {
                e.css({
                    width: c.loopPlayerThumb[0],
                    height: c.loopPlayerThumb[1]
                }), f.css({
                    width: c.loopPlayerThumb[2],
                    height: c.loopPlayerThumb[3]
                }), h.css("top", ""), m.removeClass("fullscreen"), n.removeClass("noScroll")
            }).to(g, .5, {
                opacity: 0,
                onComplete: function() {
                    e.addClass("letterbox"), n.addClass("noScroll")
                }
            }).to(c.$articleColumn, 1, {
                x: -(this.$articleColumn.outerWidth() + this.$articleColumn.offset().left),
                ease: Power2.easeOut
            }).to(f, 1, {
                width: j
            }, "-=1").fromTo(e, 1, {
                width: e.width()
            }, {
                x: -i[1],
                width: j
            }, "-=1").fromTo(f, .5, {
                height: f.height()
            }, {
                height: l,
                y: (k - l) / 2,
                delay: .5
            }, "-=0.5").fromTo(e, .5, {
                height: f.height()
            }, o, "-=0.5").to(h, .5, {
                top: 0,
                onComplete: function() {
                    c._createOverlayPlayer()
                }
            }, "-=0.5")), c._addKeyboardNavigation()
        },
        _addKeyboardNavigation: function() {
            var b = this;
            a(c).on("keyup", function(c) {
                27 === c.keyCode && a("html").hasClass("noScroll") && b._fadeVideoOut()
            })
        },
        _shrinkLoopPlayer: function() {
            var a = this,
                b = this.ui("loopPlayer"),
                c = b.find(".playerWrapper"),
                d = (c.find(".mejs-video"), this.$element);
            TweenLite.to(d, 0, {
                top: 0,
                onComplete: function() {
                    (new TimelineLite).to(a.ui("text"), .2, {
                        opacity: 0,
                        onComplete: function() {
                            a._clearOverlay(), a.loopExpand.reverse().timeScale(1.2), c.removeClass("letterbox")
                        }
                    })
                }
            })
        },
        _setMaskSizes: function() {
            this.$masks.v1.height(this.$element.offset().top - this._$window.scrollTop()), this.$masks.v2.height(this._$window.height() - this.$element.height() + this.ui("text").outerHeight() - (this.$element.offset().top - this._$window.scrollTop())), this.$masks.h1.width(this.$element.offset().left), this.$masks.h2.width(this._$window.width() - this.$element.width() - this.$element.offset().left)
        },
        _fadeVideoIn: function() {
            var a = this.$playerOverlayMediaPlayer;
            this.loopPlayer && this._fadeOutPauseLoop(), TweenLite.fromTo(this.$playerOverlay, .2, {
                opacity: 0
            }, {
                opacity: 1
            });
            var b = {
                vol: 0
            };
            TweenLite.fromTo(b, .5, b, {
                vol: 100,
                onUpdate: function() {
                    this.isMediaManager || a.YouTubePlayer("setVolume", b.vol)
                }
            })
        },
        _animatePageIn: function() {
            TweenLite.to(this.$masks.h1, .5, {
                width: 0,
                delay: .1
            }), TweenLite.to(this.$masks.h2, .5, {
                width: 0,
                delay: .1
            }), TweenLite.to(this.$masks.v1, .5, {
                height: 0,
                delay: .5
            }), TweenLite.to(this.$masks.v2, .5, {
                height: 0,
                delay: .5
            })
        },
        _closeOverlayPlayer: function() {
            var a = this.$element.offset().top - this._$window.scrollTop(),
                b = this._$window.height() - this.$element.height() + this.ui("text").outerHeight() - (this.$element.offset().top - this._$window.scrollTop()),
                c = this.$element.offset().left,
                d = this._$window.width() - this.$element.width() - this.$element.offset().left;
            TweenLite.to(this.$masks.v1, .5, {
                height: a
            }), TweenLite.to(this.$masks.v2, .5, {
                height: b
            }), TweenLite.to(this.$masks.h1, .5, {
                width: c,
                delay: .4
            }), TweenLite.to(this.$masks.h2, .5, {
                width: d,
                delay: .4
            })
        },
        _fadeVideoOut: function() {
            var a = this,
                b = this.$playerOverlayMediaPlayer,
                c = {
                    vol: 100
                };
            TweenLite.fromTo(c, .2, c, {
                vol: 0,
                onUpdate: function() {
                    this.isMediaManager || b.YouTubePlayer("setVolume", c.vol)
                }
            }), this._removeVideoCloseButton(), TweenLite.fromTo(this.$playerOverlay, .2, {
                opacity: 1
            }, {
                opacity: 0,
                onComplete: function() {
                    a._clearOverlay(), a._shrinkLoopPlayer()
                }
            }), this.loopPlayer && this._fadeInPlayLoop()
        },
        _clearOverlay: function() {
            this.$masks.v1.height(0), this.$masks.v2.height(0), this.$masks.h1.width(0), this.$masks.h2.width(0), this.$playerOverlay.attr("data-visibility", this._states.playerOverlay.hidden), this.$playerOverlayMediaPlayer && (this.isMediaManager ? this.$playerOverlay.find(".player").empty() : (this.$playerOverlayMediaPlayer.YouTubePlayer("pause"), b.setTimeout(function() {
                this.$playerOverlayMediaPlayer.YouTubePlayer("destroy"), this.$playerOverlay.find(".player").empty()
            }.bind(this), 1e3)))
        },
        _onEnter: function() {
            this.loopPlayer && this._fadeInPlayLoop()
        },
        _onEntered: function() {
            this.loopPlayer && this._fadeInPlayLoop(), this.$element.removeClass("collapsed")
        },
        _onCollision: function() {
            this.$element.addClass("collapsed")
        },
        _onLeave: function() {
            this.loopPlayer ? this._fadeOutPauseLoop() : this.isMediaManager ? this._pauseMediaManagerVideo() : this._fadeOutYouTubeVolume()
        },
        _onDeactive: function() {
            this.$element.addClass("collapsed")
        },
        _onEnterComponentBeforeTop: function() {
            this.loopPlayer && !this.ui("loopPlayer").VideoPlayer("isInitiated") && (this._pauseOnInit = this._pauseOnInitFunction.bind(this), this.ui("loopPlayer").on("onPlay", this._pauseOnInit), this.ui("loopPlayer").VideoPlayer("initVideo"))
        },
        _fadeInPlayLoop: function() {
            var a = this.ui("loopPlayer"),
                b = {
                    vol: a.VideoPlayer("getVolume")
                };
            a.VideoPlayer("isInitiated") ? (a.off("onPlay", this._pauseOnInit), a.VideoPlayer("play")) : a.VideoPlayer("initVideo"), TweenLite.killTweensOf(b), TweenLite.to(b, .5, {
                vol: 100,
                onUpdate: function() {
                    a.VideoPlayer("setVolume", b.vol)
                }
            })
        },
        _fadeOutPauseLoop: function() {
            var a = this.ui("loopPlayer"),
                b = {
                    vol: a.VideoPlayer("getVolume")
                };
            TweenLite.killTweensOf(b), TweenLite.to(b, .5, {
                vol: 0,
                onUpdate: function() {
                    a.VideoPlayer("setVolume", b.vol)
                },
                onComplete: function() {
                    a.VideoPlayer("pause")
                }
            })
        },
        _fadeOutYouTubeVolume: function() {
            var a = this,
                b = this.ui("player").YouTubePlayer("getVolume"),
                c = {
                    vol: b
                };
            TweenLite.fromTo(c, this._aniTime, {
                vol: 100
            }, {
                vol: 0,
                ease: Power2.easeIn,
                onUpdate: function() {
                    a.ui("player").YouTubePlayer("setVolume", c.vol)
                },
                onComplete: function() {
                    a.ui("player").YouTubePlayer("pause"), a.ui("player").YouTubePlayer("setVolume", b)
                }
            })
        },
        _pauseMediaManagerVideo: function() {
            this.ui("player").VideoPlayer("pause")
        },
        _destroy: function() {}
    };
    jQuery.createComponent("StoryArticleVideo", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            ctaBlockheading: ".ctaBlock .heading",
            description: ".description"
        },
        init: function() {
            this._equalHeightsInit(), a(b).smartresize(this._equalHeightsInit.bind(this))
        },
        _equalHeightsInit: function() {
            this._equalHeightsOff(), "small" !== site.breakpoints.current && this._equalHeightsOn()
        },
        _equalHeightsOn: function() {
            "medium" === site.breakpoints.current ? (this.ui("ctaBlockheading").filter(function(a) {
                return 2 > a
            }).equalHeights(), this.ui("description").filter(function(a) {
                return 2 > a
            }).equalHeights()) : (this.ui("ctaBlockheading").equalHeights(), this.ui("description").equalHeights())
        },
        _equalHeightsOff: function() {
            this.ui("ctaBlockheading").css("height", ""), this.ui("description").css("height", "")
        }
    };
    jQuery.createComponent("StoryCallsToAction", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            volumeFull: .8,
            scrollHijackDuration: 1400
        },
        uiSelectors: {
            extractVideo: ".extractVideo",
            VideoPlayer: ".VideoPlayer",
            VideoPlayerVideo: ".VideoPlayer video",
            extractContent: ".extractContent"
        },
        _$window: a(b),
        _$positionElement: null,
        _isTouchDevice: !1,
        _hasMedia: !1,
        _canPlayVideoPlayerReady: !1,
        _canPlayVideoScrollPosition: !1,
        _videoOptions: {
            autoplay: !0,
            controls: [],
            loop: !0,
            muted: !1,
            clickToPlayPause: !1,
            pauseOtherPlayers: !1,
            onCanPlay: null,
            ignorePauseEvent: !0
        },
        _positionTop: 0,
        _positionBottom: 0,
        _stateIsVideoPlaying: !1,
        _stateAllowScrollHijack: !0,
        _stateScrollingDisabled: !1,
        _volumeCurrent: 0,
        _scrollEvents: !1,
        init: function() {
            this._getPositionElement(), this._detectDeviceType(), this._detectMedia(), this._setSlideRevealOverlay(), this._setScrollEvents(), this._refreshPosition(), this._loadImages(), this._initMedia(), this._attachEvents(), this._scrollEvents && this._onScroll()
        },
        _getPositionElement: function() {
            var a = this.$element.parents(".InteractiveStory > .components > .component");
            a.length > 0 ? this._$positionElement = a : this._$positionElement = this.$element
        },
        _detectDeviceType: function() {
            this._isTouchDevice = site.utils.isMobileDevice(), this._isTouchDevice ? this.$element.addClass("touch") : (this._populateText(), this.$element.addClass("desktop"))
        },
        _detectMedia: function() {
            this._hasMedia = this.$element.hasClass("withMedia")
        },
        _setSlideRevealOverlay: function() {
            this._hasMedia || this.$element.data("slide-reveal-overlay", !0)
        },
        _setScrollEvents: function() {
            this._scrollEvents = !this._isTouchDevice && this._hasMedia
        },
        _populateText: function() {
            var b = a(".prop", this.$element).html();
            a(".half .text", this.$element).html(b)
        },
        _refreshPosition: function() {
            var a = this._$positionElement.outerHeight();
            this._positionTop = this._$positionElement.offset().top, this._positionBottom = this._positionTop + a
        },
        _loadImages: function() {
            var b = a("[data-picture-ignore]", this.$element);
            site.utils.loadIgnoredResponsiveImages(b)
        },
        _initMedia: function() {
            this.ui("VideoPlayer").length && (this._isTouchDevice ? this.ui("VideoPlayer").remove() : (this._videoOptions.onCanPlay = this._onCanPlayVideo.bind(this), this.ui("VideoPlayer").VideoPlayer(this._videoOptions), this.ui("VideoPlayerVideo").coverVid(1920, 1080)))
        },
        _onCanPlayVideo: function() {
            this._canPlayVideoPlayerReady = !0, this.$element.addClass("videoPlayerReady"), this.uiElements.VideoPlayerVideo = a(".VideoPlayer video", this.$element), this._volumeCurrent = this.ui("VideoPlayerVideo").get(0).volume, this._videoReadyStateChange()
        },
        _videoReadyStateChange: function() {
            if (this._canPlayVideoPlayerReady && this._canPlayVideoScrollPosition) {
                var a = this._$window.scrollTop() + this._$window.height();
                this._changeVolumeFromScroll(a), this._playVideo()
            } else this._canPlayVideoPlayerReady && this._pauseVideo()
        },
        _playVideo: function() {
            this.ui("VideoPlayer").VideoPlayer("play"), this._stateVideoPlaying = !0
        },
        _pauseVideo: function() {
            this._changeVolume(0), this.ui("VideoPlayer").VideoPlayer("pause"), this._stateVideoPlaying = !1
        },
        _getScrollRatio: function(a, b, c) {
            var d = b - a,
                e = c - a,
                f = e / d / 2;
            return f
        },
        _changeVolumeFromScroll: function(a) {
            var b = this._calculateVolume(a);
            this._changeVolume(b)
        },
        _calculateVolume: function(a) {
            var b = 0,
                c = 0,
                d = this._defaults.volumeFull,
                e = this._positionTop,
                f = this._positionBottom;
            return c = this._getScrollRatio(e, f, a), b = site.utils.getEasingValue(c) * d
        },
        _changeVolume: function(a) {
            var b = this.ui("VideoPlayerVideo").get(0);
            a = Math.round(20 * a) / 20, a !== this._volumeCurrent && (b.setVolume(a), this._volumeCurrent = a)
        },
        _attachEvents: function() {
            this._scrollEvents && this._$window.on("scroll", this._onScrollWrapper.bind(this)), this.$element.parents(".InteractiveStory").on("resize.InteractiveStory", this._onResize.bind(this))
        },
        _onScrollWrapper: function() {
            b.requestAnimationFrame(this._onScroll.bind(this))
        },
        _onScroll: function() {
            var a = this._$window.height(),
                b = this._$window.scrollTop(),
                c = b + a,
                d = this._positionTop,
                e = this._positionBottom,
                f = c >= d && e >= b;
            this._onScrollMedia(a, b, c, d, e, f)
        },
        _onScrollMedia: function(a, b, c, d, e, f) {
            if (f !== this._canPlayVideoScrollPosition && (f ? this._canPlayVideoScrollPosition = !0 : this._canPlayVideoScrollPosition = !1, this._videoReadyStateChange()), this._canPlayVideoPlayerReady && this._canPlayVideoScrollPosition && this._changeVolumeFromScroll(c), b >= d && this._showText(), this._stateAllowScrollHijack && !this._stateScrollingDisabled && c >= e) {
                var g = e - a;
                this._componentIndicatorIsScrolling() ? this._unhijackScroll() : this._hijackScroll(g)
            }
        },
        _hijackScroll: function(a) {
            this._$window.scrollTop(a), this._$window.on("wheel scroll", this._cancelScroll), this._stateScrollingDisabled = !0, b.setTimeout(this._unhijackScroll.bind(this), this._defaults.scrollHijackDuration)
        },
        _unhijackScroll: function() {
            this._$window.off("wheel scroll", this._cancelScroll), this._stateAllowScrollHijack = !1
        },
        _cancelScroll: function(a) {
            return a.preventDefault() && !1
        },
        _componentIndicatorIsScrolling: function() {
            var a = this.$element.parents(".InteractiveStory");
            return a.InteractiveStory("componentIndicatorIsScrolling")
        },
        _onResize: function() {
            this._refreshPosition(), this._scrollEvents && this._onScroll()
        },
        _showText: function() {
            this.$element.addClass("showText")
        }
    };
    jQuery.createComponent("StoryExtract", e)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _defaults: {
            trackInViewport: !0
        },
        uiSelectors: {
            directionArrows: ".directionArrow",
            storyGalleryCarousel: ".storyGalleryCarousel",
            storyGallerySlides: ".storyGallerySlides",
            frames: ".storyGalleryFrame"
        },
        _carousel: null,
        _filmStripMode: !1,
        _filmstripActiveIndex: 0,
        _initialSlide: 0,
        _orientation: !1,
        _allowResize: !1,
        _heightAdjustment: null,
        _$window: a(b),
        init: function() {
            this._loadImages(), this._initSizeCalculations(), this._switchMode()
        },
        _loadImages: function() {
            var b = a("[data-picture-ignore]", this.$element);
            site.utils.loadIgnoredResponsiveImages(b)
        },
        _switchMode: function() {
            this._isTouchDevice = site.utils.isMobileDevice(), this._isTouchDevice ? this.ui("frames").length > 1 && (this._filmStripMode = !0, this.$element.addClass("StoryGalleryFilmstrip"), this._initFilmstripMode()) : (this.$element.addClass("StoryGalleryFullscreen"), this._initFullscreenMode())
        },
        _initFilmstripMode: function() {
            this._filmstripSetOrientation(), this.ui("frames").each(function(b, c) {
                a(c).after('<div class="storyGalleryFrame storyGalleryFrameSpacer"></div>')
            }), this.uiElements.frames = a(this.uiSelectors.frames, this.$element), this._$window.on("orientationchange", this._filmstripOnOrientationChange.bind(this)), this._filmstripCarousel(this._initialSlide)
        },
        _filmstripGetNumSlidesInView: function() {
            var a = 1;
            return this._filmStripMode && "portrait" === this._orientation ? a = 2 : this._filmStripMode && "landscape" === this._orientation && (a = 4), a
        },
        _filmstripCarousel: function(a) {
            var b = 0,
                c = void 0;
            this.ui("storyGalleryCarousel").addClass("swiper-container"), this.ui("storyGallerySlides").addClass("swiper-wrapper"), this.ui("frames").addClass("swiper-slide"), this._carousel = new Swiper(this.ui("storyGalleryCarousel"), {
                initialSlide: a,
                slidesPerView: this._filmstripGetNumSlidesInView(),
                loop: !0,
                freeMode: this._filmStripMode,
                loopAdditionalSlides: 10,
                freeModeSticky: !site.rtl,
                pagination: {
                    el: this.$element.find(".carouselPagination"),
                    clickable: !0,
                    renderBullet: function(a, d) {
                        return 0 === a && (b = 0), a % 2 !== 0 ? c = '<span class="' + d + ' paginationHidden" aria-hidden="true"></span>' : (b += 1, c = '<span class="' + d + '" data-corrected-label="Go to slide ' + b + '">' + b + "</span>"), c
                    }
                },
                a11y: {
                    enabled: !0
                }
            });
            for (var d = this._carousel.pagination.bullets, e = 0; e < d.length; e += 1) {
                var f = d[e],
                    g = f.getAttribute("data-corrected-label");
                null !== g ? f.setAttribute("aria-label", g) : f.setAttribute("aria-label", "")
            }
            this._carousel.on("onSlideChangeStart", this._filmstripUpdateActiveIndex.bind(this)), this._carousel.on("onSlideChangeEnd", this._filmstripUpdateActiveIndex.bind(this)), this._filmstripUpdateActiveIndex()
        },
        _filmstripUpdateActiveIndex: function() {
            this._filmstripActiveIndex = this._carousel.activeIndex
        },
        _filmstripOnOrientationChange: function() {
            if (this._carousel) {
                var a = this.inViewport,
                    c = this._carousel,
                    d = {
                        loopedSlides: c.loopedSlides,
                        slidesPerGroup: c.params.slidesPerGroup,
                        slidesLength: c.slides.length,
                        bulletsLength: c.pagination.bullets.length
                    };
                this._carousel.destroy(), this._carousel = null, b.setTimeout(this._filmstripSetOrientationAndReset.bind(this, a, this._filmstripActiveIndex, d), 1e3)
            }
        },
        _filmstripSetOrientationAndReset: function(b, c, d) {
            var e = void 0,
                f = this._filmstripConvertActiveIndexToSlideNumber(c, d);
            if (this._filmstripSetOrientation(), this._filmstripCarousel(f), b) {
                if ("landscape" === this._orientation) e = this.$element;
                else {
                    var g = this.$element.height(),
                        h = this._$window.height();
                    e = g >= h ? this.$element : this.$element.offset().top - (h - g) / 2
                }
                site.utils.scrollTo(e, 800, a.noop, "easeOutSine", !0)
            }
        },
        _filmstripConvertActiveIndexToSlideNumber: function(a, b) {
            var c = void 0;
            c = Math.ceil(a - b.loopedSlides) / b.slidesPerGroup;
            var d = b.slidesLength - 1,
                e = 2 * b.loopedSlides;
            return c > d - e && (c -= c - (b.slidesLength - e)), c > d && (c -= c - b.bulletsLength), c
        },
        _filmstripSetOrientation: function() {
            this._orientation = site.utils.getDeviceOrientation(), this.$element.addClass(this._orientation)
        },
        _initFullscreenMode: function() {
            this.ui("frames").StoryGalleryTransitions(), this.ui("frames").length > 1 && this._fullscreenCarousel()
        },
        _fullscreenCarousel: function() {
            var b = 0;
            site.rtl && (this.ui("storyGallerySlides").append(this.ui("frames").get().reverse()), b = this.ui("frames").length - 1);
            var c = {
                arrowsNav: !1,
                loop: !0,
                autoHeight: !0,
                keyboardNavEnabled: !1,
                navigateByClick: !1,
                controlsInside: !1,
                imageScaleMode: "none",
                controlNavigation: "tabs",
                arrowsNavAutoHide: !1,
                thumbsFitInViewport: !1,
                numImagesToPreload: 100,
                startSlideId: b,
                slidesSpacing: 0
            };
            this.ui("storyGallerySlides").royalSlider(c), this._carousel = this.ui("storyGallerySlides").data("royalSlider"), this._fullscreenPagination(), this.$element.CursorAnimateRotate(), this._carousel.ev.on("rsSlideClick", a.proxy(this._fullscreenCursorClick, this)), this._carousel.ev.on("rsAfterSlideChange", a.proxy(this._fullscreenSlideChange, this)), this._resize()
        },
        _fullscreenSlideChange: function() {
            this._resize(), b.richsponsiveImage()
        },
        _fullscreenPagination: function() {
            var b = a(".rsNavItem", this.$element),
                c = b.length,
                d = void 0;
            b.each(function(b, e) {
                var f = a(e);
                d = site.rtl ? c - b : b + 1, f.html(d)
            }), this.$element.CursorAnimateRotate("refreshSelectors")
        },
        _fullscreenCursorClick: function() {
            this.$element.hasClass("cursorLeft") && this._carousel.prev(), this.$element.hasClass("cursorRight") && this._carousel.next()
        },
        _initSizeCalculations: function() {
            var c = this;
            (a("html").hasClass("no-cssvhunit") || null !== navigator.userAgent.match(/(iPad|iPhone|iPod touch);.*CPU.*OS 7_\d/i)) && (this.$element.removeClass("viewportheight"), this._allowResize = !0, this._setHeightAdjustment(), this._resize(), a(b).smartresize(function() {
                c._resize()
            }))
        },
        _resize: function() {
            if (this._allowResize) {
                var b = this._heightAdjustmnet(this._$window.height());
                this.ui("storyGalleryCarousel").height(b), a(".storyGalleryFrame", this.$element).height(b), a(".rsContainer, .rsOverflow", this.$element).height(b), this._filmStripMode && this._carousel && this._carousel.update()
            }
        },
        _setHeightAdjustment: function() {
            var a = this;
            this._heightAdjustmnet = function(a) {
                return a
            }, enquire.register("screen and (min-width: " + b.site.breakpoints.medium + "px)", {
                match: function() {
                    a._heightAdjustmnet = function(a) {
                        return a
                    }
                }
            }), enquire.register("screen and (max-width: " + (b.site.breakpoints.medium - 1) + "px)", {
                match: function() {
                    a._heightAdjustmnet = function(a) {
                        return a - site.utils.getStickyNavHeight()
                    }
                }
            }), enquire.register("screen and (orientation: portrait)", {
                match: function() {
                    a._heightAdjustmnet = function(a) {
                        return .6 * a
                    }
                }
            })
        },
        _destroy: function() {}
    };
    jQuery.createComponent("StoryGallery", c)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            galleryLayout: ".galleryLayout",
            galleryLayoutImage: ".galleryItem .backgroundImage"
        },
        _$window: a(b),
        _uniqueID: null,
        _layoutType: null,
        _layoutProperties: {
            index: 0,
            widthPercent: 100,
            widthOverlayPercent: 0,
            heightPercent: 100,
            heightOverlayPercent: 0,
            widthPixels: 0,
            heightPixels: 0,
            clipPathCurrent: {},
            clipPathStart: {},
            clippedSides: {},
            hoveredClipPathPositions: [],
            $galleryLayout: null,
            $svgWrapper: null,
            $svg: null,
            svgPolygon: null,
            tweenClipPath: null,
            tweenScale: null,
            nestedLayout: !1,
            nestedLayoutIndex: null,
            parentLayout: null
        },
        _layoutTemplates: {
            DualPortrait: {
                frames: 2,
                frameDimensions: {
                    widthPercent: 50,
                    widthOverlayPercent: 6
                },
                clippedSides: [{
                    start: [!1, "halfClipped", !1, !1],
                    hover: [
                        [!1, !1, !1, !1],
                        [!1, !1, !1, "clipped"]
                    ]
                }, {
                    start: [!1, !1, !1, "halfClipped"],
                    hover: [
                        [!1, "clipped", !1, !1],
                        [!1, !1, !1, !1]
                    ]
                }]
            },
            DualPanorama: {
                frames: 2,
                frameDimensions: {
                    heightPercent: 50,
                    heightOverlayPercent: 10
                },
                clippedSides: [{
                    start: [!1, !1, "halfClipped", !1],
                    hover: [
                        [!1, !1, !1, !1],
                        ["clipped", !1, !1, !1]
                    ]
                }, {
                    start: ["halfClipped", !1, !1, !1],
                    hover: [
                        [!1, !1, "clipped", !1],
                        [!1, !1, !1, !1]
                    ]
                }]
            },
            TripletLeft: {
                frames: 4,
                frameDimensions: [{
                    widthPercent: 50,
                    widthOverlayPercent: 6
                }, {
                    widthPercent: 50,
                    widthOverlayPercent: 6
                }, {
                    heightPercent: 50,
                    heightOverlayPercent: 10
                }, {
                    heightPercent: 50,
                    heightOverlayPercent: 10
                }],
                clippedSides: [{
                    start: [!1, "halfClipped", !1, !1],
                    hover: [
                        [!1, !1, !1, !1],
                        [!1, !1, !1, "clipped"],
                        [!1, !1, "halfClipped", !1],
                        ["halfClipped", !1, !1, !1]
                    ]
                }, {
                    start: [!1, !1, !1, "halfClipped"],
                    hover: [
                        [!1, "halfClipped", !1, !1],
                        [!1, !1, !1, "halfClipped"]
                    ]
                }, {
                    start: [!1, !1, "halfClipped", !1],
                    hover: [
                        [!1, "halfClipped", !1, !1],
                        [!1, !1, !1, "halfClipped"],
                        [!1, !1, !1, !1],
                        ["clipped", !1, !1, !1]
                    ]
                }, {
                    start: ["halfClipped", !1, !1, !1],
                    hover: [
                        [!1, "halfClipped", !1, !1],
                        [!1, !1, !1, "halfClipped"],
                        [!1, !1, "clipped", !1],
                        [!1, !1, !1, !1]
                    ]
                }]
            },
            TripletRight: {
                frames: 4,
                frameDimensions: [{
                    widthPercent: 50,
                    widthOverlayPercent: 6
                }, {
                    heightPercent: 50,
                    heightOverlayPercent: 10
                }, {
                    heightPercent: 50,
                    heightOverlayPercent: 10
                }, {
                    widthPercent: 50,
                    widthOverlayPercent: 6
                }],
                clippedSides: [{
                    start: [!1, "halfClipped", !1, !1],
                    hover: [
                        [!1, !1, !1, !1],
                        [!1, !1, "halfClipped", !1],
                        ["halfClipped", !1, !1, !1],
                        [!1, !1, !1, "halfClipped"]
                    ]
                }, {
                    start: [!1, !1, "halfClipped", !1],
                    hover: [
                        [!1, "halfClipped", !1, !1],
                        [!1, !1, !1, !1],
                        ["clipped", !1, !1, !1],
                        [!1, !1, !1, "halfClipped"]
                    ]
                }, {
                    start: ["halfClipped", !1, !1, !1],
                    hover: [
                        [!1, "halfClipped", !1, !1],
                        [!1, !1, "clipped", !1],
                        [!1, !1, !1, !1],
                        [!1, !1, !1, "halfClipped"]
                    ]
                }, {
                    start: [!1, !1, !1, "halfClipped"],
                    hover: [
                        [!1, "clipped", !1, !1],
                        [!1, !1, "halfClipped", !1],
                        ["halfClipped", !1, !1, !1],
                        [!1, !1, !1, !1]
                    ]
                }]
            }
        },
        _easing: Power2.easeOut,
        _durationClipPath: 40,
        _durationScale: 40,
        _supportsClipPath: !0,
        init: function() {
            return this._setLayoutType(), this._featureDetect(), this._supportsClipPath ? this._layoutType ? (this._generateID(), this._createLayoutObjects(), this._calculateClipPathLayouts(), this._processGalleryLayouts(), void this._attachEvents()) : void this._initImageHoverScaleOnly({}) : void this.$element.addClass("StoryGalleryTransitionsOff")
        },
        _createLayoutObjects: function() {
            for (var b = this._layoutTemplates[this._layoutType], c = function(a, b, c) {
                    a[b] = c
                }, d = 0; d < b.frames; d++) {
                var e = b.frameDimensions[d] ? b.frameDimensions[d] : b.frameDimensions,
                    f = b.clippedSides[d],
                    g = {};
                g = a.extend({}, this._layoutProperties), g.index = d, g.$galleryLayout = this.ui("galleryLayout").eq(d), a.each(e, c.bind(null, g)), g.clippedSides = a.extend({}, f), this._setLayout(d, g)
            }
        },
        _featureDetect: function() {
            site.utils.detectBrowsers().isExplorer && (this._supportsClipPath = !1)
        },
        _generateID: function() {
            this._uniqueID = "StoryGalleryFrame" + this._layoutType + Math.random().toString(36).substring(7)
        },
        _setLayoutType: function() {
            var a = this.$element.data("layout");
            this._layoutType = a ? a : !1
        },
        _attachEvents: function() {
            var a = this._getLayout("all");
            a % 2 === 0 && this._$window.smartresize(this._onResize.bind(this))
        },
        _updateDimensions: function(a, b) {
            var c, d, e, f = b.$svg.get(0);
            b.nestedLayout ? (d = b.parentLayout.widthPixels, c = b.parentLayout.heightPixels * ((b.heightPercent + b.heightOverlayPercent) / 100), e = b.parentLayout.heightPixels * ((b.heightPercent - b.heightOverlayPercent) / 100) * b.nestedLayoutIndex) : (d = b.$galleryLayout.width(), c = b.$galleryLayout.height()), b.widthPixels = d, b.heightPixels = c, f.setAttribute("viewBox", "0 0 " + d + " " + c), f.setAttribute("width", d), f.setAttribute("height", c), e && f.setAttribute("y", e), this._updateClipPath(b)
        },
        _onResize: function() {
            var b = this._getLayout("all");
            a.each(b, this._updateDimensions.bind(this))
        },
        _setLayout: function(a, b) {
            "undefined" == typeof site[this._uniqueID] && (site[this._uniqueID] = {
                _layouts: []
            }), site[this._uniqueID]._layouts[a] = b
        },
        _getLayout: function(a) {
            return "all" === a ? site[this._uniqueID]._layouts : site[this._uniqueID]._layouts[a]
        },
        _calculateClipPathLayouts: function() {
            var b = this._getLayout("all"),
                c = ["top", "right", "bottom", "left"];
            a.each(b, this._setStartAndHoverPositions.bind(this, c))
        },
        _setStartAndHoverPositions: function(b, c, d) {
            var e = this._calculateOverlay(d.widthOverlayPercent, d.widthPercent),
                f = this._calculateOverlay(d.heightOverlayPercent, d.heightPercent),
                g = [],
                h = {},
                i = function(a, c, d) {
                    var g = c % 2 === 0 ? f : e,
                        h = 0;
                    "halfClipped" === d ? h = g : "clipped" === d && (h = 2 * g), a[b[c]] = h
                },
                j = function(b, c, d) {
                    var g = this._getLayout(c),
                        h = {};
                    e = this._calculateOverlay(g.widthOverlayPercent, g.widthPercent), f = this._calculateOverlay(g.heightOverlayPercent, g.heightPercent), a.each(d, i.bind(null, h)), b.push(h)
                },
                k = function() {
                    a.each(d.clippedSides.start, i.bind(null, h)), d.clipPathStart = jQuery.extend({}, h), d.clipPathCurrent = jQuery.extend({}, h), a.each(d.clippedSides.hover, j.bind(this, g)), d.hoveredClipPathPositions = g
                };
            k.call(this)
        },
        _calculateOverlay: function(a, b) {
            return a / (b + a) * 100
        },
        _processGalleryLayouts: function() {
            this.ui("galleryLayout").each(this._processGalleryLayout.bind(this))
        },
        _processGalleryLayout: function(b, c) {
            var d = this._getLayout(b),
                e = d.widthPercent + d.widthOverlayPercent,
                f = d.heightPercent + d.heightOverlayPercent,
                g = a(c),
                h = g.find(this.uiSelectors.galleryLayout).length,
                i = d.nestedLayout;
            if (g.width(e + "%").height(f + "%"), h) this._processNestedLayouts(d, g);
            else if (!i) {
                var j = g.find(this.uiSelectors.galleryLayoutImage);
                this._processLayoutImages(d, j)
            }
        },
        _processLayoutImages: function(a, b) {
            this._replaceImageWithSVG(a, b), this._initImageHovers(a), this._updateDimensions(a.index, a)
        },
        _replaceImageWithSVG: function(a, b) {
            this._buildSVG(a, b), b.after(a.$svgWrapper).remove()
        },
        _processNestedLayouts: function(a, b) {
            var c;
            this._buildSVG(a, !1), c = a.$svg.find(".contents"), b.append(a.$svgWrapper), this._updateDimensions(a.index, a), b.find(this.uiSelectors.galleryLayout).each(this._processNestedLayout.bind(this, a))
        },
        _processNestedLayout: function(b, c, d) {
            var e = this._getLayout(b.index + c + 1),
                f = a(d);
            e.nestedLayout = !0, e.parentLayout = b, e.nestedLayoutIndex = c;
            var g = f.find(this.uiSelectors.galleryLayoutImage);
            this._processLayoutImages(e, g), e.$svg = f.find("svg"), b.$svg.find(" > .contents").append(e.$svg), f.remove(), this._updateDimensions(e.index, e)
        },
        _buildSVG: function(b, c) {
            var d = "",
                e = "clip-path-" + this._uniqueID + b.index,
                f = '<svg class="gallerySVG" style="overflow:hidden" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">',
                g = "</svg>",
                h = '<g class="contents" clip-path="url(#' + e + ')"><rect width="100%" height="100%" ></rect>',
                i = "</g>",
                j = '<defs><clipPath id="' + e + '" maskUnits="objectBoundingBox"><polygon></polygon></clipPath></defs>';
            if (c.length) {
                var k = c.css("background-image").match(/\((.*?)\)/)[1].replace(/('|")/g, ""),
                    l = c.attr("data-alt") ? c.attr("data-alt") : "";
                d = '<image width="100%" height="100%" alt="' + l + '" preserveAspectRatio="xMidYMid slice" xlink:href="' + k + '"></image>'
            }
            b.$svgWrapper = a('<div class="gallerySVGWrapper">' + f + j + h + d + i + g + "</div>"), b.$svg = b.$svgWrapper.find("svg"), b.svgPolygon = b.$svg.find("polygon").get(0)
        },
        _convertPercentagesToSVGPoints: function(a, b) {
            var c = {
                    top: a.heightPixels / 100 * b.top,
                    right: a.widthPixels - a.widthPixels / 100 * b.right,
                    bottom: a.heightPixels - a.heightPixels / 100 * b.bottom,
                    left: a.widthPixels / 100 * b.left
                },
                d = {
                    leftTop: c.left + "," + c.top,
                    rightTop: c.right + "," + c.top,
                    rightBottom: c.right + "," + c.bottom,
                    leftBottom: c.left + "," + c.bottom
                };
            return d
        },
        _initTweenScale: function(a, b) {
            a.tweenScale = TweenLite.to(b, this._durationScale, {
                scale: 1.2,
                rotationZ: "0.01deg",
                transformOrigin: "50% 50%",
                paused: !0
            })
        },
        _initImageHoverScaleOnly: function(a) {
            var b = this.$element.find(this.uiSelectors.galleryLayoutImage).get(0),
                c = this.$element;
            this._initTweenScale(a, b), c.on({
                mouseenter: function() {
                    a.tweenScale.play()
                },
                mouseleave: function() {
                    a.tweenScale.reverse()
                }
            })
        },
        _initImageHovers: function(a) {
            var b = a.$svg.find("image").get(0),
                c = a.$svg;
            b && this._initTweenScale(a, b), c.on({
                mouseenter: this._onImageMouseEnterLeave.bind(this, !0, a.index),
                mouseleave: this._onImageMouseEnterLeave.bind(this, !1, a.index)
            })
        },
        _updateClipPath: function(a) {
            var b = this._convertPercentagesToSVGPoints(a, a.clipPathCurrent);
            a.svgPolygon.setAttribute("points", b.leftTop + " " + b.rightTop + " " + b.rightBottom + " " + b.leftBottom)
        },
        _getClipPathProgress: function(a) {
            var b, c = function(c) {
                b = 1 - a.clipPathCurrent[c] / (2 * a.clipPathStart[c])
            };
            return 0 !== a.clipPathStart.left ? c("left") : 0 !== a.clipPathStart.right ? c("right") : 0 !== a.clipPathStart.top ? c("top") : 0 !== a.clipPathStart.bottom && c("bottom"), b
        },
        _initTweenClipPath: function(a, b, c) {
            a.tweenClipPath = TweenLite.to(a.clipPathCurrent, b, {
                top: c.top,
                right: c.right,
                bottom: c.bottom,
                left: c.left,
                ease: this._easing,
                onUpdate: this._updateClipPath.bind(this, a),
                paused: !1
            })
        },
        _onImageMouseEnterLeave: function(b, c) {
            var d = this._getLayout(c),
                e = this._getLayout("all"),
                f = this._getClipPathProgress(d),
                g = f * this._durationClipPath,
                h = this._durationClipPath - g,
                i = Math.abs(2 * (f - .5)) * (this._durationClipPath / 2);
            b ? (this._supportsClipPath && a.each(e, function(a, b) {
                var c = d.hoveredClipPathPositions[a];
                this._initTweenClipPath(b, h, c)
            }.bind(this)), d.tweenScale.play()) : (this._supportsClipPath && a.each(e, function(a, b) {
                this._initTweenClipPath(b, i, b.clipPathStart)
            }.bind(this)), d.tweenScale.reverse())
        }
    };
    jQuery.createComponent("StoryGalleryTransitions", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            screens: ".screen",
            headingScreen: ".screenHeading",
            headingLayer: ".headingLayer",
            copyScreen: ".screenCopy",
            copy: ".copy",
            overlay: ".overlay",
            audio: ".audio",
            scrollButtonContainers: ".scrollButtonContainer",
            scrollButtons: ".scrollButton",
            flatImage: ".flatImage",
            layeredImageLayers: ".layeredImage .layer",
            layeredImages: ".layeredImage .layer .image",
            headerBox: ".headerBox"
        },
        _$window: a(b),
        _$header: a("#header"),
        _$hubNavigation: a(".HubNavigation"),
        _oldWindowHeight: null,
        _isTouchDevice: !1,
        _isStickyHeader: null,
        _scrollPosition: null,
        _useParallax: null,
        _waypoints: {
            headingTrigger: null,
            copyFadeTop: null,
            copyFadeBottom: null,
            copyHijackTrigger: null,
            audioFadeTop: null,
            audioFadeBottom: null,
            parallaxTop: null,
            parallaxEnd: null
        },
        init: function() {
            this._headerBox(), this._detectDeviceType(), this._detectStickyHeader(), this._detectParallax(), this._resizeScreens(), this._calculateWaypoints(), this._bindEvents(), this._isTouchDevice || (this._setScrollHijack(), this._updateHeading(), this._initAudio()), this._updateCopy(), this._useParallax && (this._isTouchDevice ? this._initTiltParallax() : this._initScrollParallax())
        },
        _headerBox: function() {
            this.ui("headerBox").HeaderBox({
                onAtSmallBreakpoint: !0
            })
        },
        _detectDeviceType: function() {
            site.utils.isMobileDevice() ? (this._isTouchDevice = !0, this.$element.addClass("touch")) : this.$element.addClass("desktop")
        },
        _detectStickyHeader: function() {
            this._isStickyHeader = "fixed" === this._$header.css("position")
        },
        _detectParallax: function() {
            this.ui("layeredImageLayers").length > 2 ? (this._useParallax = !0, this.$element.addClass("parallax")) : this._useParallax = !1
        },
        _getScrollPosition: function() {
            return null === this._scrollPosition && (this._scrollPosition = this._$window.scrollTop()), this._scrollPosition
        },
        _resetScrollPosition: function() {
            this._scrollPosition = null
        },
        _bindEvents: function() {
            this._$window.smartresize(function() {
                this._detectStickyHeader(), this._resizeScreens()
            }.bind(this)), this._$window.on("closeNotificationBar", function() {
                this._resizeScreens(!0)
            }.bind(this));
            var a;
            this._isTouchDevice ? (this._$window.smartresize(function() {
                this._resetScrollPosition(), this._updateCopy()
            }.bind(this)), a = function() {
                this._resetScrollPosition(), this._updateCopy()
            }, this._$window.on("scroll", function() {
                b.requestAnimationFrame(a.bind(this))
            }.bind(this))) : (this._$window.smartresize(function() {
                this._resetScrollPosition(), this._calculateWaypoints(), this._updateHeading(), this._updateCopy(), this._updateAudioVolume()
            }.bind(this)), a = function() {
                this._resetScrollPosition(), this._checkScrollHijack(), this._updateHeading(), this._updateCopy(), this._updateButtons(), this._updateAudioVolume(), this._stopAutoscroll()
            }, this._$window.on("scroll", function() {
                b.requestAnimationFrame(a.bind(this))
            }.bind(this)), this.ui("scrollButtons").on("click", this._buttonClick.bind(this)))
        },
        _detectHeightChange: function() {
            var a, b = this._$window.height();
            if (this._isTouchDevice) {
                var c = Math.abs(b - this._oldWindowHeight);
                a = c > 100
            } else a = b !== this._oldWindowHeight;
            return a
        },
        _resizeScreens: function(b) {
            var c = this._$window.height(),
                d = b === !0 ? !0 : this._detectHeightChange();
            if (d) {
                var e = this._$header.height(),
                    f = this._isStickyHeader ? site.utils.getStickyNavHeight(site.stickyNavigationTransitionPoint + 1) : 0,
                    g = c - e,
                    h = c - f;
                this.ui("screens").each(function(b, c) {
                    var d, e = a(c);
                    e.hasClass("screenHeading") ? (d = g, this._$hubNavigation.data("sticky") === !0 && (d -= this._$hubNavigation.outerHeight())) : d = h, e.css("height", d + "px")
                }.bind(this)), this._oldWindowHeight = c
            }
        },
        _calculateWaypoints: function() {
            var a = this._$window.height(),
                b = this.$element.offset().top,
                c = b + this.$element.height();
            this._waypoints.headingTrigger = this.ui("headingScreen").offset().top + this.ui("headingScreen").height() - a, this._waypoints.headingTrigger = this._waypoints.headingTrigger < b && !this._isStickyHeader ? b : this._waypoints.headingTrigger, this._waypoints.copyFadeTop = this.ui("copyScreen").offset().top - .5 * a, this._waypoints.copyFadeBottom = this._waypoints.copyFadeTop + .25 * a, this._waypoints.copyHijackTrigger = this.ui("copyScreen").offset().top, this._waypoints.copyHijackTrigger -= this._isStickyHeader ? site.utils.getStickyNavHeight(site.stickyNavigationTransitionPoint + 1) : 0, this._waypoints.audioFadeTop = c - a, this._waypoints.audioFadeBottom = c, this._waypoints.parallaxTop = this._waypoints.headingTrigger, this._waypoints.parallaxBottom = c - a
        },
        _updateHeading: function() {
            var a = this._getScrollPosition(),
                b = a > this._waypoints.headingTrigger,
                c = "";
            b && (c = this._waypoints.headingTrigger - a, c += "px"), this.ui("headingLayer").css("top", c)
        },
        _updateCopy: function() {
            var a = this._getScrollPosition(),
                b = "";
            this._hijackThisScroll ? a >= this._waypoints.copyHijackTrigger ? (this.ui("copy").addClass("visible"), this.ui("overlay").addClass("visible")) : (this.ui("copy").removeClass("visible"), this.ui("overlay").removeClass("visible")) : (b = (a - this._waypoints.copyFadeTop) / (this._waypoints.copyFadeBottom - this._waypoints.copyFadeTop), b = 0 > b ? 0 : b, b = b > 1 ? 1 : b), this.ui("copy").css("opacity", b), this.ui("overlay").css("opacity", b)
        },
        _hijackThisScroll: null,
        _hijackDuration: 800,
        _setScrollHijack: function() {
            var a = this._getScrollPosition();
            a < this._waypoints.copyHijackTrigger ? this._hijackThisScroll = !0 : this._hijackThisScroll = !1
        },
        _checkScrollHijack: function() {
            if (this._hijackThisScroll) {
                var a = this._getScrollPosition();
                a >= this._waypoints.copyHijackTrigger && (this._componentIndicatorIsScrolling() ? this._unhijackScroll() : this._hijackScroll())
            }
        },
        _componentIndicatorIsScrolling: function() {
            var a = this.$element.parents(".InteractiveStory");
            return a.InteractiveStory("componentIndicatorIsScrolling")
        },
        _hijackScroll: function() {
            this.$element.addClass("hijackScroll"), this._$window.scrollTop(this._waypoints.copyHijackTrigger);
            var b = a.Event("scrollHighjack");
            this._$window.trigger(b), site.utils.disableScroll(), setTimeout(function() {
                this._unhijackScroll()
            }.bind(this), this._hijackDuration)
        },
        _unhijackScroll: function() {
            this._hijackThisScroll = !1, this.$element.removeClass("hijackScroll"), this._updateCopy(), site.utils.enableScroll()
        },
        _audioPlayer: null,
        _audioMaxVolume: 1,
        _audioFadeInDuration: 3200,
        _initAudio: function() {
            this.ui("audio").length && !this._audioPlayer && (this._layersLoadedAll ? (this.ui("audio").mediaelementplayer({
                loop: !0
            }), this._audioPlayer = this.ui("audio")[0].player, this._fadeAudioIn()) : this.$element.on("StoryHero:layersLoaded", this._initAudio.bind(this)))
        },
        _playAudio: function() {
            this._audioPlayer && this._audioPlayer.play()
        },
        _pauseAudio: function() {
            this._audioPlayer && this._audioPlayer.pause()
        },
        _setAudioVolume: function(a) {
            this._audioPlayer && (a = 0 > a ? 0 : a, a = a > 1 ? 1 : a, this._audioPlayer.setVolume(a))
        },
        _updateAudioVolume: function() {
            if (this._audioPlayer) {
                var a = this._getScrollPosition(),
                    b = (a - this._waypoints.audioFadeTop) / (this._waypoints.audioFadeBottom - this._waypoints.audioFadeTop);
                b = 0 > b ? 0 : b, b = b > 1 ? 1 : b;
                var c = b / 2 + .5,
                    d = this._audioMaxVolume * site.utils.getEasingValue(c);
                this._setAudioVolume(d), d > 0 ? this._playAudio() : this._pauseAudio()
            }
        },
        _fadeAudioIn: function() {
            if (this._audioPlayer) {
                var b = {
                        volume: 0
                    },
                    c = {
                        volume: this._audioMaxVolume
                    };
                a(b).animate(c, {
                    duration: this._audioFadeInDuration,
                    easing: "swing",
                    step: function(a) {
                        this._audioMaxVolume = a, this._updateAudioVolume()
                    }.bind(this),
                    complete: function() {
                        this._audioMaxVolume = c.volume, this._updateAudioVolume()
                    }.bind(this)
                })
            }
        },
        _buttonScrollDuration: 800,
        _autoscrollTimeout: null,
        _autoscrollTimeoutDuration: 7e3,
        _autoscrolling: !1,
        _buttonClick: function(b) {
            b.preventDefault();
            var c = a(b.target),
                d = c.parents(".scrollButtonContainer"),
                e = d.parents(".screen"),
                f = c.offset().top + c.height();
            f += site.utils.isIe() ? 1 : 0, this._stopAutoscroll(), this._autoscrolling = !0, d.addClass("hidden"), site.utils.scrollTo(f, this._buttonScrollDuration, function() {
                setTimeout(function() {
                    this._autoscrolling = !1
                }.bind(this), 800)
            }.bind(this)), e.hasClass("screenHeading") && this._startAutoscroll(), e.hasClass("screenCopy") && this._unhijackScroll()
        },
        _updateButtons: function() {
            var a = this._getScrollPosition();
            0 === a ? this.ui("scrollButtonContainers").removeClass("hidden") : this._autoscrolling || this.ui("scrollButtonContainers").addClass("hidden")
        },
        _startAutoscroll: function() {
            var b = a(".screenSpacer");
            if (b.is(":visible")) {
                var c = b.find(".scrollButton");
                this._autoscrollTimeout = setTimeout(function() {
                    c.trigger("click")
                }, this._autoscrollTimeoutDuration + this._buttonScrollDuration)
            }
        },
        _stopAutoscroll: function() {
            this._autoscrolling || clearTimeout(this._autoscrollTimeout)
        },
        _accelerationData: {
            oldTime: Date.now(),
            smoothedX: 0,
            smoothedY: 0
        },
        _smoothingFactor: 100,
        _touchDeviceOrientation: null,
        _initTiltParallax: function() {
            this._detectTouchDeviceOrientation(), this._updateTiltParallax(0, 0), this._bindTiltParallaxEvents()
        },
        _detectTouchDeviceOrientation: function() {
            this._touchDeviceOrientation = b.orientation
        },
        _updateTiltParallax: function(a, b) {
            var c = Date.now(),
                d = c - this._accelerationData.oldTime,
                e = this._normaliseAcceleration(a, b);
            e.x = -e.x, this._accelerationData.smoothedX += d * (e.x - this._accelerationData.smoothedX) / this._smoothingFactor, this._accelerationData.smoothedY += d * (e.y - this._accelerationData.smoothedY) / this._smoothingFactor, this._accelerationData.oldTime = c;
            var f = this._accelerationData.smoothedX / 10;
            f = site.utils.limitNumber(f, -1, 1);
            var g = 50 + 50 * f,
                h = this._accelerationData.smoothedY / 10;
            h = site.utils.limitNumber(h, -1, 1);
            var i = 50 + 50 * h;
            this.ui("flatImage").css({
                "perspective-origin": g + "% " + i + "%"
            })
        },
        _normaliseAcceleration: function(a, b) {
            var c = {
                x: null,
                y: null
            };
            switch (this._touchDeviceOrientation) {
                case -90:
                    c.x = b, c.y = -a;
                    break;
                case 90:
                    c.x = -b, c.y = a;
                    break;
                case 180:
                    c.x = -a, c.y = -b;
                    break;
                default:
                    c.x = a, c.y = b
            }
            return c
        },
        _bindTiltParallaxEvents: function() {
            this._$window.on("devicemotion", function(a) {
                var c = a.originalEvent.accelerationIncludingGravity.x,
                    d = a.originalEvent.accelerationIncludingGravity.y;
                b.requestAnimationFrame(this._updateTiltParallax.bind(this, c, d))
            }.bind(this)), this._$window.on("orientationchange", function() {
                b.requestAnimationFrame(this._detectTouchDeviceOrientation)
            }.bind(this))
        },
        _scrollParallaxStrength: null,
        _scrollParallaxLayerOffset: null,
        _initScrollParallax: function() {
            this._loadParallaxImages(), this._initCanvasImages(), this._calculateParallaxStrength(), this._calculateLayerOffset(), this._setFlatLayerOffset(), this._calculateLayerValues(), this._updateScrollParallax(), this._bindScrollParallaxEvents()
        },
        _setFlatLayerOffset: function() {
            this.ui("flatImage").find(".layer").css({
                transform: "translateZ(" + this._scrollParallaxLayerOffset + "px)"
            }), this.$element.addClass("flatImageReady")
        },
        _loadParallaxImages: function() {
            site.utils.loadIgnoredResponsiveImages(this.ui("layeredImages"))
        },
        _calculateParallaxStrength: function() {
            var a = 30;
            this.$element.hasClass("imageLeft") || this.$element.hasClass("imageRight") || (a = 1.5 * a), this._scrollParallaxStrength = a
        },
        _calculateLayerOffset: function() {
            var a = this.ui("layeredImageLayers").length;
            this._scrollParallaxLayerOffset = this._scrollParallaxStrength * (a - 1) / 2
        },
        _calculateLayerValues: function() {
            var b = this.ui("layeredImageLayers").length - 1;
            this.ui("layeredImageLayers").each(function(c, d) {
                var e = a(d),
                    f = Power1.easeOut.getRatio(c / b),
                    g = f * b * this._scrollParallaxStrength - this._scrollParallaxLayerOffset;
                e.data("max-parallax", g)
            }.bind(this))
        },
        _updateScrollParallax: function() {
            var b = this._getScrollPosition(),
                c = (b - this._waypoints.parallaxTop) / (this._waypoints.parallaxBottom - this._waypoints.parallaxTop);
            c = site.utils.limitNumber(c, 0, 1), this.ui("layeredImageLayers").each(function(b, d) {
                var e = a(d),
                    f = Math.round(100 * (this._scrollParallaxLayerOffset + c * e.data("max-parallax"))) / 100;
                e.css({
                    transform: "translateZ(" + f + "px)"
                })
            }.bind(this))
        },
        _bindScrollParallaxEvents: function() {
            this._$window.on("scroll", function() {
                b.requestAnimationFrame(this._updateScrollParallax.bind(this))
            }.bind(this))
        },
        _layersTotal: null,
        _layersLoadedCount: 0,
        _layersLoadedAll: !1,
        _loadedImage: null,
        _initCanvasImages: function() {
            this._layersTotal = this.ui("layeredImageLayers").length, this._addCanvases(), this._drawCanvases(), this._bindCanvasEvents()
        },
        _addCanvases: function() {
            this.ui("layeredImageLayers").each(function(b, c) {
                var d = a(c);
                d.append("<canvas class='canvas'></canvas>")
            })
        },
        _drawCanvases: function() {
            this._layersLoadedCount = 0, this._layersLoadedAll = !1, this.ui("layeredImageLayers").each(function(b, c) {
                var d = a(c),
                    e = a(".image", d),
                    f = a(".canvas", d),
                    g = new Image;
                g.onload = this._drawCanvasImage.bind(this, f, g), g.src = e.css("background-image").replace(/^url\(['"]?/, "").replace(/['"]?\)$/, "")
            }.bind(this))
        },
        _drawCanvasImage: function(a, b) {
            var c = a.get(0),
                d = c.getContext("2d");
            a.attr({
                width: b.width,
                height: b.height
            }), d.drawImage(b, 0, 0), this._layersLoadedCount++, this._layersLoadedCount === this._layersTotal ? (this._layersLoadedAll = !0, this.$element.trigger("StoryHero:layersLoaded"), this._scaleAndPositionCanvases(), this.$element.addClass("layersLoaded")) : this.$element.removeClass("layersLoaded")
        },
        _scaleAndPositionCanvases: function() {
            var b, c, d, e, f = a(".canvas", this.ui("layeredImageLayers")),
                g = this.$element.width(),
                h = this.$element.height(),
                i = f.first().attr("width"),
                j = f.first().attr("height"),
                k = g / h,
                l = i / j;
            k > l ? (b = g, c = g / l, e = 0, d = this.$element.hasClass("imageTop") ? 0 : this.$element.hasClass("imageBottom") ? h - c : (h - c) / 2) : (c = h, b = h * l, d = 0, e = this.$element.hasClass("imageLeft") ? 0 : this.$element.hasClass("imageRight") ? g - b : (g - b) / 2), f.css({
                width: Math.round(b),
                height: Math.round(c),
                top: Math.round(d),
                left: Math.round(e)
            })
        },
        _bindCanvasEvents: function() {
            this._$window.smartresize(this._scaleAndPositionCanvases.bind(this))
        }
    };
    jQuery.createComponent("StoryHero", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            contentBlock: ".contentBlock",
            contentBlockNew: ".contentBlockNew",
            wrapperContentBlocks: ".wrapperContentBlocks",
            moreResultsButton: ".moreResults",
            storyCount: ".storyCount",
            storyCountTop: ".storyCountTop",
            storyCountBottom: ".storyCountBottom",
            storyCountNumber: ".storyCountNumber"
        },
        _$window: a(b),
        _currentBreakpoint: null,
        _cachedContent: [],
        _contentBlockLimit: 6,
        _contentBlockLimits: {
            pageLoad: {
                small: 1,
                medium: 2,
                large: 3
            },
            ajaxLoad: {
                small: 6,
                medium: 4,
                large: 6
            }
        },
        _noAdditionalContentLoaded: !0,
        _viewportResized: !1,
        init: function() {
            this._loadImages(), this._attachEvents(), this._checkCachedContent(), this._initButtonState()
        },
        _loadImages: function() {
            var b = a("[data-picture-ignore]", this.$element);
            site.utils.loadIgnoredResponsiveImages(b)
        },
        _checkCachedContent: function() {
            this._currentBreakpoint = site.utils.getBreakpointSize(), this._updateContentBlockLimit(), this._moveCachedContent(!1)
        },
        _initButtonState: function() {
            this._updateButton(this.ui("wrapperContentBlocks").attr("data-next-url"))
        },
        _moveCachedContent: function(a) {
            this._moveContentCacheToDom(a), this._moveContentDomToCache(a), this._updateStoryCount()
        },
        _moveContentCacheToDom: function(b) {
            this._cachedContent.length && (a.each(this._cachedContent, function(c, d) {
                b && a(d).addClass(this.uiSelectors.contentBlockNew.replace(".", "")), this.ui("wrapperContentBlocks").append(a(d))
            }.bind(this)), this._refreshContentBlockSelectors(), this._cachedContent = [])
        },
        _moveContentDomToCache: function(b) {
            if (!this._viewportResized || this._noAdditionalContentLoaded) {
                var c, d, e = this._contentBlockLimit;
                if (c = b ? this.ui("contentBlockNew") : this.ui("contentBlock"), d = e - c.length, 0 > d) {
                    var f = c.filter(function(a) {
                        return a >= e
                    });
                    f.each(function(b, c) {
                        var d = a(c);
                        d.removeClass(this.uiSelectors.contentBlockNew.replace(".", "")), this._cachedContent.push(d), d.remove()
                    }.bind(this)), this._refreshContentBlockSelectors()
                }
            }
        },
        _updateContentBlockLimit: function() {
            var a = this._currentBreakpoint;
            this._noAdditionalContentLoaded ? this._contentBlockLimit = this._contentBlockLimits.pageLoad[a] : this._contentBlockLimit = this._contentBlockLimits.ajaxLoad[a]
        },
        _attachEvents: function() {
            this.ui("moreResultsButton").on("click", this._loadContent.bind(this)), this._$window.smartresize(function() {
                site.utils.getBreakpointSize() !== this._currentBreakpoint && (this._viewportResized = !0, this._checkCachedContent(), this._viewportResized = !1, this._updateButton())
            }.bind(this))
        },
        _loadContent: function(b) {
            b.preventDefault();
            var c = this.ui("moreResultsButton").attr("data-next-url");
            this._noAdditionalContentLoaded = !1, this._updateContentBlockLimit(), "cache" === c || "" === c || "undefined" == typeof c ? this._loadContentFromCache() : a.ajax(c).done(this._addContentFromAjax.bind(this))
        },
        _loadContentFromCache: function() {
            this._moveCachedContent(!0), this._processNewContent(null)
        },
        _addContentFromAjax: function(b) {
            var c = a(b).find(".StoryLinks .items"),
                d = c.find(this.uiSelectors.contentBlock),
                e = c.attr("data-next-url");
            this._moveContentCacheToDom(!0), this.ui("wrapperContentBlocks").append(d), d.addClass(this.uiSelectors.contentBlockNew.replace(".", "")), this._refreshContentBlockSelectors(), this._moveCachedContent(!0), this._processNewContent(e)
        },
        _processNewContent: function(a) {
            var b, c = this._animateLoadedContent.bind(this);
            this._loadImages(), b = this.ui("contentBlockNew").find("img"), b.length ? b.waitForImages(!0).done(c) : c(), this._updateButton(a)
        },
        _animateLoadedContent: function() {
            this.ui("contentBlockNew").removeClass(this.uiSelectors.contentBlockNew.replace(".", "")), site.utils.scrollTo(this.ui("contentBlockNew")), this.ui("contentBlockNew").each(function(b, c) {
                a(c).css({
                    opacity: 0,
                    y: 80
                }).transition({
                    opacity: 1,
                    y: 0,
                    delay: 200 * b
                })
            }), this._refreshContentBlockSelectors()
        },
        _updateButton: function(a) {
            a && "" !== a ? this.ui("moreResultsButton").attr("data-next-url", a) : this._cachedContent.length ? (this.ui("moreResultsButton").attr("data-next-url", "cache"), this.ui("moreResultsButton").show()) : this.ui("moreResultsButton").fadeOut()
        },
        _refreshContentBlockSelectors: function() {
            this.uiElements.contentBlock = a(this.uiSelectors.contentBlock, this.$element), this.uiElements.contentBlockNew = a(this.uiSelectors.contentBlockNew, this.$element)
        },
        _updateStoryCount: function() {
            var a = this.$element.data("total"),
                b = this.ui("contentBlock").length,
                c = a - b;
            this.ui("storyCountNumber").text(c), 0 >= c ? this.ui("storyCount").addClass("hidden") : b <= this._contentBlockLimits.pageLoad[this._currentBreakpoint] ? (this.ui("storyCountTop").removeClass("hidden"), this.ui("storyCountBottom").addClass("hidden")) : this.ui("storyCount").removeClass("hidden")
        }
    };
    jQuery.createComponent("StoryLinks", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            imageContainer: ".imageContainer",
            section: ".section",
            quoteWrapper: ".quote",
            intro: ".intro",
            sectionOne: ".storySectionOne",
            sectionTwo: ".storySectionTwo",
            sectionThree: ".storySectionThree",
            fallBackImage: ".fallBackImage",
            storySection: ".storySection",
            scrollWrapper: ".scrollWrapper",
            scrollPrompt: ".ScrollDown"
        },
        _defaultStoryObject: {
            $element: !1,
            zoomInit: !1,
            scene: !1,
            tween: !1
        },
        imageSize: {
            width: 4250,
            height: 2823
        },
        _imageRatio: 1.51,
        _imageWindowScale: 2.28,
        _vHeight: a(b).height(),
        _$window: a(b),
        _$body: a("body"),
        _$html: a("html"),
        _$header: a("#header"),
        _touchSwipeHandersActive: !1,
        player: [],
        _playerType: "youtube",
        youtube: "YouTubePlayer",
        mediamanager: "VideoPlayer",
        audio: null,
        audioMuted: !1,
        fadeVideoAudio: !1,
        scrollController: !1,
        scrollScene: !1,
        scrollSceneModifier: 30,
        closeTextInsertionPoint: "partTwo+=10",
        _touchScrollSections: [],
        _stories: [],
        activeSection: !1,
        enabled: !1,
        sectionOneSceneTween: !1,
        sectionTwoSceneTween: !1,
        sectionThreeSceneTween: !1,
        _sectionDurationPosition: {
            sceneOne: 10,
            sceneTwo: 19,
            sceneThree: 30
        },
        touchState: "notouch",
        currentState: "desktop",
        stateContainers: {
            desktop: ".desktopImageContainer",
            mobile: ".mobileImageContainer"
        },
        noVhSupport: !1,
        init: function() {
            var a = this;
            if (this._setCurrentState(), this.$element.find(this.stateContainers[this.currentState]).addClass("stateEnabled"),
                this.noVhSupport = this._checkVhSupport(), this._setTouchState(), site.inXPM) return this.$element.addClass("degraded"), void this.ui("fallBackImage").removeClass("disabled");
            "touch" === this.touchState ? (this.ui("fallBackImage").removeClass("disabled"), this._initTouchVersion()) : (this._resizeZoomImages(!1), this.scrollController = new ScrollMagic.Controller, CSSPlugin.defaultForce3D = !0, this._sectionOneTween(), this._sectionTwoTween(), this._sectionThreeTween(), this._initScene()), this._initEvents(), this._initResize();
            var b = a.$element.data("player-type");
            a._playerType = a[b], a.$element.addClass(b), a._initVideo(), this._populateText()
        },
        _initTouchVersion: function() {
            this.scrollController = new ScrollMagic.Controller({
                globalSceneOptions: {
                    container: this.ui("scrollWrapper").get(0),
                    triggerHook: .3,
                    reverse: !0
                }
            }), this._touchCreateSectionsZero(), this._touchCreateSections(), this._touchOnEnterSection(this._touchGetPosition()), jQuery.event.special.swipe.settings.threshold = 0, this._touchAddSwipeHandlers(), this.ui("storySection").on("movestart", a.proxy(this._touchMoveStart, this))
        },
        _touchAddSwipeHandlers: function() {
            this._touchSwipeHandersActive === !1 && (this.ui("storySection").on("swipedown", a.proxy(this._touchSwipeDown, this)), this.ui("storySection").on("swipeup", a.proxy(this._touchSwipeUp, this)), this._touchSwipeHandersActive = !0)
        },
        _touchRemoveSwipeHandlers: function() {
            this.ui("storySection").off("swipedown"), this.ui("storySection").off("swipeup"), this._touchSwipeHandersActive = !1
        },
        _touchCreateSectionsZero: function() {
            var a = this.ui("sectionOne").clone();
            a.find(".imageContainer").remove(), a.find(".storyContent").remove(), a.find(".storyVideo").remove(), a.find("audio").remove(), a.removeClass("storySectionOne").addClass("storySectionZero"), this.ui("sectionOne").find(".intro").remove(), this.ui("scrollWrapper").prepend(a), this._sectionSizeCalc()
        },
        _touchCreateSections: function() {
            var b = this;
            b.ui("storySection").each(function(c) {
                var d = a(this);
                b._touchOnLeaveSection(c), b._touchScrollSections.push(d), new ScrollMagic.Scene({
                    triggerElement: d[0]
                }).addTo(b.scrollController).setClassToggle(a(this)[0], "touchActive").on("enter", function(a) {
                    var c = b.ui("storySection").index(d);
                    b._touchOnEnterSection(c), b._touchOnLeaveSection(c - 1), b._sectionSizeCalc()
                }).on("leave", function(a) {
                    var c = b.ui("storySection").index(d);
                    b._touchOnEnterSection(c - 1), b._touchOnLeaveSection(c)
                })
            }), b.ui("intro").addClass("loaded")
        },
        _touchSwipeDown: function(a) {
            var b = this._touchGetPosition(!0);
            this._touchScrollToPosition(b, b - 1)
        },
        _touchSwipeUp: function(a) {
            var b = this._touchGetPosition(!1);
            this._touchScrollToPosition(b, b + 1)
        },
        _touchMoveStart: function(a) {
            var b = this._touchGetPosition(!1);
            3 === b && a.distX > a.distY && a.distX < -a.distY && a.preventDefault()
        },
        _touchGetPosition: function(a) {
            var b = this._$window.scrollTop(),
                c = this.$element.offset().top,
                d = b - c,
                e = d / this._$window.height(),
                f = a ? Math.round(e) : Math.floor(e);
            return f
        },
        _touchScrollToPosition: function(a, b) {
            var c = this._touchScrollSections.length - 1;
            0 > b ? this._touchScrollTo(this._touchScrollSections[0].offset().top - this._touchScrollSections[0].outerHeight()) : b > c ? this._touchScrollTo(this._touchScrollSections[c].offset().top + this._touchScrollSections[c].outerHeight()) : this._touchScrollTo(this._touchScrollSections[b].offset().top, a)
        },
        _touchScrollTo: function(a, b, c) {
            this._$body.clearQueue(), this._$body.animate({
                scrollTop: a
            }, 800, this._touchOnEnterSection.bind(this, c))
        },
        _touchOnEnterSection: function(a) {
            if (a >= 0) {
                var b = {
                    duration: 1,
                    linkDelay: 1.5,
                    overlayDelay: .5,
                    overlayDuration: .5,
                    textDelay: 1
                };
                0 !== a ? (this._enableSection(this.ui("storySection").eq(a)), this._openTextAnimation(this.ui("storySection").eq(a), b)) : (TweenLite.to(this.ui("storySection").eq(a).find(".introWrapper"), 2, {
                    delay: 1.2,
                    opacity: 1
                }), TweenLite.to(this.ui("storySection").find(".intro .overlay"), 1, {
                    delay: .6,
                    opacity: .6
                })), TweenLite.to(this.ui("storySection").eq(a).find(".fallBackImage"), 40, {
                    delay: 3,
                    scale: 1.3
                })
            }
        },
        _touchOnLeaveSection: function(a) {
            if (a >= 0) {
                var b = {
                    duration: .6,
                    linkDelay: 0,
                    overlayDelay: 0,
                    textDelay: 0
                };
                0 !== a ? (this._closeTextAnimation(this.ui("storySection").eq(a), b), TweenLite.to(this.ui("storySection").eq(a).find(".introWrapper"), 1, {
                    opacity: 0
                })) : (TweenLite.to(this.ui("storySection").eq(a).find(".introWrapper"), 2, {
                    opacity: 0
                }), TweenLite.to(this.ui("storySection").find(".overlay"), .6, {
                    opacity: 0
                })), TweenLite.to(this.ui("storySection").eq(a).find(".fallBackImage"), 15, {
                    scale: 1
                })
            }
        },
        _initScene: function() {
            var a = this;
            this._enableSection(a.ui("sectionOne"));
            var b = this._generateMainTimeLine();
            a.scrollScene = new ScrollMagic.Scene({
                triggerElement: a.ui("scrollWrapper").get(0),
                triggerHook: 0
            }).setPin(".scrollWrapper").duration(a._getSectionDuration(a.scrollSceneModifier)).on("enter", function(b) {
                a.ui("intro").addClass("loaded"), a._initAudio(), "REVERSE" === b.scrollDirection ? (a._enableSection(a.ui("sectionThree")), a.activeSection.tween = a.sectionThreeSceneTween) : (a._enableSection(a.ui("sectionOne")), a.activeSection.tween = a.sectionOneSceneTween), a._toggleAtmosphericAudio(!0)
            }).on("progress", function(b) {
                b.progress >= .4 && a._initZoomImages(a.ui("sectionTwo").find(a.stateContainers[a.currentState]))
            }).on("leave", function() {
                a._toggleAtmosphericAudio(!1)
            }).setTween(b).addTo(a.scrollController)
        },
        _generateMainTimeLine: function() {
            return (new TimelineLite).to(this.ui("intro").get(0), 4, {
                opacity: 0,
                delay: .4,
                ease: Cubic.easeInOut
            }).add(this.sectionOneSceneTween).add(this.sectionTwoSceneTween, "-=14").add(this.sectionThreeSceneTween, "-=11")
        },
        _sectionOneTween: function() {
            var a = this,
                b = a.ui("sectionOne").find(a.stateContainers[a.currentState]);
            this._initZoomImages(b);
            var c = {
                    duration: 7,
                    linkDelay: 0,
                    overlayDelay: 2,
                    promptDelay: 0,
                    textDelay: 4
                },
                d = {
                    duration: 14,
                    linkDelay: 13,
                    overlayDelay: 9,
                    textDelay: 6,
                    promptDelay: 16
                },
                e = this._openTextAnimation(a.ui("sectionOne"), d),
                f = this._closeTextAnimation(a.ui("sectionOne"), c),
                g = {
                    partOne: {
                        scale: 2.3,
                        xPercent: 11,
                        yPercent: "landscape" === site.utils.getDeviceOrientation() ? -101 : -99,
                        ease: Cubic.easeInOut
                    }
                },
                h = {
                    partOne: {
                        xPercent: 25,
                        yPercent: "landscape" === site.utils.getDeviceOrientation() ? -34.5 : -10,
                        scale: "landscape" === site.utils.getDeviceOrientation() ? .63 : .84,
                        ease: Cubic.easeInOut,
                        onStart: function() {
                            a.ui("intro").removeClass("loaded"), a.activeSection.tween = a.sectionOneSceneTween, a._initZoomImages(a.ui("sectionTwo").find(a.stateContainers[a.currentState]))
                        }
                    },
                    partTwo: {
                        xPercent: 31,
                        yPercent: -30,
                        scale: .6,
                        ease: Cubic.easeInOut,
                        opacity: 0,
                        onReverseComplete: function() {
                            a._enableSection(a.ui("sectionOne")), a.activeSection.tween = a.sectionOneSceneTween
                        }
                    }
                };
            site.utils.isBreakpointMedium() && (h.partOne.scale = .9, h.partOne.yPercent = -26), a.sectionOneSceneTween = (new TimelineLite).fromTo(".storySectionOne .imageContainer.stateEnabled", 14, g.partOne, h.partOne).addLabel("partOne").add(e, "partOne-=8").addLabel("partTwo").add(f, a.closeTextInsertionPoint).to(".storySectionOne .imageContainer.stateEnabled", 16, h.partTwo)
        },
        _sectionTwoTween: function() {
            var a = this,
                b = (a.ui("sectionTwo").find(this.stateContainers[this.currentState]), a.ui("sectionTwo").get(0)),
                c = {
                    duration: 7,
                    linkDelay: 0,
                    promptDelay: 0,
                    overlayDelay: 2,
                    textDelay: 4
                },
                d = {
                    duration: 14,
                    linkDelay: 15,
                    overlayDelay: 12,
                    textDelay: 9,
                    promptDelay: 16
                },
                e = this._openTextAnimation(a.ui("sectionTwo"), d),
                f = this._closeTextAnimation(a.ui("sectionTwo"), c),
                g = {
                    partOne: {
                        scale: 2,
                        xPercent: 71,
                        yPercent: -41.5,
                        ease: Cubic.easeInOut
                    }
                },
                h = {
                    partOne: {
                        xPercent: 45,
                        scale: 1,
                        ease: Cubic.easeInOut,
                        onStart: function() {
                            a._enableSection(a.ui("sectionTwo")), a.activeSection.tween = a.sectionTwoSceneTween, a._initZoomImages(a.ui("sectionThree").find(a.stateContainers[a.currentState]))
                        }
                    },
                    partTwo: {
                        xPercent: 25,
                        yPercent: -39,
                        scale: .6,
                        ease: Cubic.easeInOut,
                        onReverseComplete: function() {
                            a._enableSection(a.ui("sectionTwo")), a.activeSection.tween = a.sectionTwoSceneTween
                        }
                    }
                };
            site.utils.isBreakpointMedium() && (g.partOne.yPercent = -36, h.partTwo.yPercent = -28, h.partTwo.scale = .9), site.utils.isBreakpointSmall() && (g.partOne = {
                scale: 2,
                xPercent: 90,
                yPercent: -31
            }, h.partOne.xPercent = 70, h.partTwo.xPercent = 40), a.sectionTwoSceneTween = (new TimelineLite).addLabel("partOne").fromTo(".storySectionTwo .imageContainer.stateEnabled", 22, g.partOne, h.partOne).add(e, 0).addLabel("partTwo").add(f, a.closeTextInsertionPoint).to(".storySectionTwo .imageContainer.stateEnabled", 14, h.partTwo).to(b, 18, {
                opacity: 0
            }, "-=4")
        },
        _sectionThreeTween: function() {
            var a = this,
                b = (a.ui("sectionThree").find(this.stateContainers[this.currentState]), a.ui("sectionThree").get(0), {
                    duration: 4,
                    linkDelay: 0,
                    overlayDelay: 2,
                    textDelay: 4,
                    promptDelay: 0
                }),
                c = {
                    duration: 14,
                    linkDelay: 15,
                    overlayDelay: 12,
                    textDelay: 9,
                    promptDelay: 16
                },
                d = this._openTextAnimation(a.ui("sectionThree"), c),
                e = this._closeTextAnimation(a.ui("sectionThree"), b),
                f = {
                    partOne: {
                        scale: .9,
                        xPercent: 10,
                        yPercent: -40,
                        ease: Cubic.easeInOut
                    }
                },
                g = {
                    partOne: {
                        xPercent: 26.2,
                        yPercent: -36,
                        scale: .6,
                        ease: Cubic.easeInOut,
                        onStart: function() {
                            a._enableSection(a.ui("sectionThree")), a.activeSection.tween = a.sectionThreeSceneTween
                        }
                    }
                };
            site.utils.isBreakpointMedium() && (f.partOne.yPercent = -25, g.partOne.scale = .85, g.partOne.yPercent = -25), site.utils.isBreakpointSmall() && (g.partOne.xPercent = 40, g.partOne.yPercent = -27.2, g.partOne.scale = .55, "landscape" === site.utils.getDeviceOrientation() && (g.partOne.xPercent = 30)), a.sectionThreeSceneTween = (new TimelineLite).addLabel("partOne").fromTo(".storySectionThree .imageContainer.stateEnabled", 14, f.partOne, g.partOne).add(d, 0).addLabel("partTwo").add(e, a.closeTextInsertionPoint)
        },
        _enableSection: function(b) {
            this.activeSection = !1;
            var c = this.$element.find(".storySection").index(b.get(0));
            this._hasSectionBeenViewed(c) ? this.activeSection = this._stories[c] : (this.activeSection = a.extend(!0, {}, this._defaultStoryObject), this.activeSection.$element = b, this._stories[c] = this.activeSection), b.addClass("enabled")
        },
        _hasSectionBeenViewed: function(a) {
            var b = this.$element.index(a);
            return b in this._stories
        },
        _closeTextAnimation: function(a, b, c) {
            var d = {
                    topText: a.find(".quote .top .text"),
                    bottomText: a.find(".quote .bottom .text"),
                    overlay: a.find(".storyQuote .overlay"),
                    quoteLink: a.find(".quote a"),
                    quoteSource: a.find(".quote .source"),
                    bottomEle: a.find(".quote .bottom"),
                    scrollPrompt: a.find(".storyQuote .ScrollDown")
                },
                e = {
                    delay: b.textDelay,
                    top: "110%",
                    ease: Cubic.easeInOut,
                    onComplete: function() {
                        a.removeClass("textActive"), c && c()
                    }
                };
            return (new TimelineLite).insert(new TweenLite.to(d.scrollPrompt, b.duration, {
                delay: b.promptDelay,
                opacity: 0,
                onReverseComplete: function() {
                    a.addClass("textActive")
                }
            }, "+=4")).insert(new TweenLite.to(d.quoteLink, b.duration, {
                delay: b.linkDelay,
                opacity: 0
            }, "+=4")).insert(new TweenLite.to(d.quoteSource, b.duration, {
                delay: b.linkDelay,
                opacity: 0
            }, "+=4")).insert(new TweenLite.to(d.overlay, b.duration, {
                delay: b.overlayDelay,
                opacity: 0
            }, "+=4")).insert(new TweenLite.to(d.bottomText, b.duration, {
                delay: b.textDelay,
                top: "-201%",
                ease: Cubic.easeInOut
            }, "+=4")).insert(new TweenLite.to(d.topText, b.duration, e, "+=4"))
        },
        _openTextAnimation: function(a, b, c, d) {
            var e = {
                topText: a.find(".quote .top .text"),
                bottomText: a.find(".quote .bottom .text"),
                overlay: a.find(".storyQuote .overlay"),
                quoteLink: a.find(".quote a"),
                quoteSource: a.find(".quote .source"),
                bottomEle: a.find(".quote .bottom"),
                scrollPrompt: a.find(".storyQuote .ScrollDown")
            };
            b.overlayDuration = b.overlayDuration || b.duration;
            var f = (new TimelineLite).insert(new TweenLite.to(e.overlay, b.overlayDuration, {
                delay: b.overlayDelay,
                opacity: .65
            }, "-=4")).insert(new TweenLite.to(e.topText, b.duration, {
                delay: b.textDelay,
                top: "0%",
                ease: Cubic.easeInOut,
                onReverseComplete: function() {
                    a.removeClass("textActive")
                }
            }, "-=4")).insert(new TweenLite.to(e.bottomText, b.duration, {
                delay: b.textDelay,
                top: "-100%",
                ease: Cubic.easeInOut
            }, "-=4")).insert(new TweenLite.to(e.quoteSource, b.duration, {
                delay: b.linkDelay,
                opacity: .8
            }, "-=4"));
            return "touch" === this.touchState ? f.insert(new TweenLite.to(e.quoteLink, b.duration, {
                delay: b.linkDelay,
                opacity: 1,
                onStart: function() {
                    a.addClass("textActive"), c && c()
                },
                onComplete: function() {
                    d && d()
                }
            })) : f.insert(new TweenLite.to(e.quoteLink, b.duration, {
                delay: b.linkDelay,
                opacity: 1,
                onStart: function() {
                    a.addClass("textActive")
                }
            }, "-=4")).insert(new TweenLite.to(e.scrollPrompt, b.duration, {
                delay: b.promptDelay,
                opacity: 1,
                display: "block",
                onStart: function() {
                    c && c()
                },
                onComplete: function() {
                    d && d()
                }
            }, "-=4")), f
        },
        _resizeZoomImages: function(c) {
            var d = a(b).width(),
                e = a(b).height(),
                f = 0,
                g = 0,
                h = 5,
                i = 3;
            d >= e ? (f = Math.floor(d * this._imageWindowScale), g = Math.floor(f / this._imageRatio)) : (g = Math.floor(e * this._imageWindowScale), f = Math.floor(g * this._imageRatio));
            var j = a(this.stateContainers[this.currentState], this.$element);
            j.css({
                height: g,
                width: f
            }), j.each(function(b, c) {
                a(c).find(".zoomImage").each(function(b, c) {
                    var d = a(c),
                        e = (d.get(0).getContext("2d"), Math.floor(f / h)),
                        j = Math.floor(g / i);
                    d.css({
                        height: j,
                        width: e
                    });
                    var k = 0,
                        l = 0;
                    e -= 1, j -= 1, b > 4 && 9 >= b ? k = j : b > 9 && (k = 2 * j);
                    var m = b + 1;
                    switch (m) {
                        case 2:
                        case 7:
                        case 12:
                            l = e;
                            break;
                        case 3:
                        case 8:
                        case 13:
                            l = 2 * e;
                            break;
                        case 4:
                        case 9:
                        case 14:
                            l = 3 * e;
                            break;
                        case 5:
                        case 10:
                        case 15:
                            l = 4 * e
                    }
                    a(c).css({
                        top: parseFloat(k),
                        left: parseFloat(l)
                    })
                })
            })
        },
        _initZoomImages: function(b) {
            return b.hasClass("imagesEnabled") ? !0 : (b.find(".zoomImage").each(function(b, c) {
                var d = a(c),
                    e = d.get(0),
                    f = e.getContext("2d"),
                    g = new Image;
                g.src = a(c).data("img"), g.onload = function() {
                    site.utils.canvasDrawBgCover(f, g)
                }
            }), void b.addClass("imagesEnabled"))
        },
        _getSectionDuration: function(a) {
            return this._vHeight * a
        },
        _populateText: function() {
            a(".prop", this.$element).each(function(b, c) {
                var d = a(c).html();
                a(c).parent().find(".half .text").html(d)
            })
        },
        _initVideo: function() {
            var b = this;
            this._playerType === b.youtube ? a(".video .YouTubePlayer", this.$element).each(function(c) {
                b.player[c] = a(this), b.player[c].parent().addClass("youtubeWrapper").removeClass("YouTubeGalleryAsset galleryItem videoItem"), b.player[c].YouTubePlayer(), b.player[c].on("videoEnded", a.proxy(b._playerOnEnded, b)), b.player[c].on("onPlay", a.proxy(b._playerOnPlay, b))
            }) : a(".video .VideoPlayer", this.$element).each(function(c) {
                b.player[c] = a(this), b.player[c].VideoPlayer({
                    autoplay: !1,
                    customPauseOtherPlayers: !1,
                    loop: !1
                }), b.player[c].on("videoEnded", a.proxy(b._playerOnEnded, b)), b.player[c].on("onPlay", a.proxy(b._playerOnPlay, b))
            })
        },
        _resizePlayer: function() {
            var b = this.activeSection.$element,
                c = a(".storyVideo .playerWrapper", b),
                d = a(".storyVideo .video", b),
                e = this._$window.height() - c.height(),
                f = e > 0 ? e / 2 : 0;
            d.css({
                "margin-top": f
            })
        },
        _playerOnEnded: function() {
            return "touch" === this.touchState ? void this._touchVideoCloseEvent() : (site.utils.enableScroll(), void this._curtainClose())
        },
        _playerOnPlay: function() {
            this._resizePlayer()
        },
        _playVideo: function() {
            var a = this.activeSection.$element.index();
            return this._playerType === this.youtube ? void this.player[a].YouTubePlayer("play") : void(this.player[a].VideoPlayer("isInitiated") ? this.player[a].VideoPlayer("play") : this.player[a].VideoPlayer("initVideo"))
        },
        _pauseVideo: function() {
            var b = this.activeSection.$element,
                c = a(".storyVideo ." + this._playerType, b);
            c[this._playerType]("pause")
        },
        _killPlayerVolume: function() {
            var a = this.activeSection.$element.index();
            this.player[a][this._playerType]("setVolume", 0)
        },
        _fadePlayerVolume: function(b, c) {
            if (this.fadeVideoAudio !== !1) {
                var d = this,
                    e = this.activeSection.$element,
                    f = a(".storyVideo ." + d._playerType, e),
                    g = 100,
                    h = b ? 0 : g,
                    i = b ? 100 : 0,
                    j = {
                        vol: g
                    };
                d.fadeVideoAudio = !1, TweenLite.fromTo(j, 1.5, {
                    vol: h
                }, {
                    vol: i,
                    ease: Power2.easeIn,
                    onUpdate: function() {
                        f[d._playerType]("setVolume", j.vol)
                    },
                    onComplete: function() {
                        b || (f[d._playerType]("pause"), f[d._playerType]("setVolume", g), d._toggleAtmosphericAudio(!0), c && c())
                    }
                })
            }
        },
        _curtainOpenEvent: function(b) {
            var c = this;
            if (!(c.activeSection.$element.find(".clipFix").length > 0)) {
                var d = a(".storyContent", c.activeSection.$element),
                    e = c.activeSection.$element,
                    f = a(c.stateContainers[c.currentState], e),
                    g = {
                        overlay: ".overlay",
                        quoteLink: ".quote a",
                        quoteSource: ".quote .source",
                        storyVideo: ".storyVideo",
                        video: ".storyVideo .video",
                        content: ".storyContent",
                        curtainLeft: ".curtainLeft",
                        curtainRight: ".curtainRight",
                        topText: ".quote .top .text",
                        bottomText: ".quote .bottom .text",
                        iframe: ".storyVideo iframe"
                    };
                f.clone().insertAfter(f).addClass("curtainLeft").removeClass("imagesEnabled"), f.clone().insertAfter(f).addClass("curtainRight").removeClass("imagesEnabled"), c._initZoomImages(a(g.curtainLeft, e)), c._initZoomImages(a(g.curtainRight, e));
                a(g.curtainLeft, e).wrap('<div class="clipFix clipFixLeft"></div>').parent(), a(g.curtainRight, e).addClass("curtainRight").wrap('<div class="clipFix clipFixRight"></div>').parent();
                c.fadeVideoAudio = !0, c._killPlayerVolume(), c._playVideo(), this._fadePlayerVolume(!0), c._toggleAtmosphericAudio(!1);
                var h = {
                        duration: 1,
                        linkDelay: .5,
                        overlayDelay: .5,
                        textDelay: .2
                    },
                    i = this._closeTextAnimation(e, h);
                (new TimelineLite).add(i, 0).insert(new TweenLite.to(a(g.curtainLeft, e).parent(), 1, {
                    delay: 2,
                    xPercent: "-120%",
                    ease: Cubic.easeInOut,
                    onStart: function() {
                        e.find(g.video).addClass("active"), e.addClass("videoActive"), c.$element.addClass("videoActive"), f.hide()
                    },
                    onComplete: function() {
                        d.hide(), c._lockScroll(!0)
                    }
                }, "-=4")).insert(new TweenLite.to(a(g.curtainRight, e).parent(), 1, {
                    delay: 2,
                    xPercent: "120%",
                    ease: Cubic.easeInOut
                }, "-=4"))
            }
        },
        _touchVideoOpenEvent: function() {
            var a = this,
                b = {
                    duration: 1,
                    linkDelay: .5,
                    overlayDelay: .5,
                    textDelay: .2
                },
                c = a.activeSection.$element.find(".storyVideo .video");
            site.utils.isIos === !1 && a._playVideo();
            var d = this._closeTextAnimation(this.activeSection.$element, b);
            (new TimelineLite).add(d, 0).call(function() {
                a.activeSection.$element.find(".storyContent").hide(), a.activeSection.$element.addClass("videoActive"), a.$element.addClass("videoActive"), a._lockScroll(!0)
            });
            c.addClass("active"), this._resizePlayer(), this._touchRemoveSwipeHandlers()
        },
        _curtainClose: function() {
            var b = this,
                c = b.activeSection.$element.find(b.stateContainers[b.currentState]),
                d = {
                    storyVideo: ".storyVideo",
                    youtubePlayer: ".storyVideo .video div",
                    curtainLeft: ".curtainLeft",
                    curtainRight: ".curtainRight"
                };
            b.activeSection.tween.gotoAndPlay("partTwo"), b.fadeVideoAudio = !0, b._fadePlayerVolume(!1);
            (new TimelineLite).insert(new TweenLite.to(a(d.curtainLeft, this.activeSection.$element).parent(), 1, {
                delay: .5,
                xPercent: "0",
                ease: Cubic.easeInOut
            }, "-=4")).insert(new TweenLite.to(a(d.curtainRight, this.activeSection.$element).parent(), 1, {
                delay: .5,
                xPercent: "0",
                ease: Cubic.easeInOut,
                onComplete: function() {
                    c.show(), a(".storyContent", b.activeSection.$element).show(), b.activeSection.$element.removeClass("videoActive"), b.$element.removeClass("videoActive"), a(d.curtainLeft, b.activeSection.$element).parent().remove(), a(d.curtainRight, b.activeSection.$element).parent().remove();
                    var e = {
                            duration: 1,
                            linkDelay: 0,
                            overlayDelay: .5,
                            textDelay: 0
                        },
                        f = function() {
                            b.scrollController.update(!0), b._lockScroll(!1)
                        };
                    b._openTextAnimation(b.activeSection.$element, e, !1, f)
                }
            }, "-=4"))
        },
        _touchVideoCloseEvent: function() {
            var a = this;
            a._pauseVideo(), a._touchAddSwipeHandlers(), a.activeSection.$element.removeClass("videoActive"), a.$element.removeClass("videoActive"), a._lockScroll(!1), a.activeSection.$element.find(".storyContent").show();
            var b = {
                duration: 1,
                linkDelay: .5,
                overlayDelay: .5,
                textDelay: 0
            };
            a._openTextAnimation(a.activeSection.$element, b)
        },
        _lockScroll: function(a) {
            a ? (this._$html.addClass("noScroll forceScrollBar"), "touch" === this.touchState && this._$header.hide(), this._resizePlayer()) : (this._$html.removeClass("noScroll forceScrollBar"), "touch" === this.touchState ? (this._$header.show(), this._$body.scrollTop(this.activeSection.$element.offset().top)) : (this.scrollController.update(!0), this.scrollScene.update(!0)))
        },
        _initAudio: function() {
            var c = this,
                d = a(".intro .introWrapper audio");
            return d.length < 1 ? void(c.audio = null) : void(site.utils.isMobileDevice() || null === c.audio && (c.audio = d.mediaelementplayer({
                startVolume: .6,
                loop: !0,
                pauseOtherPlayers: !1,
                features: ["playpause", "progress", "current", "duration", "tracks", "volume"]
            }), a(b).trigger("VideoPlayerPause", "null"), c._toggleAtmosphericAudio(!0)))
        },
        _toggleAtmosphericAudio: function(a) {
            var b = this;
            null === this.audio || site.utils.isMobileDevice() || (this.audioMuted || a === !1 ? TweenLite.fromTo(this.audio[0].player, 1, {
                setVolume: .6
            }, {
                setVolume: 0,
                ease: Power2.easeIn,
                onComplete: function() {
                    b.audio[0].player.pause()
                }
            }) : (this.audio[0].player.play(), TweenLite.fromTo(this.audio[0].player, 1, {
                setVolume: 0
            }, {
                setVolume: .6,
                ease: Power2.easeIn
            })))
        },
        _fadeVideoAudio: function(a) {
            a ? TweenLite.fromTo(this.audio.player, 1, {
                setVolume: 1
            }, {
                setVolume: 0,
                ease: Power2.easeIn,
                onComplete: this._pauseAudio.bind(this, !0)
            }) : TweenLite.fromTo(this.audio.player, 1, {
                setVolume: this.audio.player.getVolume()
            }, {
                setVolume: 1,
                ease: Power2.easeIn,
                onComplete: this._pauseAudio.bind(this, !1)
            })
        },
        _pauseAudio: function(a) {
            a ? this.audio.player.pause() : this.audio.player.play()
        },
        _initResize: function() {
            var c = this;
            a(b).resize(function() {
                c._vHeight = b.innerHeight
            }), a(b).smartresize(function() {
                return c._resizePlayer(), "notouch" === c.touchState ? (c.$element.hasClass("videoActive") === !1 && c._resizeZoomImages(), c.scrollScene.duration(c._getSectionDuration(c.scrollSceneModifier)), c.scrollController.update(), void c.scrollScene.refresh()) : void c._sectionSizeCalc()
            })
        },
        _initEvents: function() {
            var b = this;
            this.ui("scrollPrompt").unbind("click"), a(".quoteCTA", this.$element).on("click tap", function(c) {
                return c.preventDefault(), "touch" === b.touchState ? void b._touchVideoOpenEvent() : (site.utils.disableScroll(), void b._curtainOpenEvent(a(this)))
            }), a(".ytClose", this.$element).on("click tap", function(a) {
                return a.preventDefault(), "touch" === b.touchState ? void b._touchVideoCloseEvent() : (site.utils.enableScroll(), void b._curtainClose())
            }), this._$window.on("HeroCarousel:mute", function(a, c) {
                b.audioMuted = c
            }), b.ui("scrollPrompt").on("click", function(c) {
                if (c.preventDefault(), "touch" !== b.touchState) {
                    var d = b._getSectionDuration(b._sectionDurationPosition.sceneTwo),
                        e = a(this),
                        f = 3700;
                    1 === e.parents(".intro").length && (d = b._getSectionDuration(b._sectionDurationPosition.sceneOne)), 1 === e.parents(".storySectionTwo").length && (d = b._getSectionDuration(b._sectionDurationPosition.sceneThree), f = 5500), 1 === e.parents(".storySectionThree").length && (d = b.$element.next().offset().top), b.scrollController.scrollTo(function(a) {
                        site.utils.scrollTo(a, f)
                    }), b.scrollController.scrollTo(d)
                }
            })
        },
        _setCurrentState: function() {
            var a = this.currentState;
            this.currentState = site.utils.isBreakpointMedium() || site.utils.isBreakpointSmall() ? "mobile" : "desktop", this.currentState !== a && this.activeSection !== !1 && this._initZoomImages(this.activeSection.$element.find(this.stateContainers[this.currentState]))
        },
        _setTouchState: function() {
            this.touchState = this._$html.hasClass("touchCapability") ? "touch" : "notouch"
        },
        _checkVhSupport: function() {
            return this._$html.hasClass("no-cssvhunit") || null !== navigator.userAgent.match(/(iPad|iPhone|iPod touch);.*CPU.*OS 7_\d/i)
        },
        _sectionSizeCalc: function() {
            if (this.noVhSupport) {
                var a = site.utils.getViewportSize().height;
                return void this.ui("storySection").height(a)
            }
        }
    };
    jQuery.createComponent("StoryScroller", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        _$currentTab: null,
        _group: "",
        init: function() {
            var c = this;
            this.$element.css({
                display: "table"
            }), this._group = this.$element.attr("data-group"), this._activateTab(a("a", a("li", this.$element).first()), !1), a("li a", this.$element).on("click tap", function(b) {
                return b.preventDefault(), a(this).parent().hasClass("active") ? !1 : void c._activateTab(this, !0)
            }), c._addKeyboardNavigation(), a(b).smartresize(function() {
                c._equalHeights()
            }), c._equalHeights()
        },
        _activateTab: function(c, d) {
            var e = this,
                f = a(c),
                g = f.parent();
            if (null === e._$currentTab || e._$currentTab[0] !== g[0]) {
                e._$currentTab = g, a("li", e.$element).removeClass("active"), g.addClass("active");
                var h = f.attr("href").substring(1),
                    i = a('.tabContent[data-group="' + e._group + '"][data-tabid="' + h + '"]'),
                    j = a('.tabContent[data-group="' + e._group + '"]:visible'),
                    k = d === !0 ? 400 : 0;
                j.stop().fadeTo(k, 0, function() {
                    var c = a(this).parent(".ComparisonSlider");
                    c.css("min-height", a(this).height()), a(this).hide().removeClass("visibleTab"), i.stop().show().fadeTo(k, 1).addClass("visibleTab"), a(b).trigger("resize"), e.$element.trigger("tabAnimationComplete"), i.hasClass("withSummary") ? e.$element.addClass("withSummary") : e.$element.removeClass("withSummary"), setTimeout(function() {
                        c.css("min-height", "inherit")
                    }, 1e3)
                })
            }
            this.$element.trigger("changeTabs")
        },
        _destroy: function() {
            a("li a", this.$element).off("click tap")
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = b.$element.find("> li > a");
            c.keydown(function(b) {
                39 === b.keyCode ? a(this).parent("li").next("li").find("a").focus() : 37 === b.keyCode && a(this).parent("li").prev("li").find("a").focus()
            })
        },
        _equalHeights: function() {
            var b = this,
                c = [];
            a("li > a", b.$element).css({
                "padding-top": 0,
                "padding-bottom": 0,
                "margin-top": "12px",
                "margin-bottom": "12px"
            }).each(function() {
                c.push((a(this).parent().height() - a(this).height()) / 2)
            }).each(function(b) {
                a(this).removeAttr("style").css({
                    "padding-top": c[b],
                    "padding-bottom": c[b] - 1
                })
            })
        }
    };
    jQuery.createComponent("TabFilter", e)
}(jQuery, window, document),
function(a, b, c) {
    var d = {
        _defaults: {},
        _linkURL: null,
        init: function() {
            this.setupButtonBehaviour(), this.setupListener()
        },
        fireEvent: function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                d = new CustomEvent(b, {
                    payload: c
                });
            a.dispatchEvent(d)
        },
        setupListener: function() {
            var a = this,
                b = a.$element.find("span");
            this.$element.off("click.TargetLinks").on("click.TargetLinks", {
                that: this
            }, a.processLinkType), site.utils.isPageInXPMFrame() && b.on("click", function(a) {
                a.preventDefault(), a.stopPropogation()
            })
        },
        setupButtonBehaviour: function() {
            var a = this.element.getAttribute("data-type");
            a && "video" === a && [].concat(_toConsumableArray(this.element.querySelectorAll(".mediaOverlayVideo"))).length && this.element.parentNode.classList.add("mediaOverlay__wrapper");
            var b = this.element.getAttribute("data-target");
            if (b && "overlay" === b) {
                this.element.setAttribute("role", "button");
                var c = site.utils.aria.KeyCode.SPACE;
                this.element.addEventListener("keydown", function(a) {
                    a.keyCode === c && (a.preventDefault(), a.target.click())
                })
            }
        },
        processLinkType: function(c) {
            var d = c ? c.data.that : this;
            if (d._checkDragging(c)) {
                var e = a(this),
                    f = e.attr("data-target");
                if (site.utils.isPageInXPMFrame() && e.hasClass("primaryLinkWithStyle") === !1 || site.utils.isPageInXPMFrame() && a(c.target).get(0) !== e.get(0)) return void c.preventDefault();
                var g = e.attr("href");
                if (e.attr("href", g), null !== f) {
                    switch (f) {
                        case "overlay":
                            c.preventDefault(), d._openLinkInOverlay(g);
                            break;
                        case "new":
                            c.preventDefault(), b.open(g);
                            break;
                        case "fullscreen":
                            c.preventDefault(), d._initFullscreen(g, c)
                    }
                    a(b).trigger("VideoPlayerPause", {
                        videoid: null
                    })
                }
            }
        },
        _openLinkInOverlay: function(d) {
            var e = this.$element.attr("data-aria-title"),
                f = this.$element.attr("data-close-button-text");
            if (site.utils.isBreakpointSmall() || site.utils.isMobileDevice()) return void b.open(d);
            var g = d;
            g += g.indexOf("?") > -1 ? "&cnst_bnr=1" : "?cnst_bnr=1", a.magnificPopup.open({
                closeMarkup: "",
                closeOnBgClick: !0,
                fixedContentPos: !0,
                alignTop: !0,
                focus: ".mfp-close",
                type: "iframe",
                items: {
                    src: g
                },
                callbacks: {
                    open: function() {
                        a(".mfp-iframe").wrap('<div class="mfp-iframe-alt-wrap"></div>'), a('<button type="button" class="mfp-close alt"></button>').insertBefore(".mfp-iframe"), a(".mfp-bg").addClass("mfp-bg--whitened"), a(".mfp-iframe").prop("title", e).removeAttr("frameborder"), a(".mfp-close").attr("aria-label", f)
                    }
                }
            })
        },
        _checkDragging: function(b) {
            var c = !1;
            return a(b.target).parents(".SameSizeCarousel").length > 0 ? a(b.target).parents(".SameSizeCarousel").SameSizeCarousel("getDragging") ? b.preventDefault() : c = !0 : a(b.target).parents(".DualFrameCarousel").length > 0 && a(b.target).parents(".DualFrameCarousel").DualFrameCarousel("getDragging") ? b.preventDefault() : c = !0, c
        },
        _initFullscreen: function(d, e) {
            var f = a("html"),
                g = b;
            a(g).width() <= site.breakpoints.medium || f.hasClass("lt-ie10") || f.hasClass("touchCapability") ? (a(e.currentTarget).data("hash") && (g.location.hash = a(e.currentTarget).data("hash")), site.utils.cookieManager.createCookie("JLR_previousURL", c.URL), g.location = d) : this._openFullscreen(d)
        },
        _openFullscreen: function(d) {
            var e = this,
                f = c.querySelector("meta[name='build_no']").content;
            a.getScript("/resources/public/js/global/components/Fullscreen.js?v=" + f, function() {
                var f = b.Fullscreen["default"];
                a(b).trigger("fullscreenOpened"), e.fireEvent(b, "fullscreenOpened"), a.magnificPopup.open({
                    closeOnBgClick: !1,
                    fixedContentPos: !0,
                    alignTop: !0,
                    type: "ajax",
                    items: {
                        src: d
                    },
                    callbacks: {
                        beforeClose: function() {
                            a(b).off("FilmStripToggle"), a(b).trigger("fullscreenClosed"), e.fireEvent(b, "FilmStripToggle"), e.fireEvent(b, "fullscreenClosed")
                        },
                        parseAjax: function(b) {
                            b.data = a(b.data).find(".Fullscreen")
                        },
                        ajaxContentAdded: function() {
                            var b = c.querySelector(".Fullscreen");
                            new f(b);
                            var d = a(b).find(".mfp-close");
                            d.on("click", function(a) {
                                a.preventDefault()
                            }), d.attr("role", "button").find("span").text(d.data("close-button-label"))
                        }
                    }
                })
            })
        }
    };
    jQuery.createComponent("TargetLinks", d)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _defaults: {},
        uiSelectors: {
            item: ".toggleLinksItem",
            link: ".toggleLinksLink"
        },
        _$toggleContent: null,
        _$toggleContentItems: null,
        _$window: a(b),
        init: function() {
            return this._$toggleContent = a("#" + this.$element.data("toggle-content")), this._$toggleContentItems = this._$toggleContent.length ? this._$toggleContent.find(".toggleContentItem") : null, this.ui("item").length < 2 ? void this.$element.remove() : (this.$element.addClass("ToggleLinksVisible"), void(this._$toggleContent.length && this._$toggleContentItems.length && (this.ui("link").on("click", this._linkClick.bind(this)), this._$toggleContent.addClass("toggleLinksActive"), this.ui("link").eq(0).trigger("click", [!0]))))
        },
        _linkClick: function(b, c) {
            var d = this,
                e = c || !1,
                f = a(b.currentTarget),
                g = a(f.attr("href")),
                h = g.index();
            b.preventDefault(), this.ui("item").removeClass("active"), f.parent(".toggleLinksItem").addClass("active"), site.utils.isBreakpointSmall() && !e ? h > 0 ? a(this.$element).animate({
                scrollLeft: this.$element.scrollLeft() + f.parent("li").position().left - (this.$element.width() - f.parent("li").width() + parseInt(this.$element.css("padding-left"), 10) + parseInt(this.$element.css("padding-right"), 10)) / 2
            }, function() {
                d._scrollAndFadeContent(h)
            }) : a(this.$element).animate({
                scrollLeft: site.rtl ? this.$element.width() : 0
            }, function() {
                d._scrollAndFadeContent(h)
            }) : this._fadeInOutContentItem(h)
        },
        _scrollAndFadeContent: function(a) {
            this.$element.parents(".ContentBlocksContainer").data("toggle-links") && site.utils.isBreakpointSmall() && site.utils.scrollTo(this.$element.parents(".ContentBlocksContainer").offset().top, 600), this._fadeInOutContentItem(a)
        },
        _fadeInOutContentItem: function(a) {
            var b = this._$toggleContentItems.filter(".active"),
                c = this._$toggleContentItems.eq(a);
            b.length ? (b.stop(), b.fadeOut(400, this._fadeInContentItem.bind(this, c))) : this._fadeInContentItem(c)
        },
        _fadeInContentItem: function(a) {
            var b = this,
                c = !1;
            a.trigger("toggleLinks:toggleContentItem:fadeInStart"), a.stop().fadeIn({
                duration: 400,
                step: function(a) {
                    a && a > .5 && 1 > a && !c && (c = !0, b.$element.trigger("toggleLinks:contentChanging"))
                },
                complete: function() {
                    b._$toggleContentItems.removeClass("active"), a.addClass("active"), b.$element.trigger("toggleLinks:changeContent"), c || b.$element.trigger("toggleLinks:contentChanging")
                }
            })
        },
        _destroy: function() {}
    };
    jQuery.createComponent("ToggleLinks", c)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        uiSelectors: {
            headerBlock: ".headerBlock",
            headerBlockHeading: ".headerBlock .heading",
            toggleLinks: ".ToggleLinks",
            contentCards: ".contentCards"
        },
        _positions: {
            componentBottom: null,
            componentTop: null,
            siteHeaderHeight: null,
            componentHeaderY: null
        },
        _siteHeaderCssChanged: !1,
        _$window: a(b),
        _$header: a("#header"),
        _scrollTopStored: 0,
        _siteHeaderVisible: "visible",
        _componentHeaderFixed: !1,
        _tweenComponentHeaderFadeTitle: null,
        _tweenComponentHeaderSlideUp: null,
        _tweenComponentHeaderSlideDown: null,
        _tweenSiteHeaderSlideUp: null,
        _tweenSiteHeaderSlideDown: null,
        _componentTopPadding: 40,
        _headerBlockBottomPadding: 30,
        _events: {
            resize: null,
            toggleLinksChangeContent: null,
            scroll: null
        },
        init: function() {
            this._events.resize = this._setPositions.bind(this), this._events.toggleLinksChangeContent = this._setPositions.bind(this), this._events.scroll = this._onScroll.bind(this), this._attachDetachEvents(!0), this._setPositions()
        },
        _attachDetachEvents: function(a) {
            a ? (this._$window.on("resize", this._events.resize), this.ui("toggleLinks").on("toggleLinks:changeContent", this._events.toggleLinksChangeContent),
                this.ui("contentCards").eq(0).waitForImages(this._setPositions.bind(this, !0))) : (this._$window.off("resize", this._events.resize), this.ui("toggleLinks").off("toggleLinks:changeContent", this._events.toggleLinksChangeContent))
        },
        _onScroll: function() {
            b.requestAnimationFrame(function() {
                var a = this._$window.scrollTop(),
                    b = (Math.abs(a - this._scrollTopStored), a > this._scrollTopStored ? "forwards" : "backwards");
                this._scrollTopStored = a, this._adjustSiteHeader(a, b), this._adjustComponentHeader(a)
            }.bind(this))
        },
        _setPositions: function() {
            var a = this.$element.offset().top,
                b = 0,
                c = this._getFixedPosition(),
                d = this._componentHeaderFixed,
                e = this._positions.siteHeaderHeight ? this._positions.siteHeaderHeight : site.utils.getStickyNavHeight(),
                f = null !== f ? f : 0;
            d ? b = this.ui("headerBlock").height() : (this._fixUnfixComponentHeader(!0, null, !1), b = this.ui("headerBlock").height(), this._fixUnfixComponentHeader(!1, null, !1)), this._positions = {
                componentBottom: a + this.$element.outerHeight(),
                componentTop: a,
                componentHeaderBlockHeight: this.ui("headerBlock").outerHeight() + this._componentTopPadding,
                componentHeaderBlockFixedHeight: b,
                componentHeaderY: f,
                fixPosition: c,
                siteHeaderHeight: e
            }
        },
        _getFixedPosition: function() {
            var a = this._componentHeaderFixed;
            a && this._fixUnfixComponentHeader(!1, null, !1);
            var b = this.ui("toggleLinks").offset().top + this.ui("toggleLinks").height();
            return a && this._fixUnfixComponentHeader(!0, null, !1), b
        },
        _adjustSiteHeader: function(a, b) {
            var c = this._positions.componentTop,
                d = this._positions.componentBottom,
                e = this._positions.siteHeaderHeight,
                f = a + e,
                g = f - c,
                h = f > c,
                i = a > d;
            site.utils.isBreakpointSmall() && (h = f > c + (this.ui("headerBlock").height() - this.ui("toggleLinks").height() + parseInt(this.ui("toggleLinks").css("margin-top"), 10)), g = f - c + (this.ui("headerBlock").height() - this.ui("toggleLinks").height()), i = a > d + 20), "forwards" === b && h && !i ? e > g ? (this._moveSiteHeader(-g), this._siteHeaderVisible = "partial") : (this._moveSiteHeader(-e), this._siteHeaderVisible = "hidden") : (this._moveSiteHeader(0), this._siteHeaderVisible = "visible")
        },
        _adjustComponentHeader: function(a) {
            var b, c = this._positions.siteHeaderHeight,
                d = this._positions.componentBottom,
                e = this._positions.fixPosition,
                f = this._positions.componentHeaderBlockFixedHeight,
                g = Math.abs(a - d),
                h = -(f - g),
                i = a > e,
                j = a > d;
            site.utils.isBreakpointSmall() && (i = a > e - this._componentTopPadding - this._headerBlockBottomPadding - c, b = a > e - this._componentTopPadding - this._headerBlockBottomPadding - c - parseInt(this.ui("headerBlock").css("margin-bottom"), 10), j = a > d - 20), i && !j ? f > g ? this._fixUnfixComponentHeader(!0, h, !1) : this._fixUnfixComponentHeader(!0, 0, !0) : b ? this._fixUnfixComponentHeader(!1, 0, !1) : this._fixUnfixComponentHeader(!1, 0, !0)
        },
        _moveSiteHeader: function(a) {
            if (!site.utils.mobileAccordionsActivated() || !site.utils.isBreakpointSmall()) {
                var b = this._positions.siteHeaderHeight,
                    c = "visible" === this._siteHeaderVisible && !a,
                    d = "hidden" === this._siteHeaderVisible && a === -b,
                    e = "visible" === this._siteHeaderVisible && a === -b,
                    f = "hidden" === this._siteHeaderVisible && 0 === a,
                    g = e ? "_tweenSiteHeaderSlideUp" : "_tweenSiteHeaderSlideDown";
                c || d || (e || f ? this._tweenY(g, this._$header, .4, null, a) : TweenLite.set(this._$header, {
                    css: {
                        y: a
                    }
                }))
            }
        },
        _fixUnfixComponentHeader: function(a, b, c) {
            var d = this._positions.componentHeaderY,
                e = this._positions.componentHeaderBlockHeight,
                f = this._positions.componentHeaderBlockFixedHeight,
                g = this._positions.siteHeaderHeight,
                h = b === g,
                i = a && !this._componentHeaderFixed && 0 === b,
                j = d === g && 0 === b,
                k = h || i,
                l = i ? -f : null;
            site.utils.mobileAccordionsActivated() && site.utils.isBreakpointSmall() || (a && !this._componentHeaderFixed ? (this.$element.css("padding-top", e + this._headerBlockBottomPadding).addClass("headerFixed"), c && this._fadeComponentTitle(), this._componentHeaderFixed = !0) : !a && this._componentHeaderFixed && (this.$element.css("padding-top", "").removeClass("headerFixed"), c && this._fadeComponentTitle(), this._componentHeaderFixed = !1), null !== b && this._moveComponentHeader(l, b, j, k))
        },
        _moveComponentHeader: function(a, b, c, d) {
            if (d) {
                var e = c ? "_tweenComponentHeaderSlideUp" : "_tweenComponentHeaderSlideDown";
                this._tweenY(e, this.ui("headerBlock"), .4, a, b)
            } else c ? TweenLite.set(this.ui("headerBlock"), {
                css: {
                    y: b
                }
            }) : this._tweenComponentHeaderSlideUp || this._tweenComponentHeaderSlideDown || TweenLite.set(this.ui("headerBlock"), {
                css: {
                    y: b
                }
            });
            this._positions.componentHeaderY = b
        },
        _fadeComponentTitle: function() {
            this._tweenComponentHeaderFadeTitle || (this._tweenComponentHeaderFadeTitle = TweenLite.fromTo(this.ui("headerBlockHeading"), .4, {
                css: {
                    opacity: 0
                }
            }, {
                css: {
                    opacity: 1
                },
                onComplete: this._killTween.bind(this, "_tweenComponentHeaderFadeTitle")
            }))
        },
        _killTween: function(a) {
            this[a].kill(), this[a] = null
        },
        _tweenY: function(a, b, c, d, e) {
            null !== d ? this[a] = TweenLite.fromTo(b, c, {
                css: {
                    y: d
                }
            }, {
                css: {
                    y: e
                },
                ease: Linear.easeNone,
                onComplete: this._killTween.bind(this, a)
            }) : this[a] = TweenLite.to(b, c, {
                css: {
                    y: e
                },
                ease: Linear.easeNone,
                onComplete: this._killTween.bind(this, a)
            })
        },
        _destroy: function() {
            this._attachDetachEvents(!1), TweenLite.killTweensOf(this._$header), TweenLite.killTweensOf(this.ui("headerBlock")), this.$element.css("padding-top", "").removeClass("headerFixed")
        }
    };
    jQuery.createComponent("ToggleLinksSticky", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            var a = this.element.getAttribute("data-param-string"),
                b = c.createElement("script"),
                d = this.element.querySelector(".TripAdvisorWidget__widget"),
                e = this.element.querySelector(".TripAdvisorWidget__widget-container"),
                f = this.element.getAttribute("id").split("").filter(function(a) {
                    return /[0-9]/.test(a)
                }).join(""),
                g = this.paramStringToObj(a);
            g.uniq = f, d.setAttribute("id", d.getAttribute("id") + f), a = this.paramObjToString(g), b.src = "https://www.jscache.com/wejs?" + a, e.appendChild(b)
        },
        paramObjToString: function(a) {
            return Object.keys(a).map(function(b) {
                return b + "=" + a[b]
            }).join("&")
        },
        paramStringToObj: function(a) {
            var b = {};
            return a.split("&").forEach(function(a) {
                var c = a.split("=");
                b[c[0]] = c[1]
            }), b
        }
    };
    jQuery.createComponent("TripAdvisorWidget", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        init: function() {
            var a = this.$element.attr("data-api-key");
            b.widget = ["//valuations.netdirector.co.uk/", "valuation/source/", [a, !1, !1], {}];
            var d = c.createElement("script");
            d.type = "text/javascript", d.src = b.widget[0] + b.widget[1] + "widget.js", c.head.appendChild(d)
        }
    };
    jQuery.createComponent("UsedCarValuator", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {
            overlay: !0
        },
        _vehicleSelectorVisible: !1,
        _modelSelectorVisible: !1,
        _vehicleSelectorContentLoaded: null,
        _vehicleSelectorOverlayLoaded: !1,
        _$vehicleSelector: null,
        _$modelSelector: null,
        _$window: a(b),
        _tallestVehicle: 0,
        _tallestModel: 0,
        _windowWidth: 0,
        _ltie9: !1,
        _ltie10: !1,
        _touchEnabledDevice: "ontouchstart" in b || navigator.msMaxTouchPoints ? !0 : !1,
        _slideFromRight: !1,
        _stickyNavigationEnabled: null,
        _fadeOutOverlayDeferred: null,
        init_rtl: function() {
            this._slideFromRight = !0
        },
        init: function() {
            var c = this;
            this._windowWidth = a(b).width(), a("html").hasClass("lt-ie9") && (this._ltie9 = !0, a(b).on("closeNotificationBar", function() {
                c._onResize()
            })), a("html").hasClass("lt-ie10") && (this._ltie10 = !0), c._stickyNavigationEnabled = site.stickyNavigationEnabled && !this._ltie9, this.options.overlay === !0 ? (this.$element.on("click tap", function(a) {
                a.preventDefault(), c._onVehicleSelectorToggle()
            }), setTimeout(function() {
                c._loadVehicleSelectorHTML()
            }, 3e3)) : (this._vehicleSelectorContentLoaded = !0, this._vehicleSelectorVisible = !0, this._vehicleSelectorOverlayLoaded = !0, c._loadVehicleSelector(), c._onResize(!0)), a(b).smartresize(function() {
                c._onResize(!0)
            }), c._checkContentLinks()
        },
        _checkContentLinks: function() {
            var b = this;
            if (b._touchEnabledDevice && b._$window.width() <= site.breakpoints.small) {
                var c = a(".selectorContentLink", this._$vehicleSelector);
                a.each(c, function(b, c) {
                    var d = a(c),
                        e = d.html();
                    d.replaceWith(a('<a href="' + d.attr("data-href") + '" class="selectorContentLink TargetLinks" tabindex="-1" data-href="' + d.attr("data-href") + '" data-target="' + d.attr("data-target") + '">' + e + "</div>"))
                }), a(".TargetLinks", b.$element).TargetLinks("setupListener")
            }
        },
        _onResize: function(c) {
            var d = this,
                e = a(a(".headerWrapper").length ? ".headerWrapper" : ".dxnav-header");
            if (this._vehicleSelectorVisible === !0) {
                var f = e.offset().top - a(b).scrollTop() + e.outerHeight();
                this.options.overlay === !0 && (a("#vehicleSelectorOverlay").css({
                    top: f
                }), a(".VehicleSelector").css({
                    "padding-bottom": f
                }));
                var g = 0,
                    h = 0;
                a(".VehicleSelectorWrapper", this._$vehicleSelector).removeClass("longLinks"), jQuery.each(a(".vehicleSelectorButtons span", this._$vehicleSelector), function(b, c) {
                    h = a(c).outerHeight(), h > g && (g = h)
                }), g > 20 ? a(".VehicleSelectorWrapper", this._$vehicleSelector).addClass("longLinks") : a(".VehicleSelectorWrapper", this._$vehicleSelector).removeClass("longLinks"), this._recalculateVehicleHeights(), c === !0 && (setTimeout(function() {
                    d._onResize(!1)
                }, 50), setTimeout(function() {
                    d._onResize(!1)
                }, 100)), this._checkContentLinks()
            }
        },
        _loadVehicleSelectorHTML: function() {
            var b = this;
            null === this._vehicleSelectorContentLoaded && a.ajax({
                type: "GET",
                url: b.$element.attr("href"),
                dataType: "html"
            }).done(function(c) {
                b._vehicleSelectorContentLoaded = a(".VehicleSelector", c).html();
                var d = a(b._vehicleSelectorContentLoaded),
                    e = a("span[data-picture]", d),
                    f = [];
                a.each(e, function(c, d) {
                    var e = a(d),
                        g = a("> span", e),
                        h = null;
                    a.each(g, function(c, d) {
                        var e = a(d),
                            f = e.attr("data-media");
                        "undefined" != typeof f && (f = f.substring(12).slice(0, -3), b._windowWidth >= f && (h = e))
                    }), null !== h && f.push(h.attr("data-src"))
                }), b._preloadImages(f), b._loadVehicleSelector()
            })
        },
        _onVehicleSelectorToggle: function() {
            var c = this;
            if (c._fadeOutOverlayDeferred = a.Deferred(), this._vehicleSelectorVisible === !0) c._removeKeyboardNavigation(), a(".MainNavigation .primaryNav > ul").removeClass("activeOverlay"), this.$element.parent().removeClass("activeOverlay"), a(b).trigger("overlayClosed"), c._vehicleSelectorVisible = !1, this._modelSelectorVisible === !1 ? (c._fadeOutOverlayDeferred.done(function() {
                a("html").removeClass("withVehicleSelector").height("auto"), a(b).width() > site.breakpoints.medium && !c._stickyNavigationEnabled && site.utils.scrollTo(0)
            }), c._modelSelectorVisible = !1, c._fadeOutOverlay()) : (c._fadeOutOverlayDeferred.done(function() {
                a(b).width() > site.breakpoints.medium && !c._stickyNavigationEnabled ? site.utils.scrollTo(0, 800, function() {
                    a("html").height("auto")
                }) : a("html").height("auto"), a("html").removeClass("withVehicleSelector").height("auto"), c._$modelSelector.off("onClose"), c._$modelSelector.ModelSelector("destroy"), c._$modelSelector.html("")
            }), this._$modelSelector.transition({
                opacity: "0"
            }, 400, "ease", function() {
                c._fadeOutOverlay()
            }));
            else {
                a("html").height("auto"), null === c._vehicleSelectorContentLoaded && a.ajax({
                    type: "GET",
                    url: c.$element.attr("href"),
                    dataType: "html"
                }).done(function(b) {
                    c._vehicleSelectorContentLoaded = a(".VehicleSelector", b).html(), c._loadVehicleSelector()
                });
                var d = a(b).scrollTop();
                0 !== d && a(b).width() > site.breakpoints.medium && !c._stickyNavigationEnabled ? a("body, html").stop().animate({
                    scrollTop: 0
                }, 800, "easeOutSine", function() {
                    c._createOverlay()
                }) : c._createOverlay()
            }
        },
        _createOverlay: function() {
            var c = this,
                d = a(".headerWrapper").offset().top + a(".headerWrapper").outerHeight();
            a("html").addClass("withVehicleSelector"), a(b).trigger("resize"), c._vehicleSelectorVisible = !0, a(".MainNavigation .primaryNav > ul").addClass("activeOverlay"), c.$element.parent().addClass("activeOverlay"), a(b).trigger("overlayOpened"), c._ltie10 === !0 && a("html").height(3e3), a("body").append('<div id="vehicleSelectorOverlay" class="overlay" style="display:none; top:' + d + 'px; z-index:9"></div>'), c.options.overlay === !0 && c._fadeInOverlay(), null !== c._vehicleSelectorContentLoaded && c._loadVehicleSelector()
        },
        _fadeInOverlay: function() {
            var b = this;
            a("html").addClass("noScroll"), this._ltie9 === !0 ? a("#vehicleSelectorOverlay").fadeIn(200, function() {
                b._vehicleSelectorOverlayLoaded = !0, b._loadVehicleSelector()
            }) : a("#vehicleSelectorOverlay").css({
                opacity: "0"
            }).show().transition({
                opacity: "1"
            }, 200, "ease", function() {
                b._vehicleSelectorOverlayLoaded = !0, b._loadVehicleSelector()
            })
        },
        _fadeOutOverlay: function() {
            var b = this;
            a("html").removeClass("noScroll"), this._ltie9 === !0 ? a("#vehicleSelectorOverlay").fadeOut(400, function() {
                b._fadeOutOverlayComplete()
            }) : a("#vehicleSelectorOverlay").transition({
                opacity: "0"
            }, 400, "ease", function() {
                b._fadeOutOverlayComplete()
            })
        },
        _fadeOutOverlayComplete: function() {
            var c = this;
            c._unbindEvents(), a("#vehicleSelectorOverlay").remove(), c._vehicleSelectorVisible = !1, c._modelSelectorVisible = !1, c._fadeOutOverlayDeferred.resolve(), a(b).trigger("resize")
        },
        _loadVehicleSelector: function() {
            var c = this;
            if (this._vehicleSelectorOverlayLoaded === !0 && null !== this._vehicleSelectorContentLoaded) {
                if (this._vehicleSelectorOverlayLoaded = !1, this.options.overlay === !0) {
                    var d = a("html").hasClass("lightTheme") ? "light" : "dark";
                    a("#vehicleSelectorOverlay").html('<div class="VehicleSelector ' + d + '">' + this._vehicleSelectorContentLoaded + "</div>"), b.richsponsiveImage(), a(".headingLinear", a("#vehicleSelectorOverlay")).Headings()
                }
                this._$vehicleSelector = a(".VehicleSelector"), this._$vehicleSelector.waitForImages(function() {
                    a(b).trigger("resize"), c._onResize()
                });
                var e = a(".BazaarVoiceRating", c._$vehicleSelector);
                e.length > 0 && (c._$vehicleSelector.addClass("hasRatings"), e.BazaarVoiceRating()), a(".selectorContentLink", this._$vehicleSelector).on("click tap", function(a) {
                    c._touchEnabledDevice || a.preventDefault()
                }), this.options.overlay === !0 && (this._launchVehicleSelector(), c._addKeyboardNavigation())
            }
        },
        _recalculateVehicleHeights: function() {
            var b = 0,
                c = 0;
            a(".vehicleWrapper", this._$vehicleSelector).css("height", "auto"), jQuery.each(a(".vehicleWrapper", this._$vehicleSelector), function(d, e) {
                c = a(e).height(), c > b && (b = c)
            }), this._tallestVehicle = b, a(".vehicleWrapper", this._$vehicleSelector).height(b), this.options.overlay === !0 && 0 !== a(".VehicleSelector").length && a("html").height(a("#header").outerHeight() + a(".VehicleSelector").outerHeight())
        },
        _detectTapOnOverlay: function(b) {
            var c = b.data.that;
            (b.target === a("#vehicleSelectorOverlay")[0] || b.target === a(".VehicleSelectorWrapper", c._$vehicleSelector)[0]) && c._onVehicleSelectorToggle()
        },
        _launchVehicleSelector: function() {
            a(c).on("click tap", {
                that: this
            }, this._detectTapOnOverlay), a("#vehicleSelectorOverlay").on("click tap", function(a) {});
            var e = a(".VehicleSelectorWrapper .el", this._$vehicleSelector),
                f = e.length,
                g = 0,
                h = null;
            a(b).trigger("resize"), a(".VehicleSelectorWrapper", this._$vehicleSelector).addClass("showVehicles"), a.support.transition = function() {
                var a = c.body || c.documentElement,
                    b = a.style,
                    e = b.transition !== d || b.WebkitTransition !== d || b.MozTransition !== d || b.MsTransition !== d || b.OTransition !== d;
                return e
            }(), jQuery.support.transition || (this._ltie9 === !0 ? (e.css({
                opacity: "0",
                visibility: "visible"
            }), h = setInterval(function() {
                e.eq(g).animate({
                    opacity: 1
                }, 400), g++, g >= f && clearInterval(h)
            }, 200)) : (e.css({
                opacity: "0",
                visibility: "visible"
            }).show(), h = setInterval(function() {
                e.eq(g).transition({
                    opacity: "1"
                }, 400, "ease"), g++, g >= f && clearInterval(h)
            }, 200))), this._setupModelSelector(), a(".TargetLinks", this._$element).TargetLinks("setupListener")
        },
        _setupModelSelector: function() {
            var b = this;
            a(".selectorSlider", ".VehicleSelector:not(.inPageVehicleSelector)").append('<div class="ModelSelector dark fontSmooth clearfix"></div>'), a(".chooseModel", ".VehicleSelector:not(.inPageVehicleSelector)").on("click tap", function(c) {
                c.preventDefault(), b._openModelSelector(a(this).attr("href"))
            })
        },
        _openModelSelector: function(c) {
            var d = this;
            d._$modelSelector = a(".ModelSelector", this._$vehicleSelector), d._$modelSelector.ModelSelector({
                url: c
            }), d._$modelSelector.on("onClose", function() {
                d._closeModelSelector()
            }), d._$modelSelector.on("readyToOpen", function() {
                setTimeout(function() {
                    d._$modelSelector.off("readyToOpen"), d._modelSelectorVisible = !0;
                    var c = a(b);
                    d._windowWidth = c.width();
                    var e = a("#vehicleSelectorOverlay").scrollTop(),
                        f = "";
                    a("html").hasClass("lt-ie10") ? (f = "-100%", d._slideFromRight === !0 && (f = "100%"), a(".selectorSlider", d._$vehicleSelector).animate({
                        left: f
                    }, 700, function() {
                        a(".VehicleSelectorWrapper", this._$vehicleSelector).addClass("hideVehicles")
                    })) : (f = "-50%", d._slideFromRight === !0 && (f = "50%"), a(".VehicleSelector:not(.inPageVehicleSelector) .selectorSlider", this._$vehicleSelector).transition({
                        x: f
                    }, 700, "ease", function() {
                        a(".VehicleSelector:not(.inPageVehicleSelector) .VehicleSelectorWrapper", this._$vehicleSelector).addClass("hideVehicles")
                    })), d._windowWidth > site.breakpoints.medium && 0 !== e && a("#vehicleSelectorOverlay").stop().animate({
                        scrollTop: 0
                    }, 0)
                }, 100)
            })
        },
        _closeModelSelector: function() {
            var c = this;
            a(".VehicleSelectorWrapper", this._$vehicleSelector).removeClass("hideVehicles");
            var d = a(b);
            c._windowWidth = d.width();
            var e = a("#vehicleSelectorOverlay").scrollTop();
            d.trigger("resize"), setTimeout(function() {
                a("html").hasClass("lt-ie10") ? a(".selectorSlider", this._$vehicleSelector).animate({
                    left: "0%"
                }, 700, function() {
                    c._modelSelectorVisible = !1, c._$modelSelector.off("onClose"), c._$modelSelector.ModelSelector("destroy"), c._$modelSelector.html(""), d.trigger("resize")
                }) : a(".selectorSlider", this._$vehicleSelector).transition({
                    x: 0
                }, 700, "ease", function() {
                    c._modelSelectorVisible = !1, c._$modelSelector.off("onClose"), c._$modelSelector.ModelSelector("destroy"), c._$modelSelector.html(""), d.trigger("resize")
                }), c._windowWidth > site.breakpoints.medium && 0 !== e && a("#vehicleSelectorOverlay").stop().animate({
                    scrollTop: 0
                }, 0)
            }, 100)
        },
        _preloadImages: function(b) {
            a(b).each(function() {
                a("<img/>")[0].src = this
            })
        },
        _unbindEvents: function() {
            a(c).off("click tap", this._detectTapOnOverlay), null !== this._$modelSelector && (this._$modelSelector.off("onClose"), this._$modelSelector.off("readyToOpen"), a("#vehicleSelectorOverlay").off("click tap"))
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = b.$element,
                d = a("#vehicleSelectorOverlay .selectorButton"),
                e = a("#vehicleSelectorOverlay .selectorButton:first");
            c.keydown(function(a) {
                return 40 === a.keyCode ? (e.focus(), !1) : void 0
            }), d.keydown(function(b) {
                var d = a(this);
                if (40 === b.keyCode || 39 === b.keyCode) {
                    var f = d.next(".selectorButton");
                    return f.length > 0 ? f.focus() : d.parents(".el").next(".el").find(".selectorButton:first").focus(), !1
                }
                if (38 === b.keyCode || 37 === b.keyCode) {
                    if (!d.is(e)) {
                        var g = d.prev(".selectorButton");
                        return g.length > 0 ? g.focus() : d.parents(".el").prev(".el").find(".selectorButton:last").focus(), !1
                    }
                    c.focus()
                } else if (9 === b.keyCode) return !1
            })
        },
        _removeKeyboardNavigation: function() {
            var b = this,
                c = b.$element,
                d = a("#vehicleSelectorOverlay .selectorButton");
            c.off("keydown"), d.off("keydown")
        }
    };
    jQuery.createComponent("VehicleSelector", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _brand: null,
        init: function() {
            this._setupAjax(), this._setupAccordions(), this._setupOpenAll(), a(".DropdownNav", this.$element).css({
                position: "absolute"
            }), a(".DropdownNav > span", this.$element).css({
                display: "table"
            }), this._countDropdowns(), a(b).resize(function() {
                this._resizeOpen()
            }.bind(this))
        },
        _initDropdowns: function() {
            a(".DropdownNav", this.$element).css({
                position: "absolute"
            }), a(".DropdownNav > span", this.$element).css({
                display: "table"
            }), this._countDropdowns(), this.$element.find(".DropdownNav").DropdownNav()
        },
        _countDropdowns: function() {
            a(".yourModel", this.$element).attr("data-count", a(".contentWrapper > div", this.$element).length)
        },
        _setupOpenAll: function() {
            this.$element.on("click", ".openAll", function(a) {
                a.preventDefault(), this._countOpen() ? this._closeAll() : this._openAll()
            }.bind(this))
        },
        _countOpen: function() {
            var b = this.$element.find(".specDetails > ul > li > a"),
                c = this.$element.find(".specDetails > ul > li > a.open");
            return b.length === c.length ? (a(".openAll", this.$element).find(".close").show(), a(".openAll", this.$element).find(".open").hide(), !0) : (a(".openAll", this.$element).find(".open").show(), a(".openAll", this.$element).find(".close").hide(), !1)
        },
        _openAll: function() {
            a(".specDetails > ul > li", this.$element).each(function(b, c) {
                a(c).addClass("active");
                var d = a(c).find("> a"),
                    e = a(c).find("> div");
                d.addClass("open").removeClass("closed"), this._openAccordion(e, d), this._countOpen()
            }.bind(this))
        },
        _closeAll: function() {
            a(".specDetails > ul > li", this.$element).each(function(b, c) {
                a(c).removeClass("active");
                var d = a(c).find("> a"),
                    e = a(c).find("> div");
                d.removeClass("open").addClass("closed"), this._closeAccordion(e, d), this._countOpen()
            }.bind(this))
        },
        _resizeOpen: function() {
            a(".specDetails > ul > li.active", this.$element).each(function(b, c) {
                var d = a(c).find("> a"),
                    e = a(c).find("> div");
                this._openAccordion(e, d)
            }.bind(this))
        },
        _setupAccordions: function() {
            this.$element.on("click", ".specDetails > ul > li > a", function(c) {
                c.preventDefault();
                var d = a(c.currentTarget),
                    e = d.next();
                d.hasClass("open") ? (d.parent().removeClass("active"), d.removeClass("open").addClass("closed"), this._closeAccordion(e, d)) : (d.parent().addClass("active"), d.removeClass("closed").addClass("open"), this._openAccordion(e, d), b.innerWidth < 720 && site.utils.scrollTo(d)), this._countOpen()
            }.bind(this))
        },
        _setupAjax: function() {
            this.$element.on("click", ".DropdownNav a", function(a) {
                this.$element.find(".dataTableContainer").addClass("loading"), setTimeout(function() {
                    this._doAjax(a.currentTarget)
                }.bind(this), 500)
            }.bind(this))
        },
        _doAjax: function(b) {
            var c = b.href + "&v=2";
            console.log(c), a.ajax({
                url: c,
                success: function(b) {
                    var c = a(b).find(".modelBodyStyleWrapper"),
                        d = a(b).find(".dataTableContainer");
                    this.$element.find(".modelBodyStyleWrapper").empty().append(c.html()), this.$element.find(".dataTableContainer").empty().append(d.html()).removeClass("loading"), this._initDropdowns()
                }.bind(this),
                error: function(a) {
                    console.log(a)
                }
            })
        },
        _closeAccordion: function(b, c) {
            var e = a(b),
                f = e.data("timeout"),
                g = void 0;
            e.height(0), f !== d && clearTimeout(f), g = setTimeout(function() {
                return e.hide()
            }, 500), e.data("timeout", g), this._setA11yTitlesVisability(c, !0)
        },
        _openAccordion: function(b, c) {
            var d = a(b),
                e = 0;
            d.show(), this._setA11yTitlesVisability(c, !1), d.find("> div").each(function(b, c) {
                e += a(c).outerHeight()
            }), d.height(e)
        },
        _setA11yTitlesVisability: function(b, c) {
            var d = a(b),
                e = d.find(".a11y_open"),
                f = d.find(".a11y_close");
            c === !0 ? (e.show(), f.hide()) : (e.hide(), f.show())
        }
    };
    jQuery.createComponent("VehicleSpecificationsV2", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _player: null,
        _listen: null,
        _isAutoplay: "manual",
        _post: {},
        _debugFlag: !1,
        init: function() {
            var a = this;
            a.$element.data("autoplay") === !1 && a.$element.find("video").length < 1 ? a._onStart() : (a._setPlayer(), a._onReady()), this._debugFlag = site.utils.getUrlParameter("debug-ga")
        },
        _setProperties: function() {
            if ("autoplay" !== this._isAutoplay) {
                var a = this,
                    b = a._listen;
                (a.$element.data("autoplay") === !0 || "autoplay" === a._player.getAttribute("autoplay")) && (a._isAutoplay = "autoplay"), a._post = {
                    event: "video/VideoPlayer/" + a._isAutoplay,
                    eventLabel: b.currentSrc,
                    eventAction: 0
                }
            }
        },
        _updateProperty: function(a, b) {
            if ("autoplay" !== this._isAutoplay) {
                var c = this;
                c._post[a] = b, c._postTags()
            }
        },
        _onEvent: function() {
            var a = this,
                b = a._listen;
            b.onpause = function() {
                b.currentTime !== b.duration && a._updateProperty("eventAction", "pause")
            }, b.onplay = function() {
                a._updateProperty("eventAction", "play")
            }
        },
        _onReady: function() {
            var a = this,
                b = a._listen;
            a._setProperties(), a._onEvent(), b.duration > 0 ? a._onPlaythrough() : b.onloadeddata = function() {
                a._onPlaythrough()
            }
        },
        _onStart: function() {
            var a = this;
            a.$element.find(".mejs-play, .mediaOverlayIcon").on("click", function(b) {
                a._videoInit()
            })
        },
        _videoInit: function() {
            var a = this;
            setTimeout(function() {
                a.$element.find("video").length > 0 ? (a._setPlayer(), a._onReady(), a._updateProperty("eventAction", "play")) : a._videoInit()
            }, 1e3)
        },
        _setPlayer: function() {
            var a = this;
            a._player = a.$element.find("video")[0], a._listen = a._player.player.node
        },
        _onPlaythrough: function() {
            var b = this,
                c = b._listen,
                d = Math.floor(c.duration),
                e = [25, 50, 75, 100],
                f = [],
                g = [];
            for (var h in e) {
                var i = e[h];
                f[i] = Math.floor(d / 100 * i)
            }
            c.ontimeupdate = function() {
                var d = Math.round(c.currentTime),
                    e = a.inArray(d, f); - 1 !== e && -1 === a.inArray(e, g) && (b._updateProperty("eventAction", e + "%"), g.push(e)), c.duration === c.currentTime && (g = [])
            }, c.onseeked = function() {
                g = [];
                var a = Math.round(c.currentTime),
                    d = 0;
                for (var h in e) {
                    var i = e[h];
                    if (f[i] > a) break;
                    d = i
                }
                d > 0 && (g.push(d), b._updateProperty("eventAction", d + "%"))
            }
        },
        _postTags: function() {
            var b = this;
            this._debugFlag && console.log(a.extend({}, this._post)), dataLayer.push(b._post)
        }
    };
    jQuery.createComponent("VideoAnalytics", e)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        _defaults: {},
        _videoID: null,
        init: function() {
            var a = [location.protocol, "//", location.host, location.pathname].join("");
            this._videoID = this.$element.data("video").toString();
            var b = this._getVideoIDFromURL();
            if (b && b.toString() === this._videoID) {
                if (null !== site.utils.cookieManager.checkForCookie("JDX_VideoLauncher")) {
                    var c = site.utils.cookieManager.readCookie("JDX_VideoLauncher");
                    if (null !== c) {
                        var d = c.split(",");
                        if (d[0].toString() === this._videoID && a === d[1]) return
                    }
                }
                site.utils.cookieManager.createCookie("JDX_VideoLauncher", this._videoID + "," + a), null !== site.utils.cookieManager.checkForCookie("VideoLauncher") && this._launchVideo()
            }
        },
        _getVideoIDFromURL: function() {
            for (var a = b.location.search.substring(1), c = a.split("&"), d = 0; d < c.length; d++) {
                var e = c[d].split("=");
                if ("video" === e[0]) return e[1]
            }
            return null
        },
        _launchVideo: function() {
            a(b).width() >= site.breakpoints.medium ? b.location.href = this.$element.attr("href") : site.utils.isIOS() ? b.location.href = this.$element.attr("href") : b.open(this.$element.attr("href"), "_blank")
        }
    };
    jQuery.createComponent("VideoLauncher", e)
}(jQuery, window, document),
function(a, b, c) {
    var d = {
        _defaults: {
            autoplay: !1,
            muted: !1,
            loop: !1,
            isBackgroundVideo: !1,
            controls: ["playpause", "progress", "current", "duration", "tracks", "volume", "fullscreen"],
            clickToPlayPause: !0,
            pauseOtherPlayers: !1,
            customPauseOtherPlayers: !0,
            disableTracking: !1,
            aspectRatio: 16 / 9,
            onReady: function() {},
            onCanPlay: function() {},
            ignorePauseEvent: !1,
            iPhoneUseNativeControls: !0,
            iPadUseNativeControls: !0,
            AndroidUseNativeControls: !0
        },
        mep: null,
        _$video: null,
        _$controls: null,
        _videoLoaded: !1,
        _playWhenLoaded: !1,
        _rewindWhenLoaded: !1,
        _media: null,
        _error: !1,
        _videoType: null,
        _startLanguage: "zz",
        _captions: !1,
        _firstTimePlay: !1,
        _delayedResize: null,
        _videoId: null,
        _isFullScreen: !1,
        _direction: "ltr",
        _videoInitiated: !1,
        _onLoadStartBound: null,
        _onLoadedDataBound: null,
        _onCanPlayBound: null,
        _onPlayBound: null,
        _onPauseBound: null,
        _onEndedBound: null,
        _overlayTabindex: null,
        init_rtl: function() {
            this._direction = "rtl"
        },
        init: function() {
            var b = this;
            if (b._bindMethods(), this._getAccessibilityLabels(), b._videoId = "VideoPlayer_" + Math.floor(99999 * Math.random()), b._$video = a("video", this.$element), 0 !== b._$video.length) b._setupVideo();
            else {
                b.$element.data("autoplay") === !0 && b.initVideo();
                var c = this.$element.find(".posterImage"),
                    d = site.utils.aria.KeyCode.SPACE;
                c.on("keydown", function(a) {
                    a.keyCode === d && (a.preventDefault(), c.click())
                }), c.on("ResponsiveLinkClicked", function() {
                    b.initVideo()
                })
            }
            var e = this.$element.find(".playerWrapper .ResponsiveLink");
            e.length ? (e.addClass("mediaOverlay__wrapper"), e.attr("role", "button"), e.attr("aria-label", e.attr("aria-label") || this.labels.play)) : this.$element.find(".mediaOverlayVideo").attr("aria-label", this.labels.play), b.$element.VideoAnalytics()
        },
        _getAccessibilityLabels: function() {
            var b = a(".a11yResourceLabels");
            this.labels = {
                play: b.attr("data-a11y-video-play") || "",
                pause: b.attr("data-a11y-video-pause") || "",
                progress: b.attr("data-a11y-video-progress") || "",
                enter: b.attr("data-a11y-video-fullscreen-enter") || "",
                exit: b.attr("data-a11y-video-fullscreen-exit") || "",
                mute: b.attr("data-a11y-video-audio-disable") || "",
                unmute: b.attr("data-a11y-video-audio-enable") || ""
            }
        },
        _setAccessibilityLabels: function() {
            var a = this,
                b = function() {
                    return a.$element.find(".mejs-volume-button").hasClass("mejs-mute") ? a.labels.unmute : a.labels.mute
                };
            this.$element.find(".mejs-fullscreen-button button").attr("aria-label", this.labels.enter), this.$element.find(".mejs-volume-button button").attr("aria-label", b())
        },
        _bindMethods: function() {
            this._onLoadStartBound = this._onLoadStart.bind(this), this._onLoadedDataBound = this._onLoadedData.bind(this), this._onCanPlayBound = this._onCanPlay.bind(this), this._onPlayBound = this._onPlay.bind(this), this._onPauseBound = this._onPause.bind(this), this._onEndedBound = this._onEnded.bind(this)
        },
        initVideo: function() {
            this._createVideoTag(), this._setupVideo()
        },
        _videoExists: function() {
            return 0 === this._$video.length ? !1 : !0
        },
        _createVideoTag: function() {
            var b = a("videoplaceholder", this.$element),
                c = b.clone(),
                d = c[0].outerHTML;
            d = d.replace(new RegExp("placeholder", "g"), ""), d = d.replace(new RegExp("data-data", "g"), "data"), d = d.replace(new RegExp("data-type", "g"), "type"), d = d.replace(new RegExp("<:", "g"), "<"), d = d.replace(new RegExp("</:", "g"), "</"), a(".playerWrapper", this.$element).append(d), a(".posterImage", this.$element).hide(), this._$video = a("video", this.$element)
        },
        _setupVideo: function() {
            var c = this;
            0 === this.options.controls.length && c._$video.removeAttr("controls"), this.options.autoplay === !0 && this._$video.attr("autoplay", "true");
            var d = a("track", this._$video);
            d.length > 0 && d.each(function(b, d) {
                "undefined" != typeof a(d).attr("src") ? "undefined" != typeof a(d).data("autoplay") && a(d).data("autoplay") === !0 && (c._startLanguage = a(d).attr("srclang")) : a(d).remove()
            });
            var e = "100%",
                f = "100%";
            this.$element.parents(".HeroCarousel, .HeroSlide, .StoryExtract, .FullFrameCarousel").length && c._detectHTML5Video() === !0 && (e = 640, f = 360);
            var g = this.$element.parents(".RangeCalculatorTooltip");
            g.length && c._detectHTML5Video() === !0 && (f = g.height()), c._selectCorrectVideo(), c.mep = new MediaElementPlayer(c._$video, {
                videoWidth: e,
                videoHeight: f,
                enableAutosize: !0,
                plugins: ["flash"],
                pluginPath: "/resources/public/flash/mediaelement/",
                flashName: "flashmediaelement.swf",
                enableKeyboard: !1,
                pauseOtherPlayers: c.options.pauseOtherPlayers,
                clickToPlayPause: c.options.clickToPlayPause,
                keyActions: [],
                autoRewind: c.options.loop,
                alwaysShowControls: !1,
                iPadUseNativeControls: c.options.iPadUseNativeControls,
                iPhoneUseNativeControls: c.options.iPhoneUseNativeControls,
                AndroidUseNativeControls: c.options.AndroidUseNativeControls,
                features: c.options.controls,
                autosizeProgress: !0,
                startVolume: .8,
                startLanguage: c._startLanguage,
                toggleCaptionsButtonWhenOnlyOne: !0,
                success: function(d, e, f) {
                    var g = d;
                    if (c._addMediaOverlay(), c._media = g, site.utils.isIOS() && (g.player = f), g.addEventListener("loadstart", c._onLoadStartBound), g.addEventListener("loadeddata", c._onLoadedDataBound), g.addEventListener("canplay", c._onCanPlayBound), g.addEventListener("play", c._onPlayBound), g.addEventListener("pause", c._onPauseBound), g.addEventListener("ended", c._onEndedBound), c.$element.addClass("paused"), c._adjustControlsState(), c.options.muted === !0 && c.mute(!0), c.options.autoplay === !1) {
                        var h = site.utils.aria.KeyCode,
                            i = h.SPACE,
                            j = h.RETURN;
                        a(".mejs-poster", c.$element).on("keydown", function(a) {
                            (a.keyCode === i || a.keyCode === j) && (a.preventDefault(), c.play())
                        }), a(".mejs-poster", c.$element).on("click tap", function(a) {
                            a.preventDefault(), c.play()
                        })
                    }
                    c.options.onReady(g), setTimeout(function() {
                        a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize")
                    }, 200), c._addKeyboardNavigation(), c._videoInitiated = !0
                },
                error: function() {
                    a(".me-cannotplay", c.$element).html(a(".fallbackImage", c.$element));
                    var d = a("[data-picture-ignore]", this.$element);
                    site.utils.loadIgnoredResponsiveImages(d), c._error = !0, a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize")
                }
            }), c._setFullScreenInGallery(), a(b).on("VideoPlayerPause", function(a, b) {
                null === b.videoid || c.options.ignorePauseEvent || b.videoid !== c._videoId && c.pause()
            }), a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize"), this._setAccessibilityLabels()
        },
        _adjustControlsState: function() {
            var b = this;
            b._$controls = a(".mejs-controls", b.$element).mouseenter(function() {
                b.mep.options.alwaysShowControls = !0
            }).mouseleave(function() {
                b.mep.options.alwaysShowControls = !1
            })
        },
        _selectCorrectVideo: function() {
            var c = a("source", this.$element),
                d = a(b).width(),
                e = null;
            a.each(c, function(b, c) {
                e = a(c);
                var f = "";
                f = d > 1280 ? e.data("1080") : d > 854 ? e.data("720") : d > 640 ? e.data("480") : e.data("360"), e.attr("src", f)
            })
        },
        _onLoadStart: function() {
            a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize"), setTimeout(function() {
                a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize")
            }, 300), setTimeout(function() {
                a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize")
            }, 500), setTimeout(function() {
                a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize")
            }, 1e3);
            var c = this.$element.find("video"),
                d = site.utils.aria.KeyCode,
                e = d.SPACE,
                f = d.RETURN;
            c.on("keydown", function(a) {
                (a.keyCode === e || a.keyCode === f) && c.click()
            })
        },
        _onLoadedData: function() {
            var a = this;
            a._videoLoaded = !0, a._$video.css({
                visibility: "visible"
            })
        },
        _onCanPlay: function() {
            this._detectHTML5Video() && (a(b).trigger("HeroCarouselForceResize"),
                a(b).trigger("resize"), "rtl" === this._direction && a(".mejs-captions-layer", this.$element).attr("dir", "rtl"), this.options.autoplay === !0 ? this._rewindWhenLoaded === !0 ? this.rewind() : this._playWhenLoaded === !0 && this.play() : (this._rewindWhenLoaded === !0 && this.rewind(), this._rewindWhenLoaded !== !0 && this._playWhenLoaded === !0 && this.play())), this._$video.css({
                visibility: "visible"
            }), this.options.onCanPlay(this._media)
        },
        _onPlay: function() {
            this.options.customPauseOtherPlayers && a(b).trigger("VideoPlayerPause", {
                videoid: this._videoId
            }), a(b).trigger("HeroCarouselForceResize"), a(b).trigger("resize"), this.$element.trigger("onPlay"), this.$element.removeClass("paused"), this.$element.removeClass("finished"), this._firstTimePlay === !1 && (this._firstTimePlay = !0, this.options.disableTracking === !1 && site.tracking.video_play(this.$element.data("title")));
            var c = this.$element.find("video"),
                d = this.$element.find(".mejs-playpause-button button");
            d.attr("aria-label", this.labels.pause), c.attr("aria-label", this.labels.pause), c.attr("tabindex", 0), c.removeAttr("aria-hidden"), this.options.isBackgroundVideo || setTimeout(function() {
                return c.focus()
            }, 50)
        },
        _onPause: function() {
            this.$element.trigger("onPause"), this.$element.addClass("paused"), this._returnOverlayFocusOnPlay()
        },
        _returnOverlayFocusOnPlay: function() {
            var a = this.$element.find("video"),
                b = this.$element.find(".mejs-playpause-button button");
            b.attr("aria-label", this.labels.play), a.attr("aria-label", this.labels.play);
            var c = this.$element.find(".mediaOverlayVideo"),
                d = c.attr("data-swiper-tabindex") || 0;
            setTimeout(function() {
                c.is(":visible") && (a.attr("tabindex", -1), a.attr("aria-hidden", "true"), c.attr("tabindex", d), c.focus())
            }, 50)
        },
        _onEnded: function() {
            return this.$element.trigger("videoEnded"), this.options.disableTracking === !1 && site.tracking.video_ended(this.$element.data("title")), this.options.loop !== !1 ? void this.play() : (this.$element.addClass("finished"), void(this._$video[0].player.isFullScreen === !0 && this._$video[0].player.exitFullScreen()))
        },
        isInitiated: function() {
            return this._videoInitiated
        },
        mute: function(a) {
            this._error === !1 && this._$video[0].player.setMuted(a)
        },
        play: function() {
            if (this._videoExists() === !0 && this._error === !1) {
                if (this._videoLoaded === !1) return void(this._playWhenLoaded = !0);
                this._playWhenLoaded = !1, this._$video[0].player.play()
            }
        },
        pause: function(a) {
            if (this._videoExists() === !0) {
                var b = a ? a.data.that : this;
                b._error === !1 && (b._playWhenLoaded = !1, b._$video[0].player.pause())
            }
        },
        rewind: function() {
            if (this._videoExists() === !0 && this._error === !1) {
                if (this._videoLoaded === !1) return void(this._rewindWhenLoaded = !0);
                this._rewindWhenLoaded = !1, a("html").hasClass("lt-ie10") ? this._$video[0].player.media.paused ? (this._$video[0].player.play(), this.setCurrentTime(0), this._$video[0].player.pause()) : (this._$video[0].player.play(), this.setCurrentTime(0)) : this.setCurrentTime(0)
            }
        },
        setCurrentTime: function(a) {
            this._videoExists() === !0 && this._error === !1 && this._$video[0].player.setCurrentTime(a)
        },
        canBeResumed: function() {
            return this._videoExists() === !0 ? null === this._media ? !1 : this._media.paused === !0 && this._videoLoaded === !0 : !1
        },
        setVolume: function(a) {
            if (this._videoExists() === !0) {
                var b = a / 100;
                this._$video[0].player.setVolume(b)
            }
        },
        getVolume: function() {
            if (this._videoExists() === !0) {
                var a = this._$video[0].player.getVolume();
                return 100 * a
            }
            return 0
        },
        _addMediaOverlay: function() {
            var b = this;
            b._removeMediaOverlay();
            var c = a('<div class="mediaOverlay mediaOverlayVideo"><div class="mediaOverlayBg"></div><div class="mediaOverlayIcon"></div></div>');
            a(".mejs-overlay-play", b.$element).append(c)
        },
        _removeMediaOverlay: function() {
            var b = this;
            a(".mediaOverlay", b.$element).remove()
        },
        _destroy: function() {
            var b = this;
            b._media && (b._media.removeEventListener("loadstart", this._onLoadStartBound), b._media.removeEventListener("loadeddata", this._onLoadedDataBound), b._media.removeEventListener("canplay", this._onCanPlayBound), b._media.removeEventListener("play", this._onPlayBound), b._media.removeEventListener("pause", this._onPauseBound), b._media.removeEventListener("ended", this._onEndedBound)), a(".mejs-poster", b.$element).off("click tap")
        },
        _detectHTML5Video: function() {
            var a = this,
                b = c.createElement("video");
            return b.canPlayType && b.canPlayType('video/webm; codecs="vp8, vorbis"') ? (a._videoType = "webm", !0) : b.canPlayType && b.canPlayType("video/mp4").replace(/no/, "") ? (a._videoType = "mp4", !0) : (a._videoType = "flash", a.$element.addClass("flash"), !1)
        },
        _addKeyboardNavigation: function() {
            var b = this,
                c = this,
                d = a(".mejs-container", c.$element),
                e = a(".mediaOverlay", c.$element),
                f = a(".mejs-controls", d),
                g = a(".mejs-playpause-button button", f),
                h = a(".mejs-time-rail", f),
                i = a(".mejs-captions-button button", f),
                j = a(".mejs-volume-button button", f),
                k = a(".mejs-volume-button .mejs-volume-slider", f),
                l = a(".mejs-fullscreen-button button", f),
                m = c._$video[0].player,
                n = site.utils.aria.KeyCode,
                o = n.LEFT,
                p = n.RIGHT,
                q = n.UP,
                r = n.DOWN,
                s = n.SPACE,
                t = n.RETURN;
            e.attr("tabindex", "0"), h.attr("tabindex", "0"), e.keydown(function(b) {
                (b.keyCode === t || b.keyCode === s) && (b.preventDefault(), a(b.currentTarget).trigger("click"), setTimeout(function() {
                    g.focus()
                }, 1))
            }), g.keydown(function(b) {
                (b.keyCode === t || b.keyCode === s) && (b.preventDefault(), a(b.currentTarget).trigger("click"), setTimeout(function() {
                    e.focus()
                }, 1))
            }), h.keydown(function(a) {
                if ((a.keyCode === o || a.keyCode === p) && (a.preventDefault(), !Number.isNaN(m.media.duration) && m.media.duration > 0)) {
                    var b = 0;
                    a.keyCode === o && (b = Math.max(m.media.currentTime - m.options.defaultSeekBackwardInterval(m.media), 0)), a.keyCode === p && (b = Math.min(m.media.currentTime + m.options.defaultSeekForwardInterval(m.media), m.media.duration)), m.media.setCurrentTime(b)
                }
            }), i.keydown(function(b) {
                (b.keyCode === t || b.keyCode === s) && (b.preventDefault(), a(b.currentTarget).trigger("click"))
            }), j.focus(function() {
                k.show()
            }), j.blur(function() {
                k.hide()
            }), j.keydown(function(a) {
                if (a.keyCode === q || a.keyCode === r || a.keyCode === t || a.keyCode === s) {
                    a.preventDefault();
                    var b = void 0;
                    a.keyCode === q && (b = Math.min(m.media.volume + .1, 1), m.media.setVolume(b)), a.keyCode === r && (b = Math.max(m.media.volume - .1, 0), m.media.setVolume(b)), (a.keyCode === t || a.keyCode === s) && j.click()
                }
            }), j.click(function() {
                b._addMuteLabel()
            }), l.keydown(function(a) {
                if (a.keyCode === t || a.keyCode === s) {
                    if (a.preventDefault(), "undefined" == typeof m.enterFullScreen) return;
                    m.isFullScreen && (c._addFullscreenLabel(c.labels.enter), m.exitFullScreen()), m.isFullScreen || (c._addFullscreenLabel(c.labels.exit), m.enterFullScreen())
                }
            }), l.click(function() {
                "undefined" != typeof m.enterFullScreen && (m.isFullScreen && c._addFullscreenLabel(c.labels.enter), m.isFullScreen || c._addFullscreenLabel(c.labels.exit))
            })
        },
        _addFullscreenLabel: function(a) {
            this.$element.find(".mejs-fullscreen-button button").attr("aria-label", a)
        },
        _addMuteLabel: function() {
            var a = this.$element.find(".mejs-volume-button button");
            a.parent().hasClass("mejs-mute") ? a.attr("aria-label", this.labels.mute) : a.attr("aria-label", this.labels.unmute)
        },
        _setFullScreenInGallery: function() {
            var b = this,
                d = a(".mejs-container", b.$element),
                e = a(".mejs-controls", d),
                f = a(".mejs-fullscreen-button button", e);
            a("html").is(".ie10, .lt-ie10") && 0 !== b.$element.parents(".Fullscreen").length && (f.on("click", function() {
                b._toggleFullScreenIE()
            }), f.keydown(function(a) {
                (13 === a.keyCode || 32 === a.keyCode) && b._toggleFullScreenIE()
            }), a(c).keydown(function(a) {
                27 === a.keyCode && b._removeFullScreenIE()
            }))
        },
        _applyFullScreenIE: function() {
            var c = this;
            c.$element.parents(".Fullscreen").addClass("fullScreenVideo"), c.$element.css({
                height: a(b).height(),
                width: a(b).width()
            }), c._isFullScreen = !0
        },
        _removeFullScreenIE: function() {
            var a = this;
            a.$element.parents(".Fullscreen").removeClass("fullScreenVideo"), a.$element.css({
                height: "auto",
                width: "auto"
            }), a._isFullScreen = !1
        },
        _toggleFullScreenIE: function() {
            var a = this;
            a._isFullScreen === !1 ? a._applyFullScreenIE() : a._removeFullScreenIE()
        }
    };
    jQuery.createComponent("VideoPlayer", d)
}(jQuery, window, document),
function(a, b, c, d) {
    var e = {
        uiSelectors: {
            videoPlayer: ".VideoPlayer",
            video: ".VideoPlayer video",
            ctaContainer: ".ctaContainer",
            posterImage: ".videoContainer > span"
        },
        init: function() {
            this.ui("video").attr("preload", "none"), this.ui("video").removeAttr("controls"), this.ui("videoPlayer").VideoPlayer({
                autoplay: !1,
                loop: !1,
                AndroidUseNativeControls: !1
            }), this._resizeVideoCover(), this._playOrPauseVideo(), this._videoOnEnded(), this._videoOnPlay(), this._videoOnPause(), this.ui("video").get(0).player.tracks.length > 0 && this.ui("video").get(0).player.setTrack(this.ui("video").get(0).player.tracks[0].srclang)
        },
        _showSubtitles: function() {
            a(".mejs-captions-position", this.$element).fadeIn()
        },
        _hideSubtitles: function() {
            a(".mejs-captions-position", this.$element).fadeOut()
        },
        _resizeVideoCover: function() {
            a(b).resize(function() {
                a(".videoCover").css("height", .3125 * a(".videoCover").width()), a(".mejs-captions-position", this.$element).css({
                    top: this.ui("video").height() - this.$element.height()
                })
            }.bind(this))
        },
        _playOrPauseVideo: function() {
            a(".videoOverlay, .ctaContainer", this.$element).click(function(a) {
                this.ui("video").get(0).paused ? (a.preventDefault(), this.ui("video").get(0).play(), this._showSubtitles()) : (this.ui("video").get(0).pause(), this._hideSubtitles())
            }.bind(this))
        },
        _videoOnEnded: function() {
            this.ui("video").get(0).addEventListener("ended", function() {
                this.ui("ctaContainer").removeClass("videoPlaying")
            }.bind(this))
        },
        _videoOnPlay: function() {
            this.ui("video").get(0).addEventListener("play", function() {
                (site.utils.isIe() || site.utils.isMsEdge()) && this.ui("posterImage").hide(), this.ui("ctaContainer").addClass("videoPlaying")
            }.bind(this))
        },
        _videoOnPause: function() {
            this.ui("video").get(0).addEventListener("pause", function() {
                this.ui("ctaContainer").removeClass("videoPlaying")
            }.bind(this))
        }
    };
    jQuery.createComponent("VideoWithText", e)
}(jQuery, window, document),
function(a, b) {
    var c = {
        _defaults: {
            expandToWidthOnly: !0,
            inGallery: !1,
            ignorePauseEvent: !1,
            playerVars: {},
            inFullFrameCarousel: !1
        },
        _touchDevice: !1,
        _onlyItem: !1,
        _aspectRatio: 16 / 9,
        _player: null,
        _waitingAPILoad: !1,
        _windowWidth: null,
        _windowHeight: null,
        playerVars: {
            rel: 0,
            showinfo: 0,
            enablejsapi: 1,
            controls: 1
        },
        _coverImage: null,
        init_rtl: function() {},
        init: function() {
            var c = this;
            Object.keys(this.options.playerVars).forEach(function(a) {
                c.playerVars[a] = c.options.playerVars[a]
            }), "ontouchstart" in b ? this._touchDevice = !0 : navigator.msMaxTouchPoints && (this._touchDevice = !0), this._onlyItem = this.$element.parent().data("only-item"), this._deeplinkedItem = this.$element.parent().data("show"), "undefined" == typeof this._onlyItem && (this._onlyItem = !1), this._onlyItem === !0 || this._deeplinkedItem === !0 ? (this._addPlayer(1), this._hideCoverImage()) : this._touchDevice === !0 ? (this._addPlayer(0), this._hideCoverImage()) : this._bindCoverEvents(), this.onResize(), a(b).on("resize", function() {
                c.onResize()
            }), a(b).on("YouTubePlayerLoaded", function() {
                c._waitingAPILoad && c._addPlayer(1)
            }), a(b).on("VideoPlayerPause", function(b, d) {
                null === d.videoid || c.options.ignorePauseEvent || d.videoid !== a(".placeholderVideo iframe", c.$element).attr("id") && c.pause()
            }), this._addAccessibilityLabels()
        },
        _addAccessibilityLabels: function() {
            var b = this._getCoverImageEl(),
                c = b.find(".coverImgBtn");
            b.addClass("mediaOverlay__wrapper"), c.attr("aria-label", a(".a11yResourceLabels").attr("data-a11y-video-youtube-samePage") || "")
        },
        _getCoverImageEl: function() {
            return null === this._coverImage && (this._coverImage = a(".playerWrapper > .coverImgWrapper", this.$element)), this._coverImage
        },
        _addPlayer: function(c) {
            var d = this,
                e = this;
            if (this._player = null, site.youTubeIframeAPIReady) {
                var f = a(".placeholderVideo", this.$element),
                    g = f.data("video-id").trim(),
                    h = a(".a11yResourceLabels").attr("data-a11y-video-youtube-iframetitle"),
                    i = "https://www.youtube-nocookie.com/embed/" + g + "?autoplay=" + c + "&mute=1&wmode=opaque&iv_load_policy=3&color=white&probably_logged_in=0";
                Object.keys(this.playerVars).forEach(function(a) {
                    i += "&" + a + "=" + d.playerVars[a]
                }), navigator.userAgent.toLowerCase().indexOf("firefox") > -1 && (i += "&html5=1");
                var j = f.attr("id") + "Video";
                a(".placeholderVideo", this.$element).html('<iframe title="' + h + '" id="' + j + '" width="640" height="360" src="' + i + '" allowFullScreen>'), 1 === c && a(b).trigger("VideoPlayerPause", {
                    videoid: j
                }), this._player = new YT.Player(j, {
                    events: {
                        onStateChange: function(c) {
                            var d = {},
                                f = "";
                            0 === c.data && e.$element.trigger("videoEnded"), 2 === c.data ? (e.options.inGallery === !0 && site.utils.isIOS() && (a(".placeholderVideo", this.$element).empty(), e._addPlayer()), d = c.target.getVideoData(), f = d.video_id + ":" + d.title, c.target.getCurrentTime() !== c.target.getDuration() && site.tracking.youtube_pause(f)) : c.data === YT.PlayerState.PLAYING && null !== j && (a(b).trigger("VideoPlayerPause", {
                                videoid: j
                            }), e.$element.trigger("onPlay"), setTimeout(e._onPlayerPercent, 1e3, c.target, e), d = c.target.getVideoData(), f = d.video_id + ":" + d.title, site.tracking.youtube_play(f));
                            var g = a(e._player.a);
                            g.focus()
                        }
                    }
                }), e._waitingAPILoad = !1
            } else e._waitingAPILoad = !0, a.getScript("//www.youtube.com/iframe_api");
            a("body").append('<div class="temp">&nbsp;</div>'), a("iframe").load(function() {
                a(".temp").remove()
            })
        },
        pause: function() {
            if (this._player && this._player.pauseVideo) {
                var a = this._player.getPlayerState();
                if (a !== YT.PlayerState.PLAYING && a !== YT.PlayerState.BUFFERING) return;
                this._player.pauseVideo()
            }
        },
        play: function() {
            this._player ? this._player.playVideo() : (this._addPlayer(1), this._hideCoverImage())
        },
        getPlayingState: function() {
            return this._player && this._player.getPlayerState ? this._player.getPlayerState() : null
        },
        getVolume: function() {
            return this._player && this._player.getVolume ? this._player.getVolume() : null
        },
        setVolume: function(a) {
            this._player && this._player.setVolume && this._player.setVolume(a)
        },
        _onPlayerPercent: function(a, b) {
            if (a.getPlayerState() === YT.PlayerState.PLAYING) {
                var c = a.getDuration() - a.getCurrentTime() <= 1.5 ? 1 : (Math.floor(a.getCurrentTime() / a.getDuration() * 4) / 4).toFixed(2);
                if (!a.lastP || c > a.lastP) {
                    var d = a.getVideoData(),
                        e = d.video_id + ":" + d.title;
                    a.lastP = c, c > 0 && (site.tracking.youtube_progress(e, 100 * c), 100 * c === 100 && delete a.lastP)
                }
                1 !== a.lastP && setTimeout(b._onPlayerPercent, 1e3, a, b)
            }
        },
        forceResize: function() {
            this.onResize(!0)
        },
        onResize: function(b) {
            if (this._windowSizeChanged() === !0 || b === !0) {
                a(".playerWrapper", this.$element).css({
                    height: "auto",
                    width: "auto"
                });
                var c = this.$element.width(),
                    d = site.utils.isBreakpointSmall() ? c / 16 * 9 : this.$element.height(),
                    e = Math.ceil(c / this._aspectRatio),
                    f = this.options.inFullFrameCarousel === !0 ? "100%" : "auto";
                if (this.options.inFullFrameCarousel === !0) {
                    var g = a(".playerWrapper", this.$element).closest(".YouTubeGalleryAsset").find(".youTubePlayerFFCMask").eq(0);
                    g.css("height", e - 50)
                }
                this.options.expandToWidthOnly === !1 && e > d && (e = d, f = Math.ceil(d * this._aspectRatio)), a(".playerWrapper", this.$element).css({
                    height: e,
                    width: f
                })
            }
        },
        _windowSizeChanged: function() {
            var c = a(b).width(),
                d = a(b).height(),
                e = this._windowWidth,
                f = this._windowHeight;
            return this._windowWidth = c, this._windowHeight = d, c !== e || d !== f
        },
        _hideCoverImage: function() {
            this._getCoverImageEl().hide()
        },
        _bindCoverEvents: function() {
            var a = this,
                b = function(b) {
                    b.preventDefault(), b.stopPropagation(), a._addPlayer(1), a._hideCoverImage(), setTimeout(function() {
                        var b = a.$element.find("iframe");
                        b.attr("tabindex", b.attr("tabindex") || -1), b.focus()
                    }, 100)
                },
                c = site.utils.aria.KeyCode,
                d = c.SPACE,
                e = c.RETURN,
                f = this._getCoverImageEl().find(".coverImgBtn");
            f.on("keydown", function(a) {
                (a.keyCode === d || a.keyCode === e) && b(a)
            }), f.off("click tap").on("click tap", function(a) {
                b(a)
            })
        },
        setIgnorePauseEvent: function(a) {
            this.options.ignorePauseEvent = a
        },
        _destroy: function() {
            this._player = null, this._waitingAPILoad = !1, this._getCoverImageEl().find(".coverImgBtn").off("click tap"), a("iframe", this.$element).remove(), this._touchDevice === !1 && this._getCoverImageEl().show()
        }
    };
    jQuery.createComponent("YouTubePlayer", c)
}(jQuery, window, document), ("undefined" == typeof console || "undefined" == typeof console.log) && (console = {}, console.log = function() {});
var site = {
    scrollPosition: 0,
    scrollDirection: "up",
    youTubeIframeAPIReady: !1,
    fullScreenMode: !1,
    rtl: !1,
    inXPM: !1,
    breakpoints: {
        small: 740,
        medium: 900,
        wider: 1e3,
        current: null
    },
    colours: {
        error: "#f2681d"
    },
    stickyNavigationTransitionPoint: 200,
    stickyNavigationEnabled: !1,
    cookiesAccepted: !1,
    googleMapsAPIKey: "",
    googleMapsGeolocationAPIKey: "AIzaSyAXwLJc64BMjGBcvfg1FwlRtJ7BXgAPBIA",
    googleMapsClientId: "gme-jaguarlandrover",
    googleMapsLoadedPromise: new Promise(function(a, b) {
        document.body.addEventListener("GoogleMapsApiReady", a), document.body.addEventListener("GoogleMapsApiFailed", b)
    }),
    init: function() {
        var a = $("html");
        if (a.hasClass("lt-ie9")) {
            var b = document.getElementsByTagName("head")[0],
                c = document.createElement("style");
            c.type = "text/css", c.styleSheet.cssText = ":before,:after{content:none !important", b.appendChild(c), setTimeout(function() {
                b.removeChild(c)
            }, 0)
        }
        10 === document.documentMode && (document.documentElement.className += " ie10"), "undefined" != typeof window.Tridion && site.utils.isPageInIframe() && (site.inXPM = !0, setTimeout(function() {
            "undefined" == typeof window.Tridion.Web.UI.SiteEdit && (site.inXPM = !1)
        }, 1e3)), (window.ActiveXObject || "ActiveXObject" in window) && a.addClass("ie"), site.utils.isMsEdge() && a.addClass("ms-edge"), site.utils.isMobileDevice() && a.addClass("touchCapability"), a.hasClass("rtl") && (site.rtl = !0), $(".dxnav-unique-nav").length > 0 && $("header").prepend($(".notificationBarsWrapper")), this.initEnquire();
        var d = $("#header, .dxnav-header");
        site.stickyNavigationEnabled = "sticky" === d.attr("data-nav-type"), d.Header(), $(".VehicleSummary, .storyGalleryFrame").ComponentName(), $(".EmailCapture").EmailCapture(), $(".ChargeQualifier").ChargeQualifier(), $(".FeedbackWidget").FeedbackWidget(), $(".ComparisonSlider").ComparisonSlider(), window.richsponsiveImage(), $(".ResponsiveLink").ResponsiveLink(), $(".TargetLinks").TargetLinks(), $("body").FocusSwitcher(), $(".DropdownNav").DropdownNav(), $(".InPageSubNavigation").InPageSubNavigation(), $(".DropdownSelect").DropdownSelect(), $(".IgniteBar").IgniteBar(), $(".IgniteBarDevice").IgniteBarDevice();
        var e = $(".VehicleSelector:not(.inPageVehicleSelector)"),
            f = $(".VehicleSelector.inPageVehicleSelector"),
            g = !0;
        1 === e.length && (g = !1, e.VehicleSelector({
            overlay: !1
        })), 0 !== f.length && f.VehicleSelector({
            overlay: !1
        }), g === !0 && 0 === $(".ModelSelector:not(.inPageModelSelector)").length && $(".MainNavigation .vehicles a").VehicleSelector({
            overlay: !0
        }), e = null, $(".QuickQuote").QuickQuote(), $(".ScrollDown").ScrollDown(), $(".SidebarImage").SidebarImage(), $(".DualFrameCarousel").DualFrameCarousel(), $(".DualFrameCarousel2").DualFrameCarousel2();
        var h = $(".Article table:not(.nonResponsive), .cmp-engineSpecifications table:not(.nonResponsive), .VehicleSpecifications table:not(.nonResponsive)");
        h.ResponsiveTable(), $(".TabFilter", this.$element).TabFilter(), $(".ApprovedUsedVehicle").ApprovedUsedVehicle(), $(".MapLocation2").MapLocation2(), $(".VehicleSpecificationsV2").VehicleSpecificationsV2(), $(".AtAGlance").AtAGlance(), $(".FrameSlider").FrameSlider(), $(".Quote").Quote(), $(".QuotePlayer").QuotePlayer(), $(".YouTubePlayer").filter(function() {
            return 0 === $(this).parent(".galleryItem").length
        }).YouTubePlayer(), site.utils.assignYouTubeIframeAPIReady(), $(".VideoPlayer").filter(function() {
            return !$(this).parents(".heroItem, .HeroSlide, .FullFrameCarousel, .StoryExtract, .StoryArticleVideo, .StoryScroller, .VideoWithText").length
        }).VideoPlayer({
            autoplay: !1,
            loop: !1
        }), site.utils.campaignTrackingPersistance.setTracking("GoogleCampaign", ["utm_source", "utm_medium", "utm_term", "keywords", "utm_content", "utm_campaign"]), $(".FramedContent").FramedContent(), $(".GoogleMap").GoogleMap(), $(".VideoLauncher").VideoLauncher(), $(".SocialFeed").SocialFeed(), $(".StoryScroller").StoryScroller(), $(".FramedForm").FramedForm(), $(".BazaarVoiceRating").BazaarVoiceRating(), $(".Hub").Hub(), $(".HubNavigation").HubNavigation(), $(".ReviewRatingBadge").ReviewRatingBadge(), $(".ReviewsAtAGlance").ReviewsAtAGlance(), $(".ToggleLinks").ToggleLinks(), $(".headingLinear").Headings(), $(".DefenderJourneyMap").DefenderJourneyMap(), $(".DefenderJourneyCarousel").DefenderJourneyCarousel(), $(".DefenderJourneyStoryMap").DefenderJourneyStoryMap(), $(".DefenderJourneyStoryDetail").DefenderJourneyStoryDetail(), $(".Hotspots").Hotspots(), $(".GesturedVideoSequence").each(function() {
            var a = $(this);
            a.parents(".TabbedContainer").length || a.GesturedVideoSequence()
        }), $(".UsedCarValuator").UsedCarValuator(), $(".VideoWithText").VideoWithText(), $(".Compare").Compare(), $(".CompareTwo").CompareTwo(), $(".Accordion").Accordion(), $("#content").AccordionContainer(), $(".Selectable").Selectable(), $(".ComparisonTable").ComparisonTable();
        var i = $(".KeeComparisonTool");
        i.KeeComparisonTool(), i.KeeComparisonToolBars(), i.KeeComparisonToolAccordion(), i.KeeComparisonTooltips(), $(".EUEmissions").EUEmissions(), $(".RideAndDrive").RideAndDrive(), $(".BookATestDriveRedirect").BookATestDriveRedirect(), $(".ManualsTopicDetails").ManualsTopicDetails(), $(".ExperienceDriveMapAndLocator").ExperienceDriveMapAndLocator(), $(".TripAdvisorWidget").TripAdvisorWidget(), $(window).debounce("scroll", function(a) {
            $(window).trigger({
                type: "throttledScroll",
                event: a
            })
        }, 250), $(window).smartresize(function() {
            window.richsponsiveImage()
        }), $(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange", function() {
            var a = document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;
            site.fullScreenMode = !site.fullScreenMode, a ? $("#header, .FooterNav, .IgniteBar").hide() : $("#header, .FooterNav, .IgniteBar").show(), $(window).trigger("resize")
        }), document.addEventListener("curationsReady", site.utils.assignYouTubeIframeAPIReady), deepLink.init(), $(".InteractiveStory").InteractiveStory()
    },
    initEnquire: function() {
        enquire.register("screen and (min-width: " + window.site.breakpoints.medium + "px)", {
            match: function() {
                site.breakpoints.current = "large"
            }
        }), enquire.register("screen and (min-width: " + (window.site.breakpoints.small + 1) + "px) and (max-width: " + (window.site.breakpoints.medium - 1) + "px)", {
            match: function() {
                site.breakpoints.current = "medium"
            }
        }), enquire.register("screen and (max-width: " + window.site.breakpoints.small + "px)", {
            match: function() {
                site.breakpoints.current = "small"
            }
        })
    },
    gmapsLoaded: function() {
        var a = $.Event("api:ready");
        $(".GoogleMap").trigger(a);
        var b = document.createEvent("Event");
        b.initEvent("GoogleMapsApiReady", !1, !1), document.body.dispatchEvent(b)
    },
    gmapsLoadFailed: function() {
        var a = document.createEvent("Event");
        a.initEvent("GoogleMapsApiFailed", !1, !1), document.body.dispatchEvent(a)
    }
};
if (window.onpageshow = function(a) {
        a.persisted && window.location.reload()
    }, "undefined" == typeof dataLayer) var dataLayer = {
    push: function() {}
};
site.tracking = {
    video_play: function(a) {
        var b = {
            event: "video",
            action: "play",
            video_id: a
        };
        dataLayer.push(b)
    },
    video_ended: function(a) {
        var b = {
            event: "video",
            action: "complete",
            video_id: a
        };
        dataLayer.push(b)
    },
    youtube_play: function(a) {
        var b = {
            event: "youtube",
            action: "play",
            label: a
        };
        dataLayer.push(b)
    },
    youtube_pause: function(a) {
        var b = {
            event: "youtube",
            action: "pause",
            label: a
        };
        dataLayer.push(b)
    },
    youtube_progress: function(a, b) {
        var c = {
            event: "youtube",
            action: b + "%",
            label: a
        };
        dataLayer.push(c)
    }
}, site.utils = {
    googleMapStyles: [{
        featureType: "administrative.locality",
        elementType: "labels.text.fill",
        stylers: [{
            color: "#666666"
        }]
    }, {
        featureType: "landscape.man_made",
        elementType: "geometry.fill",
        stylers: [{
            color: "#f8f6f4"
        }]
    }, {
        featureType: "poi",
        elementType: "labels",
        stylers: [{
            visibility: "off"
        }]
    }, {
        featureType: "road.highway",
        elementType: "geometry.fill",
        stylers: [{
            color: "#afaba4"
        }]
    }, {
        featureType: "road.highway",
        elementType: "geometry.stroke",
        stylers: [{
            color: "#e6e6e6"
        }]
    }, {
        featureType: "road.highway",
        elementType: "labels",
        stylers: [{
            saturation: -15
        }]
    }, {
        featureType: "road.highway.controlled_access",
        elementType: "geometry.fill",
        stylers: [{
            color: "#afaba4"
        }]
    }, {
        featureType: "road.highway.controlled_access",
        elementType: "labels.icon",
        stylers: [{
            saturation: -100
        }]
    }, {
        featureType: "road.local",
        elementType: "geometry.fill",
        stylers: [{
            color: "#ffffff"
        }]
    }, {
        featureType: "road.local",
        elementType: "labels.icon",
        stylers: [{
            saturation: "77"
        }]
    }, {
        featureType: "transit",
        elementType: "labels.icon",
        stylers: [{
            saturation: "-100"
        }]
    }, {
        featureType: "water",
        elementType: "geometry.fill",
        stylers: [{
            color: "#c5d7de"
        }, {
            lightness: -9
        }]
    }],
    aria: {
        KeyCode: {
            BACKSPACE: 8,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ESC: 27,
            HOME: 36,
            LEFT: 37,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            RETURN: 13,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    },
    _templateCache: {},
    cookieManager: {
        checkForCookie: function(a) {
            var b = this,
                c = b.readCookie(a);
            return null !== c ? !0 : !1
        },
        readCookie: function(a) {
            var b = document.cookie.split(";");
            if (b.length < 1) return null;
            for (var c = 0; c < b.length; c++) {
                var d = b[c].split("=");
                if (d[0].replace(/\s/g, "") == a) return d[1]
            }
            return null
        },
        createCookie: function(a, b, c) {
            var d = "";
            if (c) {
                var e = new Date;
                e.setTime(e.getTime() + 24 * c * 60 * 60 * 1e3), d = "; expires=" + e.toGMTString()
            } else d = "";
            document.cookie = a + "=" + b + d + "; path=/"
        },
        deleteCookie: function(a) {
            var b = this;
            b.createCookie(a, "", -1)
        }
    },
    getCachedScript: function(a, b) {
        return b = $.extend(b || {}, {
            dataType: "script",
            cache: !0,
            url: a
        }), $.ajax(b)
    },
    scrollTo: function(a, b, c, d, e) {
        var f = this,
            g = 0;
        b = "number" != typeof b ? 800 : b, c = "function" != typeof c ? null : c, d = "string" != typeof d ? "easeOutSine" : d, "number" == typeof a ? g = a : ($targetEl = a || $("body"), g = $targetEl.offset().top), e !== !0 && (g -= f.getStickyNavHeight(g)), $("html, body").stop().animate({
            scrollTop: g
        }, b, d).promise().done(c)
    },
    checkDeepLink: function(a) {
        var b = this,
            c = !1,
            d = 2.5,
            e = a.indexOf("#");
        if (e + 1 < a.length && -1 != e) {
            var f = a.substring(e, a.length);
            if (1 === $(f).length) {
                var g = $(f),
                    h = g.offset().top / d;
                if ($('head [name="accordionOnMobile"]').length && b.isBreakpointSmall()) {
                    var i = g.closest(".accordion-group"),
                        j = i.find(".accordion-group-title");
                    if (i.length && j.length) return i.hasClass("open") || j.click(), g = g.offset().top - j.outerHeight(), b.scrollTo(g, 800, null, "easeOutSine"), void(c = !0)
                }
                if (g.parents(".TabbedContainer").length) {
                    var k = g.closest(".TabbedContainer"),
                        l = k.find(".tab"),
                        m = k.find(".tab-link"),
                        n = 0;
                    return l.each(function(a) {
                        var b = $(this).find(g);
                        b.length && (n = a)
                    }), m.each(function(a) {
                        a === n && $(this).click()
                    }), g = k.offset().top, h = g / d, b.scrollTo(g, 800, null, "easeStartFastEndSlow"), !0
                }
                if ($("body").hasClass("vehiclesDiscovery")) {
                    var i = g.parents(".AccordionContainer"),
                        o = $(g);
                    if (i.length) {
                        var p = i.find(".header");
                        p.hasClass("accordion-open") || p.click(), p.is(":visible") && (g.is(":visible") ? g = g.offset().top - p.outerHeight() : (o.css("display", "block"), g = g.offset().top - p.outerHeight(), o.css("display", "")))
                    }
                }
                b.scrollTo(g, h, null, "easeStartFastEndSlow"), c = !0
            } else console.error("Could not find deep link element with id: " + f)
        }
        return c
    },
    isPageInIframe: function() {
        return self !== top
    },
    getDeviceOrientation: function() {
        var a = $(window),
            b = "portrait";
        return a.width() > a.height() && (b = "landscape"), b
    },
    getBreakpointSize: function() {
        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !0,
            b = a ? $(window).width() : window.innerWidth;
        return b <= site.breakpoints.small ? "small" : b <= site.breakpoints.medium ? "medium" : "large"
    },
    isBreakpointSmall: function() {
        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !0,
            b = this;
        return "small" == b.getBreakpointSize(a) ? !0 : !1
    },
    isBreakpointMedium: function() {
        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !0,
            b = this;
        return "medium" == b.getBreakpointSize(a) ? !0 : !1
    },
    isMobileDevice: function() {
        var a;
        return a = "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch || navigator.msMaxTouchPoints ? !0 : !1
    },
    isIOS: function() {
        return /(ipad|iphone|ipod)/i.test(navigator.userAgent.toLowerCase())
    },
    isWindowsPhone: function() {
        return -1 != navigator.userAgent.toLowerCase().indexOf("windows phone")
    },
    getAndroidVersion: function() {
        var a = navigator.userAgent;
        return a.indexOf("Android") >= 0 ? parseFloat(a.slice(a.indexOf("Android") + 8)) : void 0
    },
    insideTabbedContainer: function(a) {
        var b = !!a.parents(".TabbedContainer").not('[data-total="1"]').length;
        return b ? a.parents(".TabbedContainer") : !1
    },
    mobileAccordionsActivated: function() {
        return $('head [name="accordionOnMobile"]').length
    },
    removeHTMLTags: function(a) {
        var b = a.toString().replace(/[<>=;]/g, "");
        return b
    },
    getUrlParameter: function(a) {
        function b(a) {
            return decodeURIComponent((a || "").replace(/\+/g, " "))
        }
        for (var c = window.location.search.substring(1), d = c.split("&"), e = 0; e < d.length; e++) {
            var f = d[e].split("=");
            if (b(f[0]) === a) return b(f[1])
        }
        return null
    },
    addParameterToURL: function(a, b) {
        return "" != b && (a += (a.split("?")[1] ? "&" : "?") + b), a
    },
    campaignTrackingPersistance: {
        setTracking: function(a, b) {
            for (var c = {}, d = 0; d < b.length; d++) {
                var e = b[d],
                    f = site.utils.getUrlParameter(e);
                f && (c[e] = f)
            }
            if (site.utils.getObjectKeys(c).length > 0) {
                var g = "JLR_Campaign_Tracking_" + a;
                site.utils.cookieManager.deleteCookie(g), site.utils.cookieManager.createCookie(g, JSON.stringify(c))
            }
        },
        getTracking: function(a) {
            var b = "JLR_Campaign_Tracking_" + a,
                c = "";
            return site.utils.cookieManager.readCookie(b) && (c = $.param($.parseJSON(site.utils.cookieManager.readCookie(b)))), c
        }
    },
    getObjectKeys: function(a) {
        var b = [];
        for (var c in a) a.hasOwnProperty(c) && b.push(c);
        return b
    },
    canvasDrawBgCover: function(a, b, c, d, e, f, g, h) {
        2 === arguments.length && (c = d = 0, e = a.canvas.width, f = a.canvas.height), g = "number" == typeof g ? g : .5, h = "number" == typeof h ? h : .5, 0 > g && (g = 0), 0 > h && (h = 0), g > 1 && (g = 1), h > 1 && (h = 1);
        var i, j, k, l, m = b.width,
            n = b.height,
            o = Math.min(e / m, f / n),
            p = m * o,
            q = n * o,
            r = 1;
        e > p && (r = e / p), f > q && (r = f / q), p *= r, q *= r, k = m / (p / e), l = n / (q / f), i = (m - k) * g, j = (n - l) * h, 0 > i && (i = 0), 0 > j && (j = 0), k > m && (k = m), l > n && (l = n), a.drawImage(b, i, j, k, l, c, d, e, f)
    },
    isIe: function() {
        return $("html").hasClass("ie")
    },
    isMsEdge: function() {
        return site.utils.detectBrowsers().isMsEdge
    },
    isIe11: function() {
        return !window.ActiveXObject && "ActiveXObject" in window
    },
    isIe9: function() {
        return -1 !== navigator.appVersion.indexOf("MSIE 9.") ? !0 : !1
    },
    hasPlaceholderSupport: function() {
        var a = document.createElement("input");
        return "placeholder" in a
    },
    isPageInXPMFrame: function() {
        return "undefined" != typeof window.Tridion && "undefined" != typeof window.Tridion.Web.UI.SiteEdit ? (site.inXPM = !0, !0) : !1
    },
    elementInViewport: function(a, b, c) {
        if ($element = a instanceof jQuery ? a : $(a), !$element.length) return !1;
        var d, e, f = $(window),
            g = f.scrollTop(),
            h = f.height(),
            i = $element.offset(),
            j = i.top,
            k = j + $element.height(),
            l = 0,
            m = "small" === this.getBreakpointSize() ? 20 : 50;
        return "undefined" != typeof c && c && (h = window.innerHeight ? window.innerHeight : h), l = g + h, "object" === ("undefined" == typeof b ? "undefined" : _typeof(b)) ? (d = b.top, e = b.bottom) : (d = b || m, e = b || m), !(j + d > l || g > k - e)
    },
    detectBrowsers: function() {
        var a = navigator.userAgent,
            b = {
                isChrome: a.indexOf("Chrome") > -1,
                isMsEdge: a.indexOf("Edge") > -1,
                isExplorer: a.indexOf("MSIE") > -1 || a.indexOf("Trident") > -1,
                isFirefox: a.indexOf("Firefox") > -1,
                isSafari: a.indexOf("Safari") > -1,
                isOpera: a.toLowerCase().indexOf("op") > -1
            };
        return b.isChrome && b.isSafari && (b.isSafari = !1), b.isChrome && b.isOpera && (b.isChrome = !1), b
    },
    getRandomString: function(a) {
        a = parseInt(a, 10) || 0, a = 0 > a ? 0 : a;
        for (var b = "abcdefghijklmnopqrstuvwxyz0123456789", c = [], d = 0; a > d; d++) c.push(b.charAt(Math.floor(Math.random() * b.length)));
        var e = c.join("");
        return e
    },
    getViewportSize: function() {
        var a = document.createElement("div");
        a.style.cssText = "position: fixed;top: 0;left: 0;bottom: 0;right: 0;", document.documentElement.insertBefore(a, document.documentElement.firstChild);
        var b = {
            width: a.offsetWidth,
            height: a.offsetHeight
        };
        return document.documentElement.removeChild(a), b
    },
    getEasingValue: function(a) {
        a = 0 > a ? 0 : a, a = a > 1 ? 1 : a;
        var b = a * (2 * Math.PI) - Math.PI,
            c = (Math.cos(b) + 1) / 2;
        return c
    },
    disableScroll: function() {
        var a = $(window),
            b = a.scrollTop();
        a.on("scroll.disableScroll mousewheel.disableScroll DOMMouseScroll.disableScroll touchmove.disableScroll", function(c) {
            c.preventDefault(), a.scrollTop(b)
        })
    },
    enableScroll: function() {
        var a = $(window);
        a.off("scroll.disableScroll mousewheel.disableScroll DOMMouseScroll.disableScroll touchmove.disableScroll")
    },
    limitNumber: function(a, b, c) {
        if (b > c) {
            var d = b;
            b = c, c = d
        }
        return Math.max(b, Math.min(c, a))
    },
    loadIgnoredResponsiveImages: function(a) {
        a.removeAttr("data-picture-ignore"), window.richsponsiveImage()
    },
    throttle: function(a, b, c) {
        b || (b = 250);
        var d, e;
        return function() {
            var f = c || this,
                g = +new Date,
                h = arguments;
            d && d + b > g ? (clearTimeout(e), e = setTimeout(function() {
                d = g, a.apply(f, h)
            }, b)) : (d = g, a.apply(f, h))
        }
    },
    measureTextWidth: function(a, b) {
        if (!a) return 0;
        var b = b || document.body,
            c = document.createElement("div");
        c.style.position = "absolute", c.style.visibility = "hidden", c.style.height = "auto", c.style.width = "auto", c.style.padding = "0", c.style.whiteSpace = "nowrap", c.textContent = a, b.appendChild(c);
        var d = c.clientWidth;
        return b.removeChild(c), d
    },
    getTransitionEndEvent: function() {
        var a = document.createElement("fakeelement"),
            b = {
                transition: "transitionend",
                OTransition: " oTransitionEnd",
                MozTransition: "transitionend",
                WebkitTransition: "webkitTransitionEnd"
            };
        for (var c in b)
            if (void 0 !== a.style[c]) return b[c];
    },
    template: function(a, b) {
        var c = /\W/.test(a) ? new Function("obj", "var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('" + a.replace(/[\r\t\n]/g, " ").replace(/'(?=[^%]*%>)/g, "	").split("'").join("\\'").split("	").join("'").replace(/<%=(.+?)%>/g, "',$1,'").split("<%").join("');").split("%>").join("p.push('") + "');}return p.join('');") : site.utils._templateCache[a] = site.utils._templateCache[a] || site.utils.template(document.getElementById(a).innerHTML);
        return b ? c(b) : c
    },
    scrollToElement: function(a, b, c) {
        return $element = a instanceof jQuery ? a : $(a), b = b || {}, b = $.extend({
            adjustment: 0,
            ease: "easeOutSine",
            duration: 800,
            container: $("body, html")
        }, b), 0 === $element.length ? !1 : (b.container.stop().animate({
            scrollTop: $element.offset().top - b.adjustment
        }, b.duration, b.ease, function() {
            c && c()
        }), b)
    },
    scrollIfNotInViewport: function(a, b) {
        a.offset().top - $(window).scrollTop();
        if (!this.isInViewport(a)) {
            var c = b ? a.offset().top - $(window).innerHeight() : a.offset().top - this.getStickyNavHeight();
            return $("html,body").animate({
                scrollTop: c
            }, 800), !0
        }
        return !1
    },
    isInViewport: function(a) {
        var b = $(window),
            c = this,
            d = {
                top: b.scrollTop() + c.getStickyNavHeight(),
                bottom: b.scrollTop() + b.height(),
                left: b.scrollLeft()
            };
        d.right = d.left + b.width();
        var e = a.offset();
        return e.right = e.left + a.outerWidth(), e.bottom = e.top + a.outerHeight(), !(d.right < e.left || d.left > e.right || d.bottom < e.top || d.top > e.bottom)
    },
    isLandRover: function() {
        return !!$("body#landrover").length
    },
    getTabbable: function(a) {
        var b = ["input:not([disabled]):not([hidden])", "select", "a[href]", "textarea", "button", '[tabindex]:not([tabindex^="-"])'],
            c = a.querySelectorAll(b.join(","));
        return c = site.utils.convertElementCollectionToArray(c), c = c.filter(function(a) {
            function b(a) {
                "hidden" === a.style.visibility || "none" === a.style.display ? c = !1 : a.parentNode && a.parentNode !== document.body && b(a.parentNode)
            }
            var c = !0;
            return a.offsetParent && 0 !== a.offsetWidth && 0 !== a.offsetHeight || (c = !1), b(a), c ? a : !1
        })
    },
    balanceElementHeight: function(a) {
        var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
            c = {};
        if (!a) return c;
        var d = [].slice.call(a),
            e = 0,
            f = d.map(function(a) {
                var b = a.getBoundingClientRect().height;
                return e += b, b
            }),
            g = function i(a, c) {
                var d = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                    e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                    f = !!a[e] && d + a[e] <= c - b;
                return f ? i(a, c, d + a[e], e + 1) : e
            },
            h = g(f, e / 2) + 1;
        return c.columns1 = d.slice(0, h), c.columns2 = d.slice(h, d.length), c.heightsArray = f, c
    },
    eventTrigger: function(a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            d = new CustomEvent(b, {
                detail: c
            });
        a.dispatchEvent(d)
    },
    convertElementCollectionToArray: function(a) {
        return a instanceof NodeList || a instanceof jQuery ? a instanceof NodeList ? [].slice.call(a) : a.get() : !1
    },
    randomiseElements: function(a) {
        var b = site.utils.convertElementCollectionToArray(a);
        if (b && b.length) {
            var c = b.map(function(a) {
                return a.cloneNode(!0)
            });
            c.sort(function() {
                return Math.random() - .5
            }), b.forEach(function(a, b) {
                return a.parentNode.replaceChild(c[b], a)
            })
        }
    },
    swiperEmitEventsOnElement: function(a) {
        a.on("init", function() {
            return site.utils.eventTrigger(a.el, "onInit")
        }), a.on("slideChangeTransitionStart", function() {
            return site.utils.eventTrigger(a.el, "onSlideChangeTransitionStart")
        }), a.on("slideChangeTransitionEnd", function() {
            return site.utils.eventTrigger(a.el, "onSlideChangeTransitionEnd")
        }), a.on("slidePrevTransitionEnd", function() {
            return site.utils.eventTrigger(a.el, "onSlidePrevTransitionEnd")
        }), a.on("slideNextTransitionEnd", function() {
            return site.utils.eventTrigger(a.el, "onSlideNextTransitionEnd")
        }), a.on("touchStart", function() {
            return site.utils.eventTrigger(a.el, "onTouchStart")
        }), a.on("touchEnd", function() {
            return site.utils.eventTrigger(a.el, "onTouchEnd")
        }), a.on("touchMove", function() {
            return site.utils.eventTrigger(a.el, "onTouchMove")
        })
    },
    swiperPreventTabbingIssues: function(a) {
        var b = site.utils.getTabbable(a.wrapperEl);
        b.forEach(function(a) {
            var b = a.getAttribute("tabindex");
            b && a.setAttribute("data-swiper-tabindex", b)
        });
        var c = [].slice.call(a.slides),
            d = function(a, b) {
                a.style.visibility = b
            },
            e = function() {
                c.forEach(function(a) {
                    return d(a, "visible")
                }), b.forEach(function(a) {
                    return a.setAttribute("tabindex", -1)
                })
            },
            f = function() {
                b.forEach(function(a) {
                    var b = a.getAttribute("data-swiper-tabindex");
                    a.removeAttribute("tabindex"), b && a.setAttribute("tabindex", b)
                }), c.forEach(function(b) {
                    b.classList.contains(a.params.slideActiveClass) || d(b, "hidden")
                })
            };
        a.el.addEventListener("onSlideChangeTransitionStart", function() {
            return e()
        }), a.el.addEventListener("onTouchMove", function() {
            return e()
        }), a.el.addEventListener("onSlideChangeTransitionEnd", function() {
            return f()
        }), a.el.addEventListener("onTouchEnd", function() {
            setTimeout(function() {
                f()
            }, 1e3)
        })
    },
    swiperDisableAutoplayOnSlideFocus: function(a) {
        if (a.originalParams.autoplay.enabled) {
            var b = function() {
                    return a.autoplay.stop()
                },
                c = function() {
                    return a.autoplay.start()
                };
            a.el.addEventListener("focusin", b, !1), a.el.addEventListener("focusout", c, !1)
        }
    },
    swiperIntegrateCustomPagination: function(a, b) {
        var c = b.pagination;
        if (c) {
            var d = a.params.loop ? 1 : 0,
                e = c.Pagination("getElement");
            e.addEventListener("afterChange", function(b) {
                return a.slideTo(parseInt(b.detail.pipTo, 10) + d)
            }, !1), e.addEventListener("liveRegionUpdate", function(b) {
                var c = a.a11y.liveRegion[0],
                    d = b.detail && b.detail.text;
                c && d && (c.innerHTML = d)
            }, !1), a.el.addEventListener("onTouchStart", function() {
                return c.Pagination("pause")
            }, !1);
            var f = function i() {
                    a.el.removeEventListener("onSlideChangeTransitionEnd", i, !1);
                    var b = "running" === c.Pagination("getPlayingStatus"),
                        d = a.realIndex !== c.Pagination("getCurrentPipIndex");
                    !b && d && (c.Pagination("clearTimer"), c.Pagination("updateActivePipByIndex", a.realIndex))
                },
                g = a.navigation.nextEl,
                h = a.navigation.prevEl;
            g && g.addEventListener("click", function() {
                return a.el.addEventListener("onSlideChangeTransitionEnd", f, !1)
            }), h && h.addEventListener("click", function() {
                return a.el.addEventListener("onSlideChangeTransitionEnd", f, !1)
            }), a.el.addEventListener("onTouchMove", function() {
                return a.el.addEventListener("onSlideChangeTransitionEnd", f, !1)
            })
        }
    },
    swiperSetAriaLiveOnFocusIn: function(a, b) {
        var c = a.a11y.liveRegion[0];
        b.arialiveOnFocusIn && c && (c.removeAttribute("aria-live"), a.el.parentNode.addEventListener("focusin", function() {
            return c.setAttribute("aria-live", "polite")
        }), a.el.parentNode.addEventListener("focusout", function() {
            return c.removeAttribute("aria-live")
        }))
    },
    swiperModifyNavigation: function(a, b) {
        var c = a.navigation.prevEl,
            d = a.navigation.nextEl;
        if (c && d) {
            var e = b.labels,
                f = b.isBlack,
                g = f ? "#000000" : "#FFFFFF",
                h = '\n      <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 14 24" style="enable-background:new 0 0 14 24;" xml:space="preserve">\n      <style type="text/css">.st0{fill-rule:evenodd;clip-rule:evenodd;fill:' + g + ';}</style><polygon class="st0" points="12.7,0 0,12 12.7,24 14,22.5 2.9,12 14,1.5 "/>\n      </svg>\n    ',
                i = '\n      <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 14 24" style="enable-background:new 0 0 14 24;" xml:space="preserve">\n      <style type="text/css">.st0{fill-rule:evenodd;clip-rule:evenodd;fill:' + g + ';}</style><polygon class="st0" points="1.3,24 14,12 1.3,0 0,1.5 11.1,12 0,22.5 "/>\n      </svg>\n    ',
                j = function(a, b, c) {
                    c && a.setAttribute("aria-label", c);
                    var d = document.createElement("div");
                    d.innerHTML = b, a.appendChild(d.querySelector("svg"))
                };
            j(c, h, e.previous), j(d, i, e.next)
        }
    },
    swiperA11yHelper: function(a) {
        var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        if (a) {
            var c = $.extend({
                pagination: null,
                arialiveOnFocusIn: !0,
                labels: {},
                isBlack: !1
            }, b);
            site.utils.swiperIntegrateCustomPagination(a, c), site.utils.swiperEmitEventsOnElement(a), site.utils.swiperPreventTabbingIssues(a), site.utils.swiperDisableAutoplayOnSlideFocus(a), site.utils.swiperSetAriaLiveOnFocusIn(a, c), site.utils.swiperModifyNavigation(a, c)
        }
    },
    assignYouTubeIframeAPIReady: function() {
        window.onYouTubeIframeAPIReady = function() {
            site.youTubeIframeAPIReady = !0, site.utils.eventTrigger(window, "YouTubePlayerLoaded")
        }
    },
    isElementVerticallyScrollable: function(a) {
        return a && a.scrollHeight > a.offsetHeight
    },
    checkDefined: function(a) {
        return void 0 !== a && null !== a
    },
    tablistNavigation: function(a) {
        var b = a.getAttribute("aria-orientation"),
            c = b && "vertical" === b,
            d = a.querySelectorAll('[role="tab"]'),
            e = site.utils.aria.KeyCode,
            f = function() {
                return d[0].focus()
            },
            g = function() {
                return d[d.length - 1].focus()
            },
            h = function(a) {
                var b = [].concat(_toConsumableArray(d)).findIndex(function(b) {
                    return b === a
                });
                0 === b ? g() : d[b - 1].focus()
            },
            i = function(a) {
                var b = [].concat(_toConsumableArray(d)).findIndex(function(b) {
                        return b === a
                    }),
                    c = d.length - 1;
                b === c ? f() : d[b + 1].focus()
            },
            j = function(a) {
                var b = a.keyCode;
                switch (b) {
                    case e.END:
                        a.preventDefault(), g();
                        break;
                    case e.HOME:
                        a.preventDefault(), f();
                        break;
                    case e.LEFT:
                    case e.UP:
                        c && (a.preventDefault(), h(a.currentTarget));
                        break;
                    case e.RIGHT:
                    case e.DOWN:
                        c && (a.preventDefault(), i(a.currentTarget))
                }
            },
            k = function(a) {
                var b = a.keyCode;
                switch (b) {
                    case e.LEFT:
                        h(a.currentTarget);
                        break;
                    case e.RIGHT:
                        i(a.currentTarget)
                }
            };
        d.forEach(function(a) {
            a.addEventListener("keydown", j, !1), c || a.addEventListener("keyup", k, !1)
        })
    },
    getStickyNavHeight: function(a) {
        var b = this,
            c = "number" != typeof a ? 0 : a,
            d = $(".dxnav-header"),
            e = d.length ? d : $("#header"),
            f = $(".InPageNavigation"),
            g = b.getBreakpointSize(),
            h = e.length > 0 ? "fixed" === e.css("position") : !1,
            i = f.length > 0 ? f.offset().top : null,
            j = d.length ? !0 : h,
            k = 0;
        if (!j) return k;
        var l = 960;
        if (null !== i && c >= i && "large" === g && "none" !== f.css("display")) return f.outerHeight();
        var m = window.innerWidth,
            n = function() {
                return m >= l && 200 > c ? 106 : 50
            },
            o = function() {
                var a = function(a) {
                        return a ? a.clientHeight : 0
                    },
                    b = a(document.querySelector(".dxnav__primary")),
                    c = a(document.querySelector(".dxnav__breadcrumbs-container")),
                    d = a(document.querySelector(".notificationBarsWrapper"));
                return b + c + d
            };
        return k = d.length ? o() : n()
    },
    dxSetTimeout: function(a, b) {
        setTimeout(a, b), window.appReadyEvent.initiated ? appReadyTimer.add(b) : window.appReadyEvent.timeout += b
    },
    addScriptForBazaarVoice: function(a) {
        if ("" !== a.trim() && 0 === document.querySelectorAll("script[src='" + a + "']").length) {
            var b = document.createElement("script");
            b.setAttribute("src", a), document.head.appendChild(b)
        }
    }
}, site.init();
//# sourceMappingURL=app.map